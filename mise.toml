[tools]
watchexec = "latest"
ghcup = "0.1.50.2"
[env]
_.path = [
    "~/.ghcup/bin",
    "~/.local/bin",
    "~/.cabal/bin"
]

[tasks.setup]
description = "Setup tools"
run = [
    "ghcup install ghc 9.12.2",
    "ghcup set ghc 9.12.2",
    "ghcup install cabal latest",
    "ghcup set cabal latest",
    "cabal update",
    "cabal install hpack --overwrite-policy=always",
    "cabal install ormolu --overwrite-policy=always"
]

[tasks.setup-hls]
description = "Setup HLS"
run = "ghcup compile hls -g 2.11.0.0 --ghc 9.12.2 --cabal-update"

[tasks.format]
description = "Format the code"
run = "ormolu --mode inplace $(find . -name '*.hs')"

[tasks.build]
description = "Build the project"
depends = ["format"]
run = "hpack && cabal build"

[tasks.test]
description = "Run the tests"
depends = ["build"]
run = """
    if [ -z '{{option(name=\"match\")}}' ]; then
        cabal test --test-show-details=direct
    else
        cabal test --test-show-details=direct --test-options=--match --test-options={{option(name=\"match\")}}
    fi
"""

[tasks.reset]
description = "Reset golden test files"
run = "trash .golden"

[tasks.exec]
description = "Run the project"
depends = ["build"]
run = "cabal exec malgo-exe"

[tasks.changelog]
description = "Generate changelog"
run = "git-chglog -o CHANGELOG.md"

[tasks.graph]
description = "Generate dependency graph"
run = [
    "zsh -c 'grep '^import' src/Malgo/**/*.hs | grep -v Malgo.Prelude | grep -v Malgo.Id | grep -v Malgo.SExpr | sort | uniq | python graph.py > dependencies.dot'",
    "dot -Tsvg dependencies.dot -o dependencies.svg",
]

[tasks.wiki]
description = "Create a new wiki file with date prefix"
run = """
    TITLE='{{option(name="title")}}'
    if [ -z "$TITLE" ]; then
        echo "Error: Please provide a title with --option title=\"your-title\""
        exit 1
    fi
    DATE=$(date +%Y-%m-%d)
    FILENAME="wiki/${DATE}-${TITLE}.md"

    if [ -f "$FILENAME" ]; then
        echo "File $FILENAME already exists!"
        exit 1
    fi

    cat > "$FILENAME" << EOF
# $TITLE

Created: $DATE

EOF

    echo "Created: $FILENAME"
"""
