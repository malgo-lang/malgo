module Infixing = {
    module {..} = import Builtin;
    module {..} = import Prelude;

    infixl 3 (<\);
    (<\) = {x f -> {y -> f x y}};

    infixl 3 (\>);
    (\>) = {f y -> f y};

    infixr 3 (</);
    (</) = {x f -> f x};

    infixr 3 (/>);
    (/>) = {f y -> {x -> f x y}};

    printInt = { x -> x |> toStringInt64 |> printString };

    main = {
        printInt (1L <\addInt64\> 2L);
        printInt (1L </addInt64/> 2L)
    };
}

-- Expected: 33
