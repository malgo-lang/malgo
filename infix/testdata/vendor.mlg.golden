(def vendor (lambda (:p1) (object (field get (case ((var :p1)) (clause (var items) (seq (symbol :None))))) (field put (object (field get (case ((var :p1)) (clause (symbol :Nil) (seq (prim print (literal "Nil case")) (prim print (symbol :Nil)) (symbol :None))) (clause (call (call (symbol :Cons) (var x)) (var xs)) (seq (prim print (literal "Cons case")) (prim print (call (call (symbol :Cons) (var x)) (var xs))) (call (symbol :Some) (var x)))))) (field put (case ((var :p1)) (clause (var items) (seq (access (call (var vendor) (var items)) put))))))))))
(def main (lambda () (seq (prim print (access (access (call (var vendor) (call (call (symbol :Cons) (literal 0)) (symbol :Nil))) put) get)))))
