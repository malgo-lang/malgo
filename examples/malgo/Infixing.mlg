module Infixing = {
  module {..} = import Builtin
  module {..} = import Prelude

  infixl 3 (<\)
  def (<\) = {x f -> {y -> f x y}}

  infixl 3 (\>)
  def (\>) = {f y -> f y}

  infixr 3 (</)
  def (</) = {x f -> f x}

  infixr 3 (/>)
  def (/>) = {f y -> {x -> f x y}}

  def printInt = { x -> x |> toStringInt64 |> printString }

  def main = {
    printInt (1L <\addInt64\> 2L);
    printInt (1L </addInt64/> 2L)
  }
}

-- Expected: 33
