module {..} = import "../../runtime/malgo/Builtin.mlg"
module {..} = import "../../runtime/malgo/Prelude.mlg"

infix 4 (<=)
def (<=) = { (Int64# x) (Int64# y) -> isTrue# (leInt64# x y) }

infixl 6 (-)
def (-) = { x y -> subInt64 x y }

def tarai = { x y z ->
  if (x <= y)
  { y }
  { tarai (tarai (x - 1i64) y z) (tarai (y - 1i64) z x) (tarai (z - 1i64) x y) }
}

def main = {
  putStrLn (toStringInt64 (tarai 12i64 6i64 0i64))
}