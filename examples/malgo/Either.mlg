module Either = {
  module {..} = import Builtin;
  module {..} = import Prelude;

  data Either a b = Left a | Right b;

  id = {x -> x};

  andThen = { _ (Left x) -> Left x
            | f (Right x) -> f x };

  main = {
    let x = Right 1;
    x |> andThen { x -> Right (add_Int32 x 1) } |> andThen { y -> Right (print_Int32 y) };
    x |> andThen { _ -> Left "error" }
      |> andThen { x -> Right (add_Int32 x 1) }
      |> { Left err -> putStrLn err
         | Right x -> print_Int32 x } 
  };
}

-- Expected: 2error
