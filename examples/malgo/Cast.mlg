module Cast = {
  import Builtin;
  import Prelude;

  foreign import unsafe_cast :: a -> b;

  castToInt64 :: a -> Int64;
  castToInt64 = { x -> unsafe_cast x };

  castToInt32 :: a -> Int32;
  castToInt32 = { x -> unsafe_cast x };

  data Maybe a = Nothing | Just a;

  castMaybe :: Maybe a -> b;
  castMaybe = { x -> unsafe_cast x };

  foreign import print_int32 :: Int32# -> ();

  main = {
    let x = 1;
    let x' = unsafe_cast x;
    let x'' = castToInt32 x;
    x |> { Int32# i -> print_int32 i }
  };
}

-- Expected: 1