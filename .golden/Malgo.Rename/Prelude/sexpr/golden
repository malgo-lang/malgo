(module
   "runtime/malgo/Prelude.mlg"
   ((((((./runtime/malgo/Prelude.mlg 129 1) (./runtime/malgo/Prelude.mlg 131 1))
         |>
         (fn
            ((clause
                (#Prelude.x_xxx #Prelude.f_xxx)
                (seq (do (apply #Prelude.f_xxx #Prelude.x_xxx))))))))
       ((((./runtime/malgo/Prelude.mlg 36 1) (./runtime/malgo/Prelude.mlg 42 1))
           tail
           (fn
              ((clause
                  ((con Cons ()) #Prelude.__xxx #Prelude.xs_xxx)
                  (seq (do #Prelude.xs_xxx)))
                 (clause (#Prelude.__xxx) (seq (do (apply exitFailure (tuple)))))))))
       ((((./runtime/malgo/Prelude.mlg 21 1) (./runtime/malgo/Prelude.mlg 24 1))
           snd
           (fn
              ((clause
                  ((tuple #Prelude.a_xxx #Prelude.b_xxx))
                  (seq (do #Prelude.b_xxx)))))))
       ((((./runtime/malgo/Prelude.mlg 156 1) (./runtime/malgo/Prelude.mlg 161 1))
           putStrLn
           (fn
              ((clause
                  (#Prelude.str_xxx)
                  (seq
                     (do (apply printString #Prelude.str_xxx))
                     (do (apply newline (tuple)))))))))
       ((((./runtime/malgo/Prelude.mlg 153 1) (./runtime/malgo/Prelude.mlg 155 1))
           putStr
           (fn
              ((clause
                  (#Prelude.str_xxx)
                  (seq (do (apply printString #Prelude.str_xxx))))))))
       ((((./runtime/malgo/Prelude.mlg 107 1) (./runtime/malgo/Prelude.mlg 114 1))
           punctuate
           (fn
              ((clause (#Prelude.__xxx (con Nil ())) (seq (do Nil)))
                 (clause
                    (#Prelude.__xxx (con Cons (#Prelude.x_xxx (con Nil ()))))
                    (seq (do (apply (apply Cons #Prelude.x_xxx) Nil))))
                 (clause
                    (#Prelude.sep_xxx (con Cons (#Prelude.x_xxx #Prelude.xs_xxx)))
                    (seq
                       (do
                          (apply
                             (apply Cons #Prelude.x_xxx)
                             (seq
                                (do
                                   (apply
                                      (apply Cons #Prelude.sep_xxx)
                                      (seq
                                         (do
                                            (apply
                                               (apply punctuate #Prelude.sep_xxx)
                                               #Prelude.xs_xxx))))))))))))))
       ((((./runtime/malgo/Prelude.mlg 165 1)
            (./runtime/malgo/Prelude.mlg 165 56))
           printInt64
           (fn
              ((clause
                  (#Prelude.i_xxx)
                  (seq
                     (do
                        (apply
                           printString
                           (seq (do (apply toStringInt64 #Prelude.i_xxx)))))))))))
       ((((./runtime/malgo/Prelude.mlg 162 1) (./runtime/malgo/Prelude.mlg 164 1))
           printInt32
           (fn
              ((clause
                  (#Prelude.i_xxx)
                  (seq
                     (do
                        (apply
                           printString
                           (seq (do (apply toStringInt32 #Prelude.i_xxx)))))))))))
       ((((./runtime/malgo/Prelude.mlg 50 1) (./runtime/malgo/Prelude.mlg 56 1))
           mapList
           (fn
              ((clause (#Prelude.__xxx (con Nil ())) (seq (do Nil)))
                 (clause
                    (#Prelude.f_xxx (con Cons (#Prelude.x_xxx #Prelude.xs_xxx)))
                    (seq
                       (do
                          (apply
                             (apply
                                Cons
                                (seq (do (apply #Prelude.f_xxx #Prelude.x_xxx))))
                             (seq
                                (do
                                   (apply
                                      (apply mapList #Prelude.f_xxx)
                                      #Prelude.xs_xxx)))))))))))
       ((((./runtime/malgo/Prelude.mlg 57 1) (./runtime/malgo/Prelude.mlg 63 1))
           listToString
           (fn
              ((clause ((con Nil ())) (seq (do (apply String# (string "")))))
                 (clause
                    ((con Cons ()) #Prelude.c_xxx #Prelude.cs_xxx)
                    (seq
                       (do
                          (apply
                             (apply consString #Prelude.c_xxx)
                             (seq (do (apply listToString #Prelude.cs_xxx)))))))))))
       ((((./runtime/malgo/Prelude.mlg 115 1) (./runtime/malgo/Prelude.mlg 123 1))
           isWhiteSpace
           (fn
              ((clause ((con Char# ()) (unboxed (char ' '))) (seq (do True)))
                 (clause ((con Char# ()) (unboxed (char '\n'))) (seq (do True)))
                 (clause ((con Char# ()) (unboxed (char '\r'))) (seq (do True)))
                 (clause ((con Char# ()) (unboxed (char '\t'))) (seq (do True)))
                 (clause (#Prelude.__xxx) (seq (do False)))))))
       ((((./runtime/malgo/Prelude.mlg 136 1) (./runtime/malgo/Prelude.mlg 141 1))
           if
           (fn
              ((clause
                  ((con True ()) #Prelude.t_xxx #Prelude.__xxx)
                  (seq (do (apply #Prelude.t_xxx (tuple)))))
                 (clause
                    ((con False ()) #Prelude.__xxx #Prelude.f_xxx)
                    (seq (do (apply #Prelude.f_xxx (tuple)))))))))
       ((((./runtime/malgo/Prelude.mlg 72 1) (./runtime/malgo/Prelude.mlg 79 1))
           tailString
           (fn
              ((clause
                  (#Prelude.str_xxx)
                  (seq
                     (do
                        (apply
                           (apply
                              (apply
                                 if
                                 (seq
                                    (do
                                       (apply
                                          (apply eqString #Prelude.str_xxx)
                                          (apply String# (string ""))))))
                              (fn ((clause () (seq (do #Prelude.str_xxx))))))
                           (fn
                              ((clause
                                  ()
                                  (seq
                                     (do
                                        (apply
                                           (apply
                                              (apply substring #Prelude.str_xxx)
                                              (apply Int64# (int64 1)))
                                           (seq
                                              (do
                                                 (apply
                                                    lengthString
                                                    #Prelude.str_xxx)))))))))))))))))
       ((((./runtime/malgo/Prelude.mlg 142 1) (./runtime/malgo/Prelude.mlg 145 1))
           unless
           (fn
              ((clause
                  (#Prelude.c_xxx #Prelude.tValue_xxx #Prelude.f_xxx)
                  (seq
                     (do
                        (apply
                           (apply
                              (apply if #Prelude.c_xxx)
                              (fn ((clause () (seq (do #Prelude.tValue_xxx))))))
                           #Prelude.f_xxx))))))))
       ((((./runtime/malgo/Prelude.mlg 5 1) (./runtime/malgo/Prelude.mlg 8 1))
           identity
           (fn ((clause (#Prelude.x_xxx) (seq (do #Prelude.x_xxx)))))))
       ((((./runtime/malgo/Prelude.mlg 64 1) (./runtime/malgo/Prelude.mlg 71 1))
           headString
           (fn
              ((clause
                  (#Prelude.str_xxx)
                  (seq
                     (do
                        (apply
                           (apply
                              (apply
                                 if
                                 (seq
                                    (do
                                       (apply
                                          (apply eqString #Prelude.str_xxx)
                                          (apply String# (string ""))))))
                              (fn ((clause () (seq (do Nothing))))))
                           (fn
                              ((clause
                                  ()
                                  (seq
                                     (do
                                        (apply
                                           Just
                                           (seq
                                              (do
                                                 (apply
                                                    (apply
                                                       atString
                                                       (apply Int64# (int64 0)))
                                                    #Prelude.str_xxx)))))))))))))))))
       ((((./runtime/malgo/Prelude.mlg 30 1) (./runtime/malgo/Prelude.mlg 35 1))
           head
           (fn
              ((clause
                  ((con Cons ()) #Prelude.x_xxx #Prelude.__xxx)
                  (seq (do #Prelude.x_xxx)))
                 (clause (#Prelude.__xxx) (seq (do (apply exitFailure (tuple)))))))))
       ((((./runtime/malgo/Prelude.mlg 18 1) (./runtime/malgo/Prelude.mlg 20 1))
           fst
           (fn
              ((clause
                  ((tuple #Prelude.a_xxx #Prelude.b_xxx))
                  (seq (do #Prelude.a_xxx)))))))
       ((((./runtime/malgo/Prelude.mlg 43 1) (./runtime/malgo/Prelude.mlg 49 1))
           foldl
           (fn
              ((clause
                  (#Prelude.__xxx #Prelude.z_xxx (con Nil ()))
                  (seq (do #Prelude.z_xxx)))
                 (clause
                    (#Prelude.f_xxx
                       #Prelude.z_xxx
                       (con Cons (#Prelude.x_xxx #Prelude.xs_xxx)))
                    (seq
                       (do
                          (apply
                             (apply
                                (apply foldl #Prelude.f_xxx)
                                (seq
                                   (do
                                      (apply
                                         (apply #Prelude.f_xxx #Prelude.z_xxx)
                                         #Prelude.x_xxx))))
                             #Prelude.xs_xxx))))))))
       ((((./runtime/malgo/Prelude.mlg 9 1) (./runtime/malgo/Prelude.mlg 13 1))
           const
           (fn
              ((clause (#Prelude.a_xxx #Prelude.__xxx) (seq (do #Prelude.a_xxx)))))))
       ((((./runtime/malgo/Prelude.mlg 146 1) (./runtime/malgo/Prelude.mlg 152 1))
           cond
           (fn
              ((clause
                  ((con Nil ()))
                  (seq (do (apply panic (apply String# (string "no branch"))))))
                 (clause
                    ((con Cons ())
                       (tuple (con True ()) #Prelude.x_xxx)
                       #Prelude.__xxx)
                    (seq (do (apply #Prelude.x_xxx (tuple)))))
                 (clause
                    ((con Cons ())
                       (tuple (con False ()) #Prelude.__xxx)
                       #Prelude.xs_xxx)
                    (seq (do (apply cond #Prelude.xs_xxx))))))))
       ((((./runtime/malgo/Prelude.mlg 101 1) (./runtime/malgo/Prelude.mlg 106 1))
           concatString
           (fn
              ((clause ((con Nil ())) (seq (do (apply String# (string "")))))
                 (clause
                    ((con Cons ()) #Prelude.x_xxx #Prelude.xs_xxx)
                    (seq
                       (do
                          (apply
                             (apply appendString #Prelude.x_xxx)
                             (seq (do (apply concatString #Prelude.xs_xxx)))))))))))
       ((((./runtime/malgo/Prelude.mlg 14 1) (./runtime/malgo/Prelude.mlg 17 1))
           case
           (fn
              ((clause
                  (#Prelude.x_xxx #Prelude.f_xxx)
                  (seq (do (apply #Prelude.f_xxx #Prelude.x_xxx))))))))
       ((((./runtime/malgo/Prelude.mlg 90 1) (./runtime/malgo/Prelude.mlg 100 1))
           dropWhileString
           (fn
              ((clause
                  (#Prelude.pred_xxx #Prelude.str_xxx)
                  (seq
                     (do
                        (apply
                           (apply
                              case
                              (seq (do (apply headString #Prelude.str_xxx))))
                           (fn
                              ((clause
                                  ((con Nothing ()))
                                  (seq (do #Prelude.str_xxx)))
                                 (clause
                                    ((con Just ()) #Prelude.c_xxx)
                                    (seq
                                       (do
                                          (apply
                                             (apply
                                                (apply
                                                   if
                                                   (seq
                                                      (do
                                                         (apply
                                                            #Prelude.pred_xxx
                                                            #Prelude.c_xxx))))
                                                (fn
                                                   ((clause
                                                       ()
                                                       (seq
                                                          (do
                                                             (apply
                                                                (apply
                                                                   dropWhileString
                                                                   #Prelude.pred_xxx)
                                                                (seq
                                                                   (do
                                                                      (apply
                                                                         tailString
                                                                         #Prelude.str_xxx))))))))))
                                             (fn
                                                ((clause
                                                    ()
                                                    (seq (do #Prelude.str_xxx)))))))))))))))))))
       ((((./runtime/malgo/Prelude.mlg 79 1) (./runtime/malgo/Prelude.mlg 90 1))
           takeWhileString
           (fn
              ((clause
                  (#Prelude.pred_xxx #Prelude.str_xxx)
                  (seq
                     (do
                        (apply
                           (apply
                              case
                              (seq (do (apply headString #Prelude.str_xxx))))
                           (fn
                              ((clause
                                  ((con Nothing ()))
                                  (seq (do #Prelude.str_xxx)))
                                 (clause
                                    ((con Just ()) #Prelude.c_xxx)
                                    (seq
                                       (do
                                          (apply
                                             (apply
                                                (apply
                                                   if
                                                   (seq
                                                      (do
                                                         (apply
                                                            #Prelude.pred_xxx
                                                            #Prelude.c_xxx))))
                                                (fn
                                                   ((clause
                                                       ()
                                                       (seq
                                                          (do
                                                             (apply
                                                                (apply
                                                                   consString
                                                                   #Prelude.c_xxx)
                                                                (seq
                                                                   (do
                                                                      (apply
                                                                         (apply
                                                                            takeWhileString
                                                                            #Prelude.pred_xxx)
                                                                         (seq
                                                                            (do
                                                                               (apply
                                                                                  tailString
                                                                                  #Prelude.str_xxx)))))))))))))
                                             (fn
                                                ((clause
                                                    ()
                                                    (seq
                                                       (do
                                                          (apply
                                                             String#
                                                             (string "")))))))))))))))))))))
       ((((./runtime/malgo/Prelude.mlg 133 1) (./runtime/malgo/Prelude.mlg 135 1))
           <|
           (fn
              ((clause
                  (#Prelude.f_xxx #Prelude.x_xxx)
                  (seq (do (apply #Prelude.f_xxx #Prelude.x_xxx))))))))
       ((((./runtime/malgo/Prelude.mlg 125 1) (./runtime/malgo/Prelude.mlg 127 1))
           <<
           (fn
              ((clause
                  (#Prelude.f_xxx #Prelude.g_xxx)
                  (seq
                     (do
                        (fn
                           ((clause
                               (#Prelude.x_xxx)
                               (seq
                                  (do
                                     (apply
                                        #Prelude.f_xxx
                                        (seq
                                           (do
                                              (apply
                                                 #Prelude.g_xxx
                                                 #Prelude.x_xxx)))))))))))))))))
      ((((./runtime/malgo/Prelude.mlg 4 1) (./runtime/malgo/Prelude.mlg 5 1))
          identity
          (-> #Prelude.a_xxx #Prelude.a_xxx))
         (((./runtime/malgo/Prelude.mlg 8 1) (./runtime/malgo/Prelude.mlg 9 1))
            const
            (-> #Prelude.a_xxx (-> #Prelude.b_xxx #Prelude.a_xxx)))
         (((./runtime/malgo/Prelude.mlg 13 1) (./runtime/malgo/Prelude.mlg 14 1))
            case
            (->
               #Prelude.a_xxx
               (-> (-> #Prelude.a_xxx #Prelude.b_xxx) #Prelude.b_xxx)))
         (((./runtime/malgo/Prelude.mlg 17 1) (./runtime/malgo/Prelude.mlg 18 1))
            fst
            (-> (tuple #Prelude.a_xxx #Prelude.b_xxx) #Prelude.a_xxx))
         (((./runtime/malgo/Prelude.mlg 20 1) (./runtime/malgo/Prelude.mlg 21 1))
            snd
            (-> (tuple #Prelude.a_xxx #Prelude.b_xxx) #Prelude.b_xxx))
         (((./runtime/malgo/Prelude.mlg 29 1) (./runtime/malgo/Prelude.mlg 30 1))
            head
            (-> (app List (#Prelude.a_xxx)) #Prelude.a_xxx))
         (((./runtime/malgo/Prelude.mlg 35 1) (./runtime/malgo/Prelude.mlg 36 1))
            tail
            (-> (app List (#Prelude.a_xxx)) (app List (#Prelude.a_xxx))))
         (((./runtime/malgo/Prelude.mlg 42 1) (./runtime/malgo/Prelude.mlg 43 1))
            foldl
            (->
               (-> #Prelude.a_xxx (-> #Prelude.b_xxx #Prelude.a_xxx))
               (-> #Prelude.a_xxx (-> (app List (#Prelude.b_xxx)) #Prelude.a_xxx))))
         (((./runtime/malgo/Prelude.mlg 49 1) (./runtime/malgo/Prelude.mlg 50 1))
            mapList
            (->
               (-> #Prelude.a_xxx #Prelude.b_xxx)
               (-> (app List (#Prelude.a_xxx)) (app List (#Prelude.b_xxx)))))
         (((./runtime/malgo/Prelude.mlg 56 1) (./runtime/malgo/Prelude.mlg 57 1))
            listToString
            (-> (app List (Char)) String))
         (((./runtime/malgo/Prelude.mlg 63 1) (./runtime/malgo/Prelude.mlg 64 1))
            headString
            (-> String (app Maybe (Char))))
         (((./runtime/malgo/Prelude.mlg 71 1) (./runtime/malgo/Prelude.mlg 72 1))
            tailString
            (-> String String))
         (((./runtime/malgo/Prelude.mlg 100 1)
             (./runtime/malgo/Prelude.mlg 101 1))
            concatString
            (-> (app List (String)) String))
         (((./runtime/malgo/Prelude.mlg 106 1)
             (./runtime/malgo/Prelude.mlg 107 1))
            punctuate
            (->
               #Prelude.a_xxx
               (-> (app List (#Prelude.a_xxx)) (app List (#Prelude.a_xxx)))))
         (((./runtime/malgo/Prelude.mlg 114 1)
             (./runtime/malgo/Prelude.mlg 115 1))
            isWhiteSpace
            (-> Char Bool))
         (((./runtime/malgo/Prelude.mlg 124 1)
             (./runtime/malgo/Prelude.mlg 125 1))
            <<
            (->
               (-> #Prelude.b_xxx #Prelude.c_xxx)
               (->
                  (-> #Prelude.a_xxx #Prelude.b_xxx)
                  (-> #Prelude.a_xxx #Prelude.c_xxx))))
         (((./runtime/malgo/Prelude.mlg 128 1)
             (./runtime/malgo/Prelude.mlg 129 1))
            |>
            (->
               #Prelude.a_xxx
               (-> (-> #Prelude.a_xxx #Prelude.b_xxx) #Prelude.b_xxx)))
         (((./runtime/malgo/Prelude.mlg 132 1)
             (./runtime/malgo/Prelude.mlg 133 1))
            <|
            (->
               (-> #Prelude.a_xxx #Prelude.b_xxx)
               (-> #Prelude.a_xxx #Prelude.b_xxx)))
         (((./runtime/malgo/Prelude.mlg 135 1)
             (./runtime/malgo/Prelude.mlg 136 1))
            if
            (->
               Bool
               (->
                  (-> (tuple) #Prelude.a_xxx)
                  (-> (-> (tuple) #Prelude.a_xxx) #Prelude.a_xxx))))
         (((./runtime/malgo/Prelude.mlg 141 1)
             (./runtime/malgo/Prelude.mlg 142 1))
            unless
            (->
               Bool
               (-> #Prelude.a_xxx (-> (-> (tuple) #Prelude.a_xxx) #Prelude.a_xxx))))
         (((./runtime/malgo/Prelude.mlg 145 1)
             (./runtime/malgo/Prelude.mlg 146 1))
            cond
            (->
               (app List ((tuple Bool (-> (tuple) #Prelude.a_xxx))))
               #Prelude.a_xxx))
         (((./runtime/malgo/Prelude.mlg 152 1)
             (./runtime/malgo/Prelude.mlg 153 1))
            putStr
            (-> String (tuple)))
         (((./runtime/malgo/Prelude.mlg 155 1)
             (./runtime/malgo/Prelude.mlg 156 1))
            putStrLn
            (-> String (tuple)))
         (((./runtime/malgo/Prelude.mlg 161 1)
             (./runtime/malgo/Prelude.mlg 162 1))
            printInt32
            (-> Int32 (tuple)))
         (((./runtime/malgo/Prelude.mlg 164 1)
             (./runtime/malgo/Prelude.mlg 165 1))
            printInt64
            (-> Int64 (tuple))))
      ((((./runtime/malgo/Prelude.mlg 24 6) (./runtime/malgo/Prelude.mlg 27 1))
          Maybe
          ((((./runtime/malgo/Prelude.mlg 24 12)
               (./runtime/malgo/Prelude.mlg 24 14))
              #Prelude.a_xxx))
          ((((./runtime/malgo/Prelude.mlg 24 16)
               (./runtime/malgo/Prelude.mlg 24 24))
              Nothing
              ())
             (((./runtime/malgo/Prelude.mlg 24 26)
                 (./runtime/malgo/Prelude.mlg 27 1))
                Just
                (#Prelude.a_xxx))))
         (((./runtime/malgo/Prelude.mlg 27 6) (./runtime/malgo/Prelude.mlg 29 1))
            List
            ((((./runtime/malgo/Prelude.mlg 27 11)
                 (./runtime/malgo/Prelude.mlg 27 13))
                #Prelude.a_xxx))
            ((((./runtime/malgo/Prelude.mlg 27 15)
                 (./runtime/malgo/Prelude.mlg 27 19))
                Nil
                ())
               (((./runtime/malgo/Prelude.mlg 27 21)
                   (./runtime/malgo/Prelude.mlg 29 1))
                  Cons
                  (#Prelude.a_xxx (app List (#Prelude.a_xxx)))))))
      ()
      ()
      ((((./runtime/malgo/Prelude.mlg 1 1) (./runtime/malgo/Prelude.mlg 4 1))
          Builtin
          all))))