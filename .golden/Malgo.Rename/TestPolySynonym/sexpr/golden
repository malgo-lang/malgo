(module
   "test/testcases/malgo/TestPolySynonym.mlg"
   ((((def
         first
         (fn
            ((clause
                ((record (fst #TestPolySynonym.x_5) (snd #TestPolySynonym.__6)))
                (seq (do #TestPolySynonym.x_5)))))))
       ((def
           main
           (fn
              ((clause
                  (#TestPolySynonym.$__8)
                  (seq
                     (let
                        #TestPolySynonym.x_7
                        (record
                           (fst (apply Int32# (int32 1)))
                           (snd (apply String# (string "hoge")))))
                     (do (opapp |> (apply first #TestPolySynonym.x_7) printInt32)))))))))
      ((sig
          first
          (->
             (record (fst #TestPolySynonym.a_3) (snd #TestPolySynonym.b_4))
             #TestPolySynonym.a_3))
         (sig main (app Fun0 ((tuple)))))
      ()
      ((type Fun0 (#TestPolySynonym.a_0) (-> (tuple) #TestPolySynonym.a_0))
         (type
            Pair
            (#TestPolySynonym.a_1 #TestPolySynonym.b_2)
            (record (fst #TestPolySynonym.b_2) (snd #TestPolySynonym.a_1))))
      ()
      ((import "runtime/malgo/Builtin.mlg" all)
         (import "runtime/malgo/Prelude.mlg" all))))