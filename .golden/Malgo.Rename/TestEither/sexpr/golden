(module
   "test/testcases/malgo/TestEither.mlg"
   ((((def id (fn ((clause (#TestEither.x_2) (seq (do #TestEither.x_2)))))))
       ((def
           andThen
           (fn
              ((clause
                  (#TestEither.__3 (con Left (#TestEither.x_4)))
                  (seq (do (apply Left #TestEither.x_4))))
                 (clause
                    (#TestEither.f_5 (con Right (#TestEither.x_6)))
                    (seq (do (apply #TestEither.f_5 #TestEither.x_6))))))))
       ((def
           main
           (fn
              ((clause
                  (#TestEither.__7)
                  (seq
                     (do
                        (opapp
                           |>
                           (apply Right (apply Int32# (int32 1)))
                           (fn
                              ((clause
                                  ((con Right (#TestEither.x_8)))
                                  (seq
                                     (do
                                        (apply
                                           putStr
                                           (parens
                                              (apply
                                                 toStringInt32
                                                 #TestEither.x_8))))))
                                 (clause
                                    (#TestEither.__9)
                                    (seq
                                       (do
                                          (apply
                                             putStrLn
                                             (apply
                                                String#
                                                (string "unreachable"))))))))))
                     (let #TestEither.x_10 (apply Right (apply Int32# (int32 1))))
                     (do
                        (opapp
                           |>
                           (opapp
                              |>
                              #TestEither.x_10
                              (apply
                                 andThen
                                 (fn
                                    ((clause
                                        (#TestEither.x_11)
                                        (seq
                                           (do
                                              (apply
                                                 Right
                                                 (parens
                                                    (apply
                                                       (apply
                                                          addInt32
                                                          #TestEither.x_11)
                                                       (apply Int32# (int32 1))))))))))))
                           (apply
                              andThen
                              (fn
                                 ((clause
                                     (#TestEither.y_12)
                                     (seq
                                        (do
                                           (opapp
                                              |>
                                              (opapp
                                                 |>
                                                 (opapp
                                                    |>
                                                    #TestEither.y_12
                                                    toStringInt32)
                                                 putStr)
                                              Right)))))))))
                     (do
                        (opapp
                           |>
                           (opapp
                              |>
                              (opapp
                                 |>
                                 #TestEither.x_10
                                 (apply
                                    andThen
                                    (fn
                                       ((clause
                                           (#TestEither.__13)
                                           (seq
                                              (do
                                                 (apply
                                                    Left
                                                    (apply
                                                       String#
                                                       (string "error"))))))))))
                              (apply
                                 andThen
                                 (fn
                                    ((clause
                                        (#TestEither.x_14)
                                        (seq
                                           (do
                                              (apply
                                                 Right
                                                 (parens
                                                    (apply
                                                       (apply
                                                          addInt32
                                                          #TestEither.x_14)
                                                       (apply Int32# (int32 1))))))))))))
                           (fn
                              ((clause
                                  ((con Left (#TestEither.err_15)))
                                  (seq (do (apply putStrLn #TestEither.err_15))))
                                 (clause
                                    ((con Right (#TestEither.x_16)))
                                    (seq
                                       (do
                                          (opapp
                                             |>
                                             (opapp
                                                |>
                                                #TestEither.x_16
                                                toStringInt32)
                                             putStrLn)))))))))))))))
      ()
      ((data
          Either
          (#TestEither.a_0 #TestEither.b_1)
          ((Left (#TestEither.a_0)) (Right (#TestEither.b_1)))))
      ()
      ()
      ((import "runtime/malgo/Builtin.mlg" all)
         (import "runtime/malgo/Prelude.mlg" all))))