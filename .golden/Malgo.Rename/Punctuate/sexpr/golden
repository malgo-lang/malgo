(module
   "test/testcases/malgo/Punctuate.mlg"
   ((((def <> appendString))
       ((def
           show
           (fn
              ((clause
                  ((con Symbol (#Punctuate.str_0)))
                  (seq
                     (do
                        (opapp
                           <>
                           (apply String# (string "Symbol "))
                           #Punctuate.str_0))))
                 (clause
                    ((con SInt (#Punctuate.int_1)))
                    (seq
                       (do
                          (opapp
                             <>
                             (apply String# (string "SInt "))
                             (apply toStringInt32 #Punctuate.int_1)))))
                 (clause
                    ((con SList (#Punctuate.ss_2)))
                    (seq
                       (do
                          (opapp
                             <>
                             (apply String# (string "SList ["))
                             (opapp
                                <>
                                (apply
                                   concatString
                                   (parens
                                      (apply
                                         (apply
                                            punctuate
                                            (apply String# (string ", ")))
                                         (parens
                                            (apply
                                               (apply mapList show)
                                               #Punctuate.ss_2)))))
                                (apply String# (string "]")))))))))))
       ((def
           main
           (fn
              ((clause
                  (#Punctuate.$__4)
                  (seq
                     (let
                        #Punctuate.x_3
                        (apply
                           SList
                           (apply
                              (apply
                                 Cons
                                 (apply Symbol (apply String# (string "x"))))
                              (apply
                                 (apply
                                    Cons
                                    (apply
                                       SList
                                       (apply
                                          (apply
                                             Cons
                                             (apply
                                                Symbol
                                                (apply String# (string "y"))))
                                          (apply
                                             (apply
                                                Cons
                                                (apply
                                                   SList
                                                   (apply
                                                      (apply
                                                         Cons
                                                         (apply
                                                            Symbol
                                                            (apply
                                                               String#
                                                               (string "z"))))
                                                      Nil)))
                                             Nil))))
                                 Nil))))
                     (do (apply putStrLn (parens (apply show #Punctuate.x_3)))))))))))
      ((sig <> (-> String (-> String String))) (sig show (-> SExpr String)))
      ((data
          SExpr
          ()
          ((Symbol (String)) (SInt (Int32)) (SList ((app List (SExpr)))))))
      ()
      ()
      ((import "runtime/malgo/Builtin.mlg" all)
         (import "runtime/malgo/Prelude.mlg" all))))