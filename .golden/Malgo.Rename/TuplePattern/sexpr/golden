(module
   "test/testcases/malgo/TuplePattern.mlg"
   ((((def
         main
         (fn
            ((clause
                (#TuplePattern.__0)
                (seq
                   (do
                      (opapp
                         |>
                         (tuple A B)
                         (fn
                            ((clause
                                ((tuple (con A ()) #TuplePattern.rest_1))
                                (seq
                                   (do
                                      (apply
                                         printString
                                         (apply String# (string "A"))))))
                               (clause
                                  ((tuple (con B ()) #TuplePattern.rest_2))
                                  (seq (do (tuple))))
                               (clause
                                  ((tuple (con C ()) #TuplePattern.rest_3))
                                  (seq (do (tuple)))))))))))))))
      ((sig main (-> (tuple) (tuple))))
      ((data T () ((A ()) (B ()) (C ()))))
      ()
      ()
      ((import "runtime/malgo/Builtin.mlg" all)
         (import "runtime/malgo/Prelude.mlg" all))))