(module
   "test/testcases/malgo/Test3.mlg"
   ((((((./test/testcases/malgo/Test3.mlg 6 1)
          (./test/testcases/malgo/Test3.mlg 8 1))
         |>
         (fn
            ((clause
                (#Test3.x_3 #Test3.f_4)
                (seq (do (apply #Test3.f_4 #Test3.x_3))))))))
       ((((./test/testcases/malgo/Test3.mlg 10 1)
            (./test/testcases/malgo/Test3.mlg 16 1))
           main
           (fn
              ((clause
                  ()
                  (seq
                     (do
                        (opapp
                           |>
                           (apply
                              (apply Cons A)
                              (seq (do (apply (apply Cons B) Nil))))
                           (fn
                              ((clause
                                  ((con
                                      Cons
                                      ((con A ())
                                         (con Cons ((con B ()) (con Nil ()))))))
                                  (seq
                                     (do (apply malgo_print_string (string "OK")))))
                                 (clause
                                    (#Test3.__5)
                                    (seq
                                       (do
                                          (apply
                                             malgo_print_string
                                             (string "WRONG"))))))))))))))))
      ((((./test/testcases/malgo/Test3.mlg 5 1)
           (./test/testcases/malgo/Test3.mlg 6 1))
          |>
          (-> #Test3.a_1 (-> (-> #Test3.a_1 #Test3.b_2) #Test3.b_2))))
      ((((./test/testcases/malgo/Test3.mlg 1 6)
           (./test/testcases/malgo/Test3.mlg 2 1))
          Tag
          ()
          ((((./test/testcases/malgo/Test3.mlg 1 12)
               (./test/testcases/malgo/Test3.mlg 1 14))
              A
              ())
             (((./test/testcases/malgo/Test3.mlg 1 16)
                 (./test/testcases/malgo/Test3.mlg 2 1))
                B
                ())))
         (((./test/testcases/malgo/Test3.mlg 2 6)
             (./test/testcases/malgo/Test3.mlg 4 1))
            List
            ((((./test/testcases/malgo/Test3.mlg 2 11)
                 (./test/testcases/malgo/Test3.mlg 2 13))
                #Test3.a_0))
            ((((./test/testcases/malgo/Test3.mlg 2 15)
                 (./test/testcases/malgo/Test3.mlg 2 19))
                Nil
                ())
               (((./test/testcases/malgo/Test3.mlg 2 21)
                   (./test/testcases/malgo/Test3.mlg 4 1))
                  Cons
                  (#Test3.a_0 (app List (#Test3.a_0)))))))
      ()
      (((((./test/testcases/malgo/Test3.mlg 8 1)
            (./test/testcases/malgo/Test3.mlg 10 1))
           malgo_print_string)
          malgo_print_string
          (-> String# (tuple))))
      ()))