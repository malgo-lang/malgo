(module
   "test/testcases/malgo/Null.mlg"
   ((((def
         |>
         (fn
            ((clause
                (#Null.x_xxx #Null.f_xxx)
                (seq (do (apply #Null.f_xxx #Null.x_xxx))))))))
       ((def
           mHead
           (fn
              ((clause ((con Nil ())) (seq (do Nothing)))
                 (clause
                    ((con Cons (#Null.p_xxx #Null.__xxx)))
                    (seq (do (apply Just #Null.p_xxx))))))))
       ((def
           isNothing
           (fn
              ((clause ((con Nothing ())) (seq (do True)))
                 (clause ((con Just (#Null.__xxx))) (seq (do False)))))))
       ((def
           null
           (fn
              ((clause
                  (#Null.as_xxx)
                  (seq
                     (do (apply isNothing (seq (do (apply mHead #Null.as_xxx)))))))))))
       ((def
           main
           (fn
              ((clause
                  ()
                  (seq
                     (do
                        (opapp
                           |>
                           (seq
                              (do
                                 (apply
                                    null
                                    (seq
                                       (do
                                          (apply
                                             (apply Cons True)
                                             (seq
                                                (do (apply (apply Cons True) Nil)))))))))
                           (fn
                              ((clause
                                  ((con False ()))
                                  (seq
                                     (do (apply malgo_print_string (string "OK")))))
                                 (clause
                                    ((con True ()))
                                    (seq (do (apply malgo_exit_failure (tuple))))))))))))))))
      ((sig isNothing (-> (app Maybe (#Null.a_xxx)) Bool))
         (sig mHead (-> (app List (#Null.a_xxx)) (app Maybe (#Null.a_xxx))))
         (sig null (-> (app List (#Null.a_xxx)) Bool))
         (sig |> (-> #Null.a_xxx (-> (-> #Null.a_xxx #Null.b_xxx) #Null.b_xxx))))
      ((data Maybe (#Null.a_xxx) ((Nothing ()) (Just (#Null.a_xxx))))
         (data Bool () ((False ()) (True ())))
         (data
            List
            (#Null.a_xxx)
            ((Nil ()) (Cons (#Null.a_xxx (app List (#Null.a_xxx)))))))
      ()
      ((foreign malgo_print_string (-> String# (tuple)))
         (foreign malgo_exit_failure (-> (tuple) #Null.a_xxx)))
      ()))