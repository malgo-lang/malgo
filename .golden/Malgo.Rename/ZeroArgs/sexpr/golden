(module
   "test/testcases/malgo/ZeroArgs.mlg"
   ((((def
         one
         (apply (fn ((clause () (seq (do (apply Int32# (int32 1))))))) (tuple))))
       ((def
           id
           (fn
              ((clause
                  (#ZeroArgs.x_xxx)
                  (seq
                     (do
                        (apply
                           (fn ((clause () (seq (do #ZeroArgs.x_xxx)))))
                           (tuple)))))))))
       ((def
           main
           (apply
              (fn
                 ((clause
                     ()
                     (seq
                        (do
                           (fn
                              ((clause
                                  ()
                                  (seq
                                     (do
                                        (apply
                                           printString
                                           (seq
                                              (do
                                                 (apply
                                                    toStringInt32
                                                    (seq (do (apply id one)))))))))))))))))
              (tuple)))))
      ((sig one Int32)
         (sig id (-> #ZeroArgs.a_xxx #ZeroArgs.a_xxx))
         (sig main (-> (tuple) (tuple))))
      ()
      ()
      ()
      ((import "runtime/malgo/Builtin.mlg" all)
         (import "runtime/malgo/Prelude.mlg" all))))