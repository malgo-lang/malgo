(module
   "test/testcases/malgo/With.mlg"
   ((((((./test/testcases/malgo/With.mlg 11 1)
          (./test/testcases/malgo/With.mlg 16 1))
         twice
         (fn
            ((clause
                (#With.k_xxx)
                (seq
                   (do (apply #With.k_xxx (tuple)))
                   (do (apply #With.k_xxx (tuple)))))))))
       ((((./test/testcases/malgo/With.mlg 16 1)
            (./test/testcases/malgo/With.mlg 21 1))
           printAndReturn
           (fn
              ((clause
                  (#With.str_xxx #With.k_xxx)
                  (seq
                     (do (apply printString #With.str_xxx))
                     (do (apply #With.k_xxx #With.str_xxx))))))))
       ((((./test/testcases/malgo/With.mlg 5 1)
            (./test/testcases/malgo/With.mlg 10 1))
           finally
           (fn
              ((clause
                  (#With.finalizer_xxx #With.k_xxx)
                  (seq
                     (let #With.x_xxx (apply #With.k_xxx (tuple)))
                     (do (apply #With.finalizer_xxx #With.x_xxx))))))))
       ((((./test/testcases/malgo/With.mlg 21 1)
            (./test/testcases/malgo/With.mlg 27 1))
           main
           (fn
              ((clause
                  ()
                  (seq
                     (do
                        (apply
                           (apply
                              finally
                              (fn
                                 ((clause
                                     ((tuple))
                                     (seq
                                        (do
                                           (apply
                                              printString
                                              (apply String# (string "end")))))))))
                           (fn
                              ((clause
                                  ()
                                  (seq
                                     (do
                                        (apply
                                           twice
                                           (fn
                                              ((clause
                                                  ()
                                                  (seq
                                                     (do
                                                        (apply
                                                           (apply
                                                              printAndReturn
                                                              (apply
                                                                 String#
                                                                 (string "foo")))
                                                           (fn
                                                              ((clause
                                                                  (#With.x_xxx)
                                                                  (seq
                                                                     (do
                                                                        (apply
                                                                           printString
                                                                           #With.x_xxx)))))))))))))))))))))))))))
      ((((./test/testcases/malgo/With.mlg 4 1)
           (./test/testcases/malgo/With.mlg 5 1))
          finally
          (->
             (-> #With.a_xxx #With.r_xxx)
             (-> (-> (tuple) #With.a_xxx) #With.r_xxx)))
         (((./test/testcases/malgo/With.mlg 10 1)
             (./test/testcases/malgo/With.mlg 11 1))
            twice
            (-> (-> (tuple) #With.a_xxx) #With.a_xxx)))
      ()
      ()
      ()
      ((((./test/testcases/malgo/With.mlg 1 1)
           (./test/testcases/malgo/With.mlg 2 1))
          "runtime/malgo/Builtin.mlg"
          all)
         (((./test/testcases/malgo/With.mlg 2 1)
             (./test/testcases/malgo/With.mlg 4 1))
            "runtime/malgo/Prelude.mlg"
            all))))