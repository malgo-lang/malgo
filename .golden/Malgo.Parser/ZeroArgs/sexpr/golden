(module
   "test/testcases/malgo/ZeroArgs.mlg"
   ((import "runtime/malgo/Builtin.mlg" all)
      (import "runtime/malgo/Prelude.mlg" all)
      (sig one Int32)
      (def one (apply (fn ((clause () (seq (do (int32 1)))))) (tuple)))
      (sig id (-> a a))
      (def
         id
         (fn
            ((clause
                (x)
                (seq (do (apply (fn ((clause () (seq (do x))))) (tuple))))))))
      (sig main (block (tuple)))
      (def
         main
         (apply
            (fn
               ((clause
                   ()
                   (seq
                      (do
                         (fn
                            ((clause
                                ()
                                (seq
                                   (do
                                      (apply
                                         printString
                                         (parens
                                            (apply
                                               toStringInt32
                                               (parens (apply id one)))))))))))))))
            (tuple)))))