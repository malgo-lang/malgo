(module
   "test/testcases/malgo/TestPolySynonym.mlg"
   ((import "runtime/malgo/Builtin.mlg" all)
      (import "runtime/malgo/Prelude.mlg" all)
      (type Fun0 (a) (block a))
      (type Pair (a b) (record (fst b) (snd a)))
      (sig first (-> (record (fst a) (snd b)) a))
      (def first (fn ((clause ((record (fst x) (snd _))) (seq (do x))))))
      (sig main (app Fun0 ((tuple))))
      (def
         main
         (fn
            ((clause
                ()
                (seq
                   (let x (record (fst (int32 1)) (snd (string "hoge"))))
                   (do (opapp |> (apply first x) printInt32)))))))))