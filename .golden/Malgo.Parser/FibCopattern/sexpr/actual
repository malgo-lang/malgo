(module
   "test/testcases/malgo/FibCopattern.mlg"
   ((import "runtime/malgo/Builtin.mlg" all)
      (import "runtime/malgo/Prelude.mlg" all)
      (type Stream (a) (record (head a) (tail (app Stream (a)))))
      (def
         zipWith
         (codata
            ((project (apply (apply (apply # f) xs) ys) "head")
               (apply (apply f (project xs "head")) (project ys "head")))
            ((project (apply (apply (apply # f) xs) ys) "tail")
               (apply
                  (apply (apply zipWith f) (project xs "tail"))
                  (project ys "tail")))))
      (def
         fib
         (codata
            ((project # "head") (int64 1))
            ((project (project # "tail") "head") (int64 1))
            ((project (project # "tail") "tail")
               (apply (apply (apply zipWith addInt64) fib) (project fib "tail")))))
      (def
         main
         (fn
            ((clause
                ()
                (seq
                   (do
                      (apply
                         printString
                         (apply
                            toStringInt64
                            (project
                               (project
                                  (project
                                     (project
                                        (project (project fib "tail") "tail")
                                        "tail")
                                     "tail")
                                  "tail")
                               "head")))))))))))