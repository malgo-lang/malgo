Program
 { topVars = [], topFuns =
  [
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "Cons_curry", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 24 } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath
        { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 25 } }, Meta
     { meta = AnyT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath
        { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 26 } } ],
    [ AnyT, AnyT ] :-> AnyT, Let
    [ LocalDef
     { _variable = Meta
      { meta = SumT
       [ Con
        ( Data "test/testcases/malgo/DataDef.mlg.Nil" ) [], Con
        ( Data "test/testcases/malgo/DataDef.mlg.Cons" )
        [ AnyT, AnyT ] ], id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath
         { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 27 } }, typ = SumT
      [ Con
       ( Data "test/testcases/malgo/DataDef.mlg.Nil" ) [], Con
       ( Data "test/testcases/malgo/DataDef.mlg.Cons" )
       [ AnyT, AnyT ] ], _object = Pack
      ( SumT
       [ Con
        ( Data "test/testcases/malgo/DataDef.mlg.Nil" ) [], Con
        ( Data "test/testcases/malgo/DataDef.mlg.Cons" )
        [ AnyT, AnyT ] ] )
      ( Con ( Data "test/testcases/malgo/DataDef.mlg.Cons" ) [ AnyT, AnyT ] )
      [ Var
       ( Meta
        { meta = AnyT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath
           { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 25 } } ), Var
       ( Meta
        { meta = AnyT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath
           { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 26 } } ) ] } ]
    ( Cast AnyT
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "test/testcases/malgo/DataDef.mlg.Nil" ) [], Con
         ( Data "test/testcases/malgo/DataDef.mlg.Cons" )
         [ AnyT, AnyT ] ], id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath
          { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 27 } } ) ) ) ),
   ( Meta
    { meta = [ Int64T ] :-> AnyT, id = Id
     { name = "Int#", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath
        { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 18 } } ], [ Int64T ] :-> AnyT, Let
    [ LocalDef
     { _variable = Meta
      { meta = SumT
       [ Con
        ( Data "test/testcases/malgo/DataDef.mlg.Int#" ) [ Int64T ] ], id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath
         { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 19 } }, typ = SumT
      [ Con
       ( Data "test/testcases/malgo/DataDef.mlg.Int#" ) [ Int64T ] ], _object = Pack
      ( SumT
       [ Con ( Data "test/testcases/malgo/DataDef.mlg.Int#" ) [ Int64T ] ] )
      ( Con ( Data "test/testcases/malgo/DataDef.mlg.Int#" ) [ Int64T ] )
      [ Var
       ( Meta
        { meta = Int64T, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath
           { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 18 } } ) ] } ]
    ( Cast AnyT
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "test/testcases/malgo/DataDef.mlg.Int#" ) [ Int64T ] ], id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath
          { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 19 } } ) ) ) ),
   ( Meta
    { meta = [] :-> AnyT, id = Id
     { name = "Nil", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External } }, [], [] :-> AnyT, Let
    [ LocalDef
     { _variable = Meta
      { meta = SumT
       [ Con
        ( Data "test/testcases/malgo/DataDef.mlg.Nil" ) [], Con
        ( Data "test/testcases/malgo/DataDef.mlg.Cons" )
        [ AnyT, AnyT ] ], id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath
         { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 20 } }, typ = SumT
      [ Con
       ( Data "test/testcases/malgo/DataDef.mlg.Nil" ) [], Con
       ( Data "test/testcases/malgo/DataDef.mlg.Cons" )
       [ AnyT, AnyT ] ], _object = Pack
      ( SumT
       [ Con
        ( Data "test/testcases/malgo/DataDef.mlg.Nil" ) [], Con
        ( Data "test/testcases/malgo/DataDef.mlg.Cons" )
        [ AnyT, AnyT ] ] )
      ( Con ( Data "test/testcases/malgo/DataDef.mlg.Nil" ) [] ) [] } ]
    ( Cast AnyT
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "test/testcases/malgo/DataDef.mlg.Nil" ) [], Con
         ( Data "test/testcases/malgo/DataDef.mlg.Cons" )
         [ AnyT, AnyT ] ], id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath
          { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 20 } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "Cons", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath
        { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 21 } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath
         { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 28 } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath
          { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 22 } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "Cons_curry", moduleName = Artifact
          ( ArtifactPath
           { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 24 } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath
            { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 21 } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath
            { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 22 } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath
          { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 28 } } ) ) ) ),
   ( Meta
    { meta = [ Int64T ] :-> StringT, id = Id
     { name = "malgo_int64_t_to_string", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath
        { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 29 } } ], [ Int64T ] :-> StringT, RawCall "malgo_int64_t_to_string"
    ( [ Int64T ] :-> StringT )
    [ Var
     ( Meta
      { meta = Int64T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath
         { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 29 } } ) ] ),
   ( Meta
    { meta = [ StringT ] :-> SumT
     [ Con Tuple [] ], id = Id
     { name = "malgo_print_string", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External } },
    [ Meta
     { meta = StringT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath
        { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 30 } } ], [ StringT ] :-> SumT
    [ Con Tuple [] ], RawCall "malgo_print_string"
    ( [ StringT ] :-> SumT [ Con Tuple [] ] )
    [ Var
     ( Meta
      { meta = StringT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath
         { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 30 } } ) ] ),
   ( Meta
    { meta =
     [ SumT [ Con Tuple [] ] ] :-> SumT
     [ Con Tuple [] ], id = Id
     { name = "main", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External } },
    [ Meta
     { meta = SumT
      [ Con Tuple [] ], id = Id
      { name = "$_", moduleName = Artifact
       ( ArtifactPath
        { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 31 } } ],
    [ SumT [ Con Tuple [] ] ] :-> SumT
    [ Con Tuple [] ], Assign
    ( Meta
     { meta = [ AnyT ] :-> SumT
      [ Con Tuple [] ], id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath
        { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 38 } } )
    ( Let
     [ LocalDef
      { _variable = Meta
       { meta = [ AnyT ] :-> SumT
        [ Con Tuple [] ], id = Id
        { name = "fun", moduleName = Artifact
         ( ArtifactPath
          { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 37 } }, typ = [ AnyT ] :-> SumT
       [ Con Tuple [] ], _object = Fun
       [ Meta
        { meta = AnyT, id = Id
         { name = "int#", moduleName = Artifact
          ( ArtifactPath
           { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 32 } } ]
       ( Match
        ( Cast
         ( SumT
          [ Con ( Data "test/testcases/malgo/DataDef.mlg.Int#" ) [ Int64T ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "int#", moduleName = Artifact
             ( ArtifactPath
              { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 32 } } ) ) )
        [ Unpack
         ( Con ( Data "test/testcases/malgo/DataDef.mlg.Int#" ) [ Int64T ] )
         [ Meta
          { meta = Int64T, id = Id
           { name = "p", moduleName = Artifact
            ( ArtifactPath
             { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 33 } } ]
         ( Assign
          ( Meta
           { meta = StringT, id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath
              { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 35 } } )
          ( Assign
           ( Meta
            { meta = StringT, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath
               { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 34 } } )
           ( Call
            ( Var
             ( Meta
              { meta = [ Int64T ] :-> StringT, id = Id
               { name = "malgo_int64_t_to_string", moduleName = Artifact
                ( ArtifactPath
                 { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External } } ) )
            [ Var
             ( Meta
              { meta = Int64T, id = Id
               { name = "p", moduleName = Artifact
                ( ArtifactPath
                 { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 33 } } ) ] )
           ( Cast StringT
            ( Var
             ( Meta
              { meta = StringT, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath
                 { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 34 } } ) ) ) )
          ( Assign
           ( Meta
            { meta = SumT
             [ Con Tuple [] ], id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath
               { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 36 } } )
           ( Call
            ( Var
             ( Meta
              { meta = [ StringT ] :-> SumT
               [ Con Tuple [] ], id = Id
               { name = "malgo_print_string", moduleName = Artifact
                ( ArtifactPath
                 { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External } } ) )
            [ Var
             ( Meta
              { meta = StringT, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath
                 { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 35 } } ) ] )
           ( Cast
            ( SumT [ Con Tuple [] ] )
            ( Var
             ( Meta
              { meta = SumT
               [ Con Tuple [] ], id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath
                 { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 36 } } ) ) ) ) ) ] ) } ]
     ( Atom
      ( Var
       ( Meta
        { meta = [ AnyT ] :-> SumT
         [ Con Tuple [] ], id = Id
         { name = "fun", moduleName = Artifact
          ( ArtifactPath
           { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 37 } } ) ) ) )
    ( Assign
     ( Meta
      { meta = AnyT, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath
         { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 40 } } )
     ( Assign
      ( Meta
       { meta = AnyT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath
          { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 39 } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ Int64T ] :-> AnyT, id = Id
          { name = "Int#", moduleName = Artifact
           ( ArtifactPath
            { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External } } ) )
       [ Unboxed ( Int64 1 ) ] )
      ( Cast AnyT
       ( Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath
            { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 39 } } ) ) ) )
     ( Assign
      ( Meta
       { meta = SumT
        [ Con Tuple [] ], id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath
          { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 41 } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ AnyT ] :-> SumT
          [ Con Tuple [] ], id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath
            { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 38 } } ) )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath
            { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 40 } } ) ] )
      ( Cast
       ( SumT [ Con Tuple [] ] )
       ( Var
        ( Meta
         { meta = SumT
          [ Con Tuple [] ], id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath
            { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 41 } } ) ) ) ) ) ) ], extFuns =
  [
   ( "malgo_int64_t_to_string", [ Int64T ] :-> StringT ),
   ( "malgo_print_string", [ StringT ] :-> SumT [ Con Tuple [] ] ) ] }
DsState
 { _nameEnv = fromList
  [
   ( Id
    { name = "Nil", moduleName = Artifact
     ( ArtifactPath
      { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External }, Meta
    { meta = [] :-> AnyT, id = Id
     { name = "Nil", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External } } ),
   ( Id
    { name = "main", moduleName = Artifact
     ( ArtifactPath
      { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External }, Meta
    { meta =
     [ SumT [ Con Tuple [] ] ] :-> SumT
     [ Con Tuple [] ], id = Id
     { name = "main", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External } } ),
   ( Id
    { name = "Cons", moduleName = Artifact
     ( ArtifactPath
      { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External }, Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "Cons", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External } } ),
   ( Id
    { name = "Int#", moduleName = Artifact
     ( ArtifactPath
      { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External }, Meta
    { meta = [ Int64T ] :-> AnyT, id = Id
     { name = "Int#", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External } } ),
   ( Id
    { name = "malgo_print_string", moduleName = Artifact
     ( ArtifactPath
      { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External }, Meta
    { meta = [ StringT ] :-> SumT
     [ Con Tuple [] ], id = Id
     { name = "malgo_print_string", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External } } ),
   ( Id
    { name = "$_", moduleName = Artifact
     ( ArtifactPath
      { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Internal 17 }, Meta
    { meta = SumT
     [ Con Tuple [] ], id = Id
     { name = "$_", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 31 } } ),
   ( Id
    { name = "malgo_int64_t_to_string", moduleName = Artifact
     ( ArtifactPath
      { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External }, Meta
    { meta = [ Int64T ] :-> StringT, id = Id
     { name = "malgo_int64_t_to_string", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External } } ),
   ( Id
    { name = "x", moduleName = Artifact
     ( ArtifactPath
      { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Internal 1 }, Meta
    { meta = Int64T, id = Id
     { name = "p", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 33 } } ) ], _signatureMap = fromList
  [
   ( Id
    { name = "Nil", moduleName = Artifact
     ( ArtifactPath
      { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External }, Forall
    [ Id
     { name = "test/testcases/malgo/DataDef.mlg.#a_0", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Internal 2 } ]
    ( TyApp
     ( TyCon
      ( Id
       { name = "List", moduleName = Artifact
        ( ArtifactPath
         { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External } ) )
     ( TyVar
      ( Id
       { name = "test/testcases/malgo/DataDef.mlg.#a_0", moduleName = Artifact
        ( ArtifactPath
         { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Internal 2 } ) ) ) ),
   ( Id
    { name = "main", moduleName = Artifact
     ( ArtifactPath
      { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External }, Forall []
    ( TyArr ( TyTuple 0 ) ( TyTuple 0 ) ) ),
   ( Id
    { name = "Cons", moduleName = Artifact
     ( ArtifactPath
      { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External }, Forall
    [ Id
     { name = "test/testcases/malgo/DataDef.mlg.#a_0", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Internal 2 } ]
    ( TyArr
     ( TyVar
      ( Id
       { name = "test/testcases/malgo/DataDef.mlg.#a_0", moduleName = Artifact
        ( ArtifactPath
         { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Internal 2 } ) )
     ( TyArr
      ( TyApp
       ( TyCon
        ( Id
         { name = "List", moduleName = Artifact
          ( ArtifactPath
           { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External } ) )
       ( TyVar
        ( Id
         { name = "test/testcases/malgo/DataDef.mlg.#a_0", moduleName = Artifact
          ( ArtifactPath
           { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Internal 2 } ) ) )
      ( TyApp
       ( TyCon
        ( Id
         { name = "List", moduleName = Artifact
          ( ArtifactPath
           { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External } ) )
       ( TyVar
        ( Id
         { name = "test/testcases/malgo/DataDef.mlg.#a_0", moduleName = Artifact
          ( ArtifactPath
           { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Internal 2 } ) ) ) ) ) ),
   ( Id
    { name = "Int#", moduleName = Artifact
     ( ArtifactPath
      { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External }, Forall []
    ( TyArr ( TyPrim Int64T )
     ( TyCon
      ( Id
       { name = "Int", moduleName = Artifact
        ( ArtifactPath
         { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External } ) ) ) ),
   ( Id
    { name = "malgo_print_string", moduleName = Artifact
     ( ArtifactPath
      { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External }, Forall []
    ( TyArr ( TyPrim StringT ) ( TyTuple 0 ) ) ),
   ( Id
    { name = "$_", moduleName = Artifact
     ( ArtifactPath
      { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Internal 17 }, Forall []
    ( TyTuple 0 ) ),
   ( Id
    { name = "malgo_int64_t_to_string", moduleName = Artifact
     ( ArtifactPath
      { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External }, Forall []
    ( TyArr ( TyPrim Int64T ) ( TyPrim StringT ) ) ),
   ( Id
    { name = "x", moduleName = Artifact
     ( ArtifactPath
      { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Internal 1 }, Forall [] ( TyPrim Int64T ) ) ], _typeDefMap = fromList
  [
   ( Id
    { name = "Int", moduleName = Artifact
     ( ArtifactPath
      { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External }, TypeDef
    { _typeConstructor = TyCon
     ( Id
      { name = "Int", moduleName = Artifact
       ( ArtifactPath
        { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External } ), _typeParameters = [], _valueConstructors =
     [
      ( Id
       { name = "Int#", moduleName = Artifact
        ( ArtifactPath
         { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External }, Forall []
       ( TyArr ( TyPrim Int64T )
        ( TyCon
         ( Id
          { name = "Int", moduleName = Artifact
           ( ArtifactPath
            { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External } ) ) ) ) ] } ),
   ( Id
    { name = "Double#", moduleName = ModuleName "Builtin", sort = External }, TypeDef
    { _typeConstructor = TyPrim DoubleT, _typeParameters = [], _valueConstructors = [] } ),
   ( Id
    { name = "Int32#", moduleName = ModuleName "Builtin", sort = External }, TypeDef
    { _typeConstructor = TyPrim Int32T, _typeParameters = [], _valueConstructors = [] } ),
   ( Id
    { name = "Ptr#", moduleName = ModuleName "Builtin", sort = External }, TypeDef
    { _typeConstructor = TyPtr, _typeParameters = [], _valueConstructors = [] } ),
   ( Id
    { name = "Char#", moduleName = ModuleName "Builtin", sort = External }, TypeDef
    { _typeConstructor = TyPrim CharT, _typeParameters = [], _valueConstructors = [] } ),
   ( Id
    { name = "Int64#", moduleName = ModuleName "Builtin", sort = External }, TypeDef
    { _typeConstructor = TyPrim Int64T, _typeParameters = [], _valueConstructors = [] } ),
   ( Id
    { name = "List", moduleName = Artifact
     ( ArtifactPath
      { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External }, TypeDef
    { _typeConstructor = TyCon
     ( Id
      { name = "List", moduleName = Artifact
       ( ArtifactPath
        { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External } ), _typeParameters =
     [ Id
      { name = "test/testcases/malgo/DataDef.mlg.#a_0", moduleName = Artifact
       ( ArtifactPath
        { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Internal 2 } ], _valueConstructors =
     [
      ( Id
       { name = "Nil", moduleName = Artifact
        ( ArtifactPath
         { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External }, Forall
       [ Id
        { name = "test/testcases/malgo/DataDef.mlg.#a_0", moduleName = Artifact
         ( ArtifactPath
          { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Internal 2 } ]
       ( TyApp
        ( TyCon
         ( Id
          { name = "List", moduleName = Artifact
           ( ArtifactPath
            { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External } ) )
        ( TyVar
         ( Id
          { name = "test/testcases/malgo/DataDef.mlg.#a_0", moduleName = Artifact
           ( ArtifactPath
            { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Internal 2 } ) ) ) ),
      ( Id
       { name = "Cons", moduleName = Artifact
        ( ArtifactPath
         { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External }, Forall
       [ Id
        { name = "test/testcases/malgo/DataDef.mlg.#a_0", moduleName = Artifact
         ( ArtifactPath
          { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Internal 2 } ]
       ( TyArr
        ( TyVar
         ( Id
          { name = "test/testcases/malgo/DataDef.mlg.#a_0", moduleName = Artifact
           ( ArtifactPath
            { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Internal 2 } ) )
        ( TyArr
         ( TyApp
          ( TyCon
           ( Id
            { name = "List", moduleName = Artifact
             ( ArtifactPath
              { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External } ) )
          ( TyVar
           ( Id
            { name = "test/testcases/malgo/DataDef.mlg.#a_0", moduleName = Artifact
             ( ArtifactPath
              { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Internal 2 } ) ) )
         ( TyApp
          ( TyCon
           ( Id
            { name = "List", moduleName = Artifact
             ( ArtifactPath
              { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External } ) )
          ( TyVar
           ( Id
            { name = "test/testcases/malgo/DataDef.mlg.#a_0", moduleName = Artifact
             ( ArtifactPath
              { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Internal 2 } ) ) ) ) ) ) ] } ),
   ( Id
    { name = "String#", moduleName = ModuleName "Builtin", sort = External }, TypeDef
    { _typeConstructor = TyPrim StringT, _typeParameters = [], _valueConstructors = [] } ),
   ( Id
    { name = "a", moduleName = Artifact
     ( ArtifactPath
      { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Internal 0 }, TypeDef
    { _typeConstructor = TyVar
     ( Id
      { name = "test/testcases/malgo/DataDef.mlg.#a_0", moduleName = Artifact
       ( ArtifactPath
        { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Internal 2 } ), _typeParameters = [], _valueConstructors = [] } ),
   ( Id
    { name = "Float#", moduleName = ModuleName "Builtin", sort = External }, TypeDef
    { _typeConstructor = TyPrim FloatT, _typeParameters = [], _valueConstructors = [] } ) ], _kindCtx = fromList
  [
   ( Id
    { name = "t", moduleName = Artifact
     ( ArtifactPath
      { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Internal 16 }, TyMeta
    ( Id
     { name = "kt", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 15 } ) ),
   ( Id
    { name = "Double#", moduleName = ModuleName "Builtin", sort = External }, TYPE ),
   ( Id
    { name = "Int32#", moduleName = ModuleName "Builtin", sort = External }, TYPE ),
   ( Id
    { name = "Ptr#", moduleName = ModuleName "Builtin", sort = External }, TyArr TYPE TYPE ),
   ( Id
    { name = "Char#", moduleName = ModuleName "Builtin", sort = External }, TYPE ),
   ( Id
    { name = "Int64#", moduleName = ModuleName "Builtin", sort = External }, TYPE ),
   ( Id
    { name = "List", moduleName = Artifact
     ( ArtifactPath
      { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = External }, TyArr TYPE TYPE ),
   ( Id
    { name = "t", moduleName = Artifact
     ( ArtifactPath
      { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Internal 6 }, TyMeta
    ( Id
     { name = "kt", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 5 } ) ),
   ( Id
    { name = "String#", moduleName = ModuleName "Builtin", sort = External }, TYPE ),
   ( Id
    { name = "t", moduleName = Artifact
     ( ArtifactPath
      { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Internal 4 }, TyMeta
    ( Id
     { name = "kt", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 3 } ) ),
   ( Id
    { name = "t", moduleName = Artifact
     ( ArtifactPath
      { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Internal 10 }, TyMeta
    ( Id
     { name = "kt", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 9 } ) ),
   ( Id
    { name = "t", moduleName = Artifact
     ( ArtifactPath
      { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Internal 8 }, TyMeta
    ( Id
     { name = "kt", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 7 } ) ),
   ( Id
    { name = "Float#", moduleName = ModuleName "Builtin", sort = External }, TYPE ),
   ( Id
    { name = "t", moduleName = Artifact
     ( ArtifactPath
      { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Internal 14 }, TyMeta
    ( Id
     { name = "kt", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 13 } ) ),
   ( Id
    { name = "t", moduleName = Artifact
     ( ArtifactPath
      { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Internal 12 }, TyMeta
    ( Id
     { name = "kt", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 11 } ) ) ], _globalDefs =
  [ FunDef
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "Cons_curry", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 24 } } )
   [ Meta
    { meta = AnyT, id = Id
     { name = "p", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 25 } }, Meta
    { meta = AnyT, id = Id
     { name = "p", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 26 } } ]
   ( [ AnyT, AnyT ] :-> AnyT )
   ( Let
    [ LocalDef
     { _variable = Meta
      { meta = SumT
       [ Con
        ( Data "test/testcases/malgo/DataDef.mlg.Nil" ) [], Con
        ( Data "test/testcases/malgo/DataDef.mlg.Cons" )
        [ AnyT, AnyT ] ], id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath
         { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 27 } }, typ = SumT
      [ Con
       ( Data "test/testcases/malgo/DataDef.mlg.Nil" ) [], Con
       ( Data "test/testcases/malgo/DataDef.mlg.Cons" )
       [ AnyT, AnyT ] ], _object = Pack
      ( SumT
       [ Con
        ( Data "test/testcases/malgo/DataDef.mlg.Nil" ) [], Con
        ( Data "test/testcases/malgo/DataDef.mlg.Cons" )
        [ AnyT, AnyT ] ] )
      ( Con ( Data "test/testcases/malgo/DataDef.mlg.Cons" ) [ AnyT, AnyT ] )
      [ Var
       ( Meta
        { meta = AnyT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath
           { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 25 } } ), Var
       ( Meta
        { meta = AnyT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath
           { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 26 } } ) ] } ]
    ( Cast AnyT
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "test/testcases/malgo/DataDef.mlg.Nil" ) [], Con
         ( Data "test/testcases/malgo/DataDef.mlg.Cons" )
         [ AnyT, AnyT ] ], id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath
          { rawPath = "./test/testcases/malgo/DataDef.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg", relPath = "test/testcases/malgo/DataDef.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg" } ), sort = Temporal 27 } } ) ) ) ) ], globalClosures = fromList [] }