Program
 { topVars = [], topFuns =
  [
   ( Meta
    { meta =
     [ SumT [ Con Tuple [] ] ] :-> SumT
     [ Con Tuple [] ], id = Id
     { name = "main", moduleName = Artifact
      ( ArtifactPath "test/testcases/malgo/Primitive.mlg" ), sort = External } },
    [ Meta
     { meta = SumT
      [ Con Tuple [] ], id = Id
      { name = "$_", moduleName = Artifact
       ( ArtifactPath "test/testcases/malgo/Primitive.mlg" ), sort = Temporal 11 } } ],
    [ SumT [ Con Tuple [] ] ] :-> SumT
    [ Con Tuple [] ], Assign
    ( Meta
     { meta = StringT, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "test/testcases/malgo/Primitive.mlg" ), sort = Temporal 17 } } )
    ( Assign
     ( Meta
      { meta = Int64T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "test/testcases/malgo/Primitive.mlg" ), sort = Temporal 15 } } )
     ( Assign
      ( Meta
       { meta = [ Int64T ] :-> Int64T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "test/testcases/malgo/Primitive.mlg" ), sort = Temporal 13 } } )
      ( Assign
       ( Meta
        { meta = [ Int64T ] :-> Int64T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "test/testcases/malgo/Primitive.mlg" ), sort = Temporal 12 } } )
       ( Call
        ( Var
         ( Meta
          { meta = [ Int64T ] :->
           ( [ Int64T ] :-> Int64T ), id = Id
           { name = "addInt64#", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
        [ Unboxed ( Int64 40 ) ] )
       ( Cast
        ( [ Int64T ] :-> Int64T )
        ( Var
         ( Meta
          { meta = [ Int64T ] :-> Int64T, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "test/testcases/malgo/Primitive.mlg" ), sort = Temporal 12 } } ) ) ) )
      ( Assign
       ( Meta
        { meta = Int64T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "test/testcases/malgo/Primitive.mlg" ), sort = Temporal 14 } } )
       ( Call
        ( Var
         ( Meta
          { meta = [ Int64T ] :-> Int64T, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "test/testcases/malgo/Primitive.mlg" ), sort = Temporal 13 } } ) )
        [ Unboxed ( Int64 2 ) ] )
       ( Cast Int64T
        ( Var
         ( Meta
          { meta = Int64T, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "test/testcases/malgo/Primitive.mlg" ), sort = Temporal 14 } } ) ) ) ) )
     ( Assign
      ( Meta
       { meta = StringT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "test/testcases/malgo/Primitive.mlg" ), sort = Temporal 16 } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ Int64T ] :-> StringT, id = Id
          { name = "toStringInt64#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
       [ Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "test/testcases/malgo/Primitive.mlg" ), sort = Temporal 15 } } ) ] )
      ( Cast StringT
       ( Var
        ( Meta
         { meta = StringT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "test/testcases/malgo/Primitive.mlg" ), sort = Temporal 16 } } ) ) ) ) )
    ( Assign
     ( Meta
      { meta = SumT
       [ Con Tuple [] ], id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "test/testcases/malgo/Primitive.mlg" ), sort = Temporal 18 } } )
     ( Call
      ( Var
       ( Meta
        { meta = [ StringT ] :-> SumT
         [ Con Tuple [] ], id = Id
         { name = "printString#", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
      [ Var
       ( Meta
        { meta = StringT, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "test/testcases/malgo/Primitive.mlg" ), sort = Temporal 17 } } ) ] )
     ( Cast
      ( SumT [ Con Tuple [] ] )
      ( Var
       ( Meta
        { meta = SumT
         [ Con Tuple [] ], id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "test/testcases/malgo/Primitive.mlg" ), sort = Temporal 18 } } ) ) ) ) ) ], extFuns = [] }