(()
   ((define
       ($DataDef.Cons_curry_xxx $DataDef.p_xxx $DataDef.p_xxx)
       (-> (Any# Any#) Any#)
       (let
          (($DataDef.let_xxx
              (sum
                 (con test/testcases/malgo/DataDef.mlg.Nil)
                 (con test/testcases/malgo/DataDef.mlg.Cons Any# Any#))
              (pack
                 (sum
                    (con test/testcases/malgo/DataDef.mlg.Nil)
                    (con test/testcases/malgo/DataDef.mlg.Cons Any# Any#))
                 (con test/testcases/malgo/DataDef.mlg.Cons Any# Any#)
                 $DataDef.p_xxx
                 $DataDef.p_xxx)))
          (cast Any# $DataDef.let_xxx)))
      (define
         (Int# $DataDef.p_xxx)
         (-> (Int64#) Any#)
         (let
            (($DataDef.let_xxx
                (sum (con test/testcases/malgo/DataDef.mlg.Int# Int64#))
                (pack
                   (sum (con test/testcases/malgo/DataDef.mlg.Int# Int64#))
                   (con test/testcases/malgo/DataDef.mlg.Int# Int64#)
                   $DataDef.p_xxx)))
            (cast Any# $DataDef.let_xxx)))
      (define
         (Nil)
         (-> () Any#)
         (let
            (($DataDef.let_xxx
                (sum
                   (con test/testcases/malgo/DataDef.mlg.Nil)
                   (con test/testcases/malgo/DataDef.mlg.Cons Any# Any#))
                (pack
                   (sum
                      (con test/testcases/malgo/DataDef.mlg.Nil)
                      (con test/testcases/malgo/DataDef.mlg.Cons Any# Any#))
                   (con test/testcases/malgo/DataDef.mlg.Nil))))
            (cast Any# $DataDef.let_xxx)))
      (define
         (Cons $DataDef.p_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($DataDef.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($DataDef.p_xxx)
                   (direct $DataDef.Cons_curry_xxx $DataDef.p_xxx $DataDef.p_xxx))))
            $DataDef.let_xxx))
      (define
         (malgo_int64_t_to_string $DataDef.p_xxx)
         (-> (Int64#) String#)
         (raw malgo_int64_t_to_string (-> (Int64#) String#) $DataDef.p_xxx))
      (define
         (malgo_print_string $DataDef.p_xxx)
         (-> (String#) (sum (con Tuple#)))
         (raw malgo_print_string (-> (String#) (sum (con Tuple#))) $DataDef.p_xxx))
      (define
         (main $DataDef.$__xxx)
         (-> ((sum (con Tuple#))) (sum (con Tuple#)))
         (let
            (($DataDef.fun_xxx
                (-> (Any#) (sum (con Tuple#)))
                (fun
                   ($DataDef.int#_xxx)
                   (=
                      $DataDef.scrutinee_xxx
                      (cast
                         (sum (con test/testcases/malgo/DataDef.mlg.Int# Int64#))
                         $DataDef.int#_xxx)
                      (switch
                         $DataDef.scrutinee_xxx
                         (test/testcases/malgo/DataDef.mlg.Int#
                            (destruct
                               $DataDef.scrutinee_xxx
                               (con test/testcases/malgo/DataDef.mlg.Int# Int64#)
                               ($DataDef.p_xxx)
                               (=
                                  $DataDef.d_xxx
                                  (call malgo_int64_t_to_string $DataDef.p_xxx)
                                  (=
                                     $DataDef.d_xxx
                                     (cast String# $DataDef.d_xxx)
                                     (=
                                        $DataDef.d_xxx
                                        (call malgo_print_string $DataDef.d_xxx)
                                        (cast (sum (con Tuple#)) $DataDef.d_xxx))))))
                         (ERROR (sum (con Tuple#))))))))
            (=
               $DataDef.d_xxx
               (call Int# 1_i64)
               (=
                  $DataDef.d_xxx
                  (cast Any# $DataDef.d_xxx)
                  (=
                     $DataDef.d_xxx
                     (call $DataDef.fun_xxx $DataDef.d_xxx)
                     (cast (sum (con Tuple#)) $DataDef.d_xxx)))))))
   ((extern malgo_int64_t_to_string (-> (Int64#) String#))
      (extern malgo_print_string (-> (String#) (sum (con Tuple#))))))