(()
   ((define
      (False)
      (-> () Any#)
      (let
         (($NestedMatch.let_30
            (sum (con test/testcases/malgo/NestedMatch.mlg.False)
               (con test/testcases/malgo/NestedMatch.mlg.True))
            (pack
               (sum (con test/testcases/malgo/NestedMatch.mlg.False)
                  (con test/testcases/malgo/NestedMatch.mlg.True))
               (con test/testcases/malgo/NestedMatch.mlg.False))))
         (cast Any# $NestedMatch.let_30)))
      (define
         (True)
         (-> () Any#)
         (let
            (($NestedMatch.let_31
               (sum (con test/testcases/malgo/NestedMatch.mlg.False)
                  (con test/testcases/malgo/NestedMatch.mlg.True))
               (pack
                  (sum (con test/testcases/malgo/NestedMatch.mlg.False)
                     (con test/testcases/malgo/NestedMatch.mlg.True))
                  (con test/testcases/malgo/NestedMatch.mlg.True))))
            (cast Any# $NestedMatch.let_31)))
      (define
         (False1)
         (-> () Any#)
         (let
            (($NestedMatch.let_32
               (sum (con test/testcases/malgo/NestedMatch.mlg.False1)
                  (con test/testcases/malgo/NestedMatch.mlg.True1))
               (pack
                  (sum (con test/testcases/malgo/NestedMatch.mlg.False1)
                     (con test/testcases/malgo/NestedMatch.mlg.True1))
                  (con test/testcases/malgo/NestedMatch.mlg.False1))))
            (cast Any# $NestedMatch.let_32)))
      (define
         (True1)
         (-> () Any#)
         (let
            (($NestedMatch.let_33
               (sum (con test/testcases/malgo/NestedMatch.mlg.False1)
                  (con test/testcases/malgo/NestedMatch.mlg.True1))
               (pack
                  (sum (con test/testcases/malgo/NestedMatch.mlg.False1)
                     (con test/testcases/malgo/NestedMatch.mlg.True1))
                  (con test/testcases/malgo/NestedMatch.mlg.True1))))
            (cast Any# $NestedMatch.let_33)))
      (define
         (False2)
         (-> () Any#)
         (let
            (($NestedMatch.let_34
               (sum (con test/testcases/malgo/NestedMatch.mlg.False2)
                  (con test/testcases/malgo/NestedMatch.mlg.True2))
               (pack
                  (sum (con test/testcases/malgo/NestedMatch.mlg.False2)
                     (con test/testcases/malgo/NestedMatch.mlg.True2))
                  (con test/testcases/malgo/NestedMatch.mlg.False2))))
            (cast Any# $NestedMatch.let_34)))
      (define
         (True2)
         (-> () Any#)
         (let
            (($NestedMatch.let_35
               (sum (con test/testcases/malgo/NestedMatch.mlg.False2)
                  (con test/testcases/malgo/NestedMatch.mlg.True2))
               (pack
                  (sum (con test/testcases/malgo/NestedMatch.mlg.False2)
                     (con test/testcases/malgo/NestedMatch.mlg.True2))
                  (con test/testcases/malgo/NestedMatch.mlg.True2))))
            (cast Any# $NestedMatch.let_35)))
      (define
         (malgo_print_string $NestedMatch.p_36)
         (->
            (String#)
            (sum (con Tuple#)))
         (raw
            malgo_print_string
            (->
               (String#)
               (sum (con Tuple#)))
            $NestedMatch.p_36))
      (define
         (malgo_exit_failure $NestedMatch.p_37)
         (->
            ((sum (con Tuple#)))
            Any#)
         (raw
            malgo_exit_failure
            (->
               ((sum (con Tuple#)))
               Any#)
            $NestedMatch.p_37))
      (define
         (main $NestedMatch.$__38)
         (->
            ((sum (con Tuple#)))
            (sum (con Tuple#)))
         (let
            (($NestedMatch.fun_44
               (->
                  (Any#)
                  (sum (con Tuple#)))
               (fun
                  ($NestedMatch.true_39)
                  (= $NestedMatch.scrutinee_58
                     (cast
                        (sum (con test/testcases/malgo/NestedMatch.mlg.False)
                           (con test/testcases/malgo/NestedMatch.mlg.True))
                        $NestedMatch.true_39)
                     (switch
                        $NestedMatch.scrutinee_58
                        (test/testcases/malgo/NestedMatch.mlg.False
                           (destruct
                              $NestedMatch.scrutinee_58
                              (con test/testcases/malgo/NestedMatch.mlg.False)
                              ()
                              (let
                                 (($NestedMatch.let_40
                                    (sum (con Tuple#))
                                    (pack
                                       (sum (con Tuple#))
                                       (con Tuple#))))
                                 (= $NestedMatch.d_42
                                    (call malgo_exit_failure $NestedMatch.let_40)
                                    (cast
                                       (sum (con Tuple#))
                                       $NestedMatch.d_42)))))
                        (test/testcases/malgo/NestedMatch.mlg.True
                           (destruct
                              $NestedMatch.scrutinee_58
                              (con test/testcases/malgo/NestedMatch.mlg.True)
                              ()
                              (= $NestedMatch.d_43
                                 (call malgo_print_string "OK")
                                 (cast
                                    (sum (con Tuple#))
                                    $NestedMatch.d_43))))
                        (ERROR
                           (sum (con Tuple#))))))))
            (let
               (($NestedMatch.fun_47
                  (->
                     (Any#)
                     Any#)
                  (fun
                     ($NestedMatch.true1_46)
                     (= $NestedMatch.scrutinee_59
                        (cast
                           (sum (con test/testcases/malgo/NestedMatch.mlg.False1)
                              (con test/testcases/malgo/NestedMatch.mlg.True1))
                           $NestedMatch.true1_46)
                        (switch
                           $NestedMatch.scrutinee_59
                           (test/testcases/malgo/NestedMatch.mlg.False1
                              (destruct
                                 $NestedMatch.scrutinee_59
                                 (con test/testcases/malgo/NestedMatch.mlg.False1)
                                 ()
                                 (direct True)))
                           (test/testcases/malgo/NestedMatch.mlg.True1
                              (destruct
                                 $NestedMatch.scrutinee_59
                                 (con test/testcases/malgo/NestedMatch.mlg.True1)
                                 ()
                                 (direct False)))
                           (ERROR Any#))))))
               (let
                  (($NestedMatch.fun_50
                     (->
                        (Any#)
                        Any#)
                     (fun
                        ($NestedMatch.true2_49)
                        (= $NestedMatch.scrutinee_60
                           (cast
                              (sum (con test/testcases/malgo/NestedMatch.mlg.False2)
                                 (con test/testcases/malgo/NestedMatch.mlg.True2))
                              $NestedMatch.true2_49)
                           (switch
                              $NestedMatch.scrutinee_60
                              (test/testcases/malgo/NestedMatch.mlg.False2
                                 (destruct
                                    $NestedMatch.scrutinee_60
                                    (con test/testcases/malgo/NestedMatch.mlg.False2)
                                    ()
                                    (direct True1)))
                              (test/testcases/malgo/NestedMatch.mlg.True2
                                 (destruct
                                    $NestedMatch.scrutinee_60
                                    (con test/testcases/malgo/NestedMatch.mlg.True2)
                                    ()
                                    (direct False1)))
                              (ERROR Any#))))))
                  (= $NestedMatch.d_52
                     (direct True2)
                     (= $NestedMatch.d_53
                        (call $NestedMatch.fun_50 $NestedMatch.d_52)
                        (= $NestedMatch.d_54
                           (cast Any# $NestedMatch.d_53)
                           (= $NestedMatch.d_55
                              (call $NestedMatch.fun_47 $NestedMatch.d_54)
                              (= $NestedMatch.d_56
                                 (cast Any# $NestedMatch.d_55)
                                 (= $NestedMatch.d_57
                                    (call $NestedMatch.fun_44 $NestedMatch.d_56)
                                    (cast
                                       (sum (con Tuple#))
                                       $NestedMatch.d_57))))))))))))
   ((extern
      malgo_print_string
      (->
         (String#)
         (sum (con Tuple#))))
      (extern
         malgo_exit_failure
         (->
            ((sum (con Tuple#)))
            Any#))))