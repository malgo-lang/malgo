Program
    { topVars =
        [
            ( Meta
                { meta = RecordT
                    ( fromList
                        [
                            ( "show"
                            , [ AnyT ] :-> AnyT
                            )
                        ]
                    )
                , id = Id
                    { name = "showInt32"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = External
                    }
                }
            , RecordT
                ( fromList
                    [
                        ( "show"
                        , [ AnyT ] :-> AnyT
                        )
                    ]
                )
            , Assign
                ( Meta
                    { meta = RecordT
                        ( fromList
                            [
                                ( "show"
                                , [ AnyT ] :-> AnyT
                                )
                            ]
                        )
                    , id = Id
                        { name = "d"
                        , moduleName = ModuleName
                            { raw = "test/testcases/malgo/Show.mlg" }
                        , sort = Temporal 118
                        }
                    }
                )
                ( Assign
                    ( Meta
                        { meta = [ AnyT ] :-> AnyT
                        , id = Id
                            { name = "d"
                            , moduleName = ModuleName
                                { raw = "test/testcases/malgo/Show.mlg" }
                            , sort = Temporal 116
                            }
                        }
                    )
                    ( Let
                        [ LocalDef
                            { _variable = Meta
                                { meta = [ AnyT ] :-> AnyT
                                , id = Id
                                    { name = "fun"
                                    , moduleName = ModuleName
                                        { raw = "test/testcases/malgo/Show.mlg" }
                                    , sort = Temporal 115
                                    }
                                }
                            , typ = [ AnyT ] :-> AnyT
                            , _object = Fun
                                [ Meta
                                    { meta = AnyT
                                    , id = Id
                                        { name = "x"
                                        , moduleName = ModuleName
                                            { raw = "test/testcases/malgo/Show.mlg" }
                                        , sort = Temporal 113
                                        }
                                    }
                                ]
                                ( Assign
                                    ( Meta
                                        { meta = AnyT
                                        , id = Id
                                            { name = "d"
                                            , moduleName = ModuleName
                                                { raw = "test/testcases/malgo/Show.mlg" }
                                            , sort = Temporal 114
                                            }
                                        }
                                    )
                                    ( Call
                                        ( Var
                                            ( Meta
                                                { meta = [ AnyT ] :-> AnyT
                                                , id = Id
                                                    { name = "toStringInt32"
                                                    , moduleName = ModuleName
                                                        { raw = "runtime/malgo/Builtin.mlg" }
                                                    , sort = External
                                                    }
                                                }
                                            )
                                        )
                                        [ Var
                                            ( Meta
                                                { meta = AnyT
                                                , id = Id
                                                    { name = "x"
                                                    , moduleName = ModuleName
                                                        { raw = "test/testcases/malgo/Show.mlg" }
                                                    , sort = Temporal 113
                                                    }
                                                }
                                            )
                                        ]
                                    )
                                    ( Cast AnyT
                                        ( Var
                                            ( Meta
                                                { meta = AnyT
                                                , id = Id
                                                    { name = "d"
                                                    , moduleName = ModuleName
                                                        { raw = "test/testcases/malgo/Show.mlg" }
                                                    , sort = Temporal 114
                                                    }
                                                }
                                            )
                                        )
                                    )
                                )
                            }
                        ]
                        ( Atom
                            ( Var
                                ( Meta
                                    { meta = [ AnyT ] :-> AnyT
                                    , id = Id
                                        { name = "fun"
                                        , moduleName = ModuleName
                                            { raw = "test/testcases/malgo/Show.mlg" }
                                        , sort = Temporal 115
                                        }
                                    }
                                )
                            )
                        )
                    )
                    ( Let
                        [ LocalDef
                            { _variable = Meta
                                { meta = RecordT
                                    ( fromList
                                        [
                                            ( "show"
                                            , [ AnyT ] :-> AnyT
                                            )
                                        ]
                                    )
                                , id = Id
                                    { name = "record"
                                    , moduleName = ModuleName
                                        { raw = "test/testcases/malgo/Show.mlg" }
                                    , sort = Temporal 117
                                    }
                                }
                            , typ = RecordT
                                ( fromList
                                    [
                                        ( "show"
                                        , [ AnyT ] :-> AnyT
                                        )
                                    ]
                                )
                            , _object = Record
                                ( fromList
                                    [
                                        ( "show"
                                        , Var
                                            ( Meta
                                                { meta = [ AnyT ] :-> AnyT
                                                , id = Id
                                                    { name = "d"
                                                    , moduleName = ModuleName
                                                        { raw = "test/testcases/malgo/Show.mlg" }
                                                    , sort = Temporal 116
                                                    }
                                                }
                                            )
                                        )
                                    ]
                                )
                            }
                        ]
                        ( Atom
                            ( Var
                                ( Meta
                                    { meta = RecordT
                                        ( fromList
                                            [
                                                ( "show"
                                                , [ AnyT ] :-> AnyT
                                                )
                                            ]
                                        )
                                    , id = Id
                                        { name = "record"
                                        , moduleName = ModuleName
                                            { raw = "test/testcases/malgo/Show.mlg" }
                                        , sort = Temporal 117
                                        }
                                    }
                                )
                            )
                        )
                    )
                )
                ( Atom
                    ( Var
                        ( Meta
                            { meta = RecordT
                                ( fromList
                                    [
                                        ( "show"
                                        , [ AnyT ] :-> AnyT
                                        )
                                    ]
                                )
                            , id = Id
                                { name = "d"
                                , moduleName = ModuleName
                                    { raw = "test/testcases/malgo/Show.mlg" }
                                , sort = Temporal 118
                                }
                            }
                        )
                    )
                )
            )
        ]
    , topFuns =
        [
            ( Meta
                { meta =
                    [ RecordT
                        ( fromList
                            [
                                ( "show"
                                , [ AnyT ] :-> AnyT
                                )
                            ]
                        )
                    , RecordT
                        ( fromList
                            [
                                ( "show"
                                , [ AnyT ] :-> AnyT
                                )
                            ]
                        )
                    ] :-> RecordT
                    ( fromList
                        [
                            ( "show"
                            ,
                                [ SumT
                                    [ Con Tuple
                                        [ AnyT
                                        , AnyT
                                        ]
                                    ]
                                ] :-> AnyT
                            )
                        ]
                    )
                , id = Id
                    { name = "showTuple2_curry"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 186
                    }
                }
            ,
                [ Meta
                    { meta = RecordT
                        ( fromList
                            [
                                ( "show"
                                , [ AnyT ] :-> AnyT
                                )
                            ]
                        )
                    , id = Id
                        { name = "showDictA"
                        , moduleName = ModuleName
                            { raw = "test/testcases/malgo/Show.mlg" }
                        , sort = Temporal 187
                        }
                    }
                , Meta
                    { meta = RecordT
                        ( fromList
                            [
                                ( "show"
                                , [ AnyT ] :-> AnyT
                                )
                            ]
                        )
                    , id = Id
                        { name = "showDictB"
                        , moduleName = ModuleName
                            { raw = "test/testcases/malgo/Show.mlg" }
                        , sort = Temporal 188
                        }
                    }
                ]
            ,
                [ RecordT
                    ( fromList
                        [
                            ( "show"
                            , [ AnyT ] :-> AnyT
                            )
                        ]
                    )
                , RecordT
                    ( fromList
                        [
                            ( "show"
                            , [ AnyT ] :-> AnyT
                            )
                        ]
                    )
                ] :-> RecordT
                ( fromList
                    [
                        ( "show"
                        ,
                            [ SumT
                                [ Con Tuple
                                    [ AnyT
                                    , AnyT
                                    ]
                                ]
                            ] :-> AnyT
                        )
                    ]
                )
            , Assign
                ( Meta
                    { meta =
                        [ SumT
                            [ Con Tuple
                                [ AnyT
                                , AnyT
                                ]
                            ]
                        ] :-> AnyT
                    , id = Id
                        { name = "d"
                        , moduleName = ModuleName
                            { raw = "test/testcases/malgo/Show.mlg" }
                        , sort = Temporal 222
                        }
                    }
                )
                ( Let
                    [ LocalDef
                        { _variable = Meta
                            { meta =
                                [ SumT
                                    [ Con Tuple
                                        [ AnyT
                                        , AnyT
                                        ]
                                    ]
                                ] :-> AnyT
                            , id = Id
                                { name = "fun"
                                , moduleName = ModuleName
                                    { raw = "test/testcases/malgo/Show.mlg" }
                                , sort = Temporal 189
                                }
                            }
                        , typ =
                            [ SumT
                                [ Con Tuple
                                    [ AnyT
                                    , AnyT
                                    ]
                                ]
                            ] :-> AnyT
                        , _object = Fun
                            [ Meta
                                { meta = SumT
                                    [ Con Tuple
                                        [ AnyT
                                        , AnyT
                                        ]
                                    ]
                                , id = Id
                                    { name = "tuple"
                                    , moduleName = ModuleName
                                        { raw = "test/testcases/malgo/Show.mlg" }
                                    , sort = Temporal 190
                                    }
                                }
                            ]
                            ( Match
                                ( Atom
                                    ( Var
                                        ( Meta
                                            { meta = SumT
                                                [ Con Tuple
                                                    [ AnyT
                                                    , AnyT
                                                    ]
                                                ]
                                            , id = Id
                                                { name = "tuple"
                                                , moduleName = ModuleName
                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                , sort = Temporal 190
                                                }
                                            }
                                        )
                                    )
                                )
                                [ Unpack
                                    ( Con Tuple
                                        [ AnyT
                                        , AnyT
                                        ]
                                    )
                                    [ Meta
                                        { meta = AnyT
                                        , id = Id
                                            { name = "p"
                                            , moduleName = ModuleName
                                                { raw = "test/testcases/malgo/Show.mlg" }
                                            , sort = Temporal 191
                                            }
                                        }
                                    , Meta
                                        { meta = AnyT
                                        , id = Id
                                            { name = "p"
                                            , moduleName = ModuleName
                                                { raw = "test/testcases/malgo/Show.mlg" }
                                            , sort = Temporal 192
                                            }
                                        }
                                    ]
                                    ( Assign
                                        ( Meta
                                            { meta = [ AnyT ] :-> AnyT
                                            , id = Id
                                                { name = "d"
                                                , moduleName = ModuleName
                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                , sort = Temporal 196
                                                }
                                            }
                                        )
                                        ( Assign
                                            ( Meta
                                                { meta = AnyT
                                                , id = Id
                                                    { name = "d"
                                                    , moduleName = ModuleName
                                                        { raw = "test/testcases/malgo/Show.mlg" }
                                                    , sort = Temporal 194
                                                    }
                                                }
                                            )
                                            ( Assign
                                                ( Meta
                                                    { meta = AnyT
                                                    , id = Id
                                                        { name = "d"
                                                        , moduleName = ModuleName
                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                        , sort = Temporal 193
                                                        }
                                                    }
                                                )
                                                ( Call
                                                    ( Var
                                                        ( Meta
                                                            { meta = [ StringT ] :-> AnyT
                                                            , id = Id
                                                                { name = "String#"
                                                                , moduleName = ModuleName
                                                                    { raw = "runtime/malgo/Builtin.mlg" }
                                                                , sort = External
                                                                }
                                                            }
                                                        )
                                                    )
                                                    [ Unboxed
                                                        ( String "(" )
                                                    ]
                                                )
                                                ( Cast AnyT
                                                    ( Var
                                                        ( Meta
                                                            { meta = AnyT
                                                            , id = Id
                                                                { name = "d"
                                                                , moduleName = ModuleName
                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                , sort = Temporal 193
                                                                }
                                                            }
                                                        )
                                                    )
                                                )
                                            )
                                            ( Assign
                                                ( Meta
                                                    { meta = [ AnyT ] :-> AnyT
                                                    , id = Id
                                                        { name = "d"
                                                        , moduleName = ModuleName
                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                        , sort = Temporal 195
                                                        }
                                                    }
                                                )
                                                ( Call
                                                    ( Var
                                                        ( Meta
                                                            { meta = [ AnyT ] :->
                                                                ( [ AnyT ] :-> AnyT )
                                                            , id = Id
                                                                { name = "<>"
                                                                , moduleName = ModuleName
                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                , sort = External
                                                                }
                                                            }
                                                        )
                                                    )
                                                    [ Var
                                                        ( Meta
                                                            { meta = AnyT
                                                            , id = Id
                                                                { name = "d"
                                                                , moduleName = ModuleName
                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                , sort = Temporal 194
                                                                }
                                                            }
                                                        )
                                                    ]
                                                )
                                                ( Cast
                                                    ( [ AnyT ] :-> AnyT )
                                                    ( Var
                                                        ( Meta
                                                            { meta = [ AnyT ] :-> AnyT
                                                            , id = Id
                                                                { name = "d"
                                                                , moduleName = ModuleName
                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                , sort = Temporal 195
                                                                }
                                                            }
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                        ( Assign
                                            ( Meta
                                                { meta = AnyT
                                                , id = Id
                                                    { name = "d"
                                                    , moduleName = ModuleName
                                                        { raw = "test/testcases/malgo/Show.mlg" }
                                                    , sort = Temporal 220
                                                    }
                                                }
                                            )
                                            ( Assign
                                                ( Meta
                                                    { meta = [ AnyT ] :-> AnyT
                                                    , id = Id
                                                        { name = "d"
                                                        , moduleName = ModuleName
                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                        , sort = Temporal 202
                                                        }
                                                    }
                                                )
                                                ( Assign
                                                    ( Meta
                                                        { meta = AnyT
                                                        , id = Id
                                                            { name = "d"
                                                            , moduleName = ModuleName
                                                                { raw = "test/testcases/malgo/Show.mlg" }
                                                            , sort = Temporal 200
                                                            }
                                                        }
                                                    )
                                                    ( Assign
                                                        ( Meta
                                                            { meta = [ AnyT ] :-> AnyT
                                                            , id = Id
                                                                { name = "d"
                                                                , moduleName = ModuleName
                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                , sort = Temporal 198
                                                                }
                                                            }
                                                        )
                                                        ( Assign
                                                            ( Meta
                                                                { meta = [ AnyT ] :-> AnyT
                                                                , id = Id
                                                                    { name = "d"
                                                                    , moduleName = ModuleName
                                                                        { raw = "test/testcases/malgo/Show.mlg" }
                                                                    , sort = Temporal 197
                                                                    }
                                                                }
                                                            )
                                                            ( Call
                                                                ( Var
                                                                    ( Meta
                                                                        { meta =
                                                                            [ RecordT
                                                                                ( fromList
                                                                                    [
                                                                                        ( "show"
                                                                                        , [ AnyT ] :-> AnyT
                                                                                        )
                                                                                    ]
                                                                                )
                                                                            ] :->
                                                                            ( [ AnyT ] :-> AnyT )
                                                                        , id = Id
                                                                            { name = "show"
                                                                            , moduleName = ModuleName
                                                                                { raw = "test/testcases/malgo/Show.mlg" }
                                                                            , sort = External
                                                                            }
                                                                        }
                                                                    )
                                                                )
                                                                [ Var
                                                                    ( Meta
                                                                        { meta = RecordT
                                                                            ( fromList
                                                                                [
                                                                                    ( "show"
                                                                                    , [ AnyT ] :-> AnyT
                                                                                    )
                                                                                ]
                                                                            )
                                                                        , id = Id
                                                                            { name = "showDictA"
                                                                            , moduleName = ModuleName
                                                                                { raw = "test/testcases/malgo/Show.mlg" }
                                                                            , sort = Temporal 187
                                                                            }
                                                                        }
                                                                    )
                                                                ]
                                                            )
                                                            ( Cast
                                                                ( [ AnyT ] :-> AnyT )
                                                                ( Var
                                                                    ( Meta
                                                                        { meta = [ AnyT ] :-> AnyT
                                                                        , id = Id
                                                                            { name = "d"
                                                                            , moduleName = ModuleName
                                                                                { raw = "test/testcases/malgo/Show.mlg" }
                                                                            , sort = Temporal 197
                                                                            }
                                                                        }
                                                                    )
                                                                )
                                                            )
                                                        )
                                                        ( Assign
                                                            ( Meta
                                                                { meta = AnyT
                                                                , id = Id
                                                                    { name = "d"
                                                                    , moduleName = ModuleName
                                                                        { raw = "test/testcases/malgo/Show.mlg" }
                                                                    , sort = Temporal 199
                                                                    }
                                                                }
                                                            )
                                                            ( Call
                                                                ( Var
                                                                    ( Meta
                                                                        { meta = [ AnyT ] :-> AnyT
                                                                        , id = Id
                                                                            { name = "d"
                                                                            , moduleName = ModuleName
                                                                                { raw = "test/testcases/malgo/Show.mlg" }
                                                                            , sort = Temporal 198
                                                                            }
                                                                        }
                                                                    )
                                                                )
                                                                [ Var
                                                                    ( Meta
                                                                        { meta = AnyT
                                                                        , id = Id
                                                                            { name = "p"
                                                                            , moduleName = ModuleName
                                                                                { raw = "test/testcases/malgo/Show.mlg" }
                                                                            , sort = Temporal 191
                                                                            }
                                                                        }
                                                                    )
                                                                ]
                                                            )
                                                            ( Cast AnyT
                                                                ( Var
                                                                    ( Meta
                                                                        { meta = AnyT
                                                                        , id = Id
                                                                            { name = "d"
                                                                            , moduleName = ModuleName
                                                                                { raw = "test/testcases/malgo/Show.mlg" }
                                                                            , sort = Temporal 199
                                                                            }
                                                                        }
                                                                    )
                                                                )
                                                            )
                                                        )
                                                    )
                                                    ( Assign
                                                        ( Meta
                                                            { meta = [ AnyT ] :-> AnyT
                                                            , id = Id
                                                                { name = "d"
                                                                , moduleName = ModuleName
                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                , sort = Temporal 201
                                                                }
                                                            }
                                                        )
                                                        ( Call
                                                            ( Var
                                                                ( Meta
                                                                    { meta = [ AnyT ] :->
                                                                        ( [ AnyT ] :-> AnyT )
                                                                    , id = Id
                                                                        { name = "<>"
                                                                        , moduleName = ModuleName
                                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                                        , sort = External
                                                                        }
                                                                    }
                                                                )
                                                            )
                                                            [ Var
                                                                ( Meta
                                                                    { meta = AnyT
                                                                    , id = Id
                                                                        { name = "d"
                                                                        , moduleName = ModuleName
                                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                                        , sort = Temporal 200
                                                                        }
                                                                    }
                                                                )
                                                            ]
                                                        )
                                                        ( Cast
                                                            ( [ AnyT ] :-> AnyT )
                                                            ( Var
                                                                ( Meta
                                                                    { meta = [ AnyT ] :-> AnyT
                                                                    , id = Id
                                                                        { name = "d"
                                                                        , moduleName = ModuleName
                                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                                        , sort = Temporal 201
                                                                        }
                                                                    }
                                                                )
                                                            )
                                                        )
                                                    )
                                                )
                                                ( Assign
                                                    ( Meta
                                                        { meta = AnyT
                                                        , id = Id
                                                            { name = "d"
                                                            , moduleName = ModuleName
                                                                { raw = "test/testcases/malgo/Show.mlg" }
                                                            , sort = Temporal 218
                                                            }
                                                        }
                                                    )
                                                    ( Assign
                                                        ( Meta
                                                            { meta = [ AnyT ] :-> AnyT
                                                            , id = Id
                                                                { name = "d"
                                                                , moduleName = ModuleName
                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                , sort = Temporal 206
                                                                }
                                                            }
                                                        )
                                                        ( Assign
                                                            ( Meta
                                                                { meta = AnyT
                                                                , id = Id
                                                                    { name = "d"
                                                                    , moduleName = ModuleName
                                                                        { raw = "test/testcases/malgo/Show.mlg" }
                                                                    , sort = Temporal 204
                                                                    }
                                                                }
                                                            )
                                                            ( Assign
                                                                ( Meta
                                                                    { meta = AnyT
                                                                    , id = Id
                                                                        { name = "d"
                                                                        , moduleName = ModuleName
                                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                                        , sort = Temporal 203
                                                                        }
                                                                    }
                                                                )
                                                                ( Call
                                                                    ( Var
                                                                        ( Meta
                                                                            { meta = [ StringT ] :-> AnyT
                                                                            , id = Id
                                                                                { name = "String#"
                                                                                , moduleName = ModuleName
                                                                                    { raw = "runtime/malgo/Builtin.mlg" }
                                                                                , sort = External
                                                                                }
                                                                            }
                                                                        )
                                                                    )
                                                                    [ Unboxed
                                                                        ( String ", " )
                                                                    ]
                                                                )
                                                                ( Cast AnyT
                                                                    ( Var
                                                                        ( Meta
                                                                            { meta = AnyT
                                                                            , id = Id
                                                                                { name = "d"
                                                                                , moduleName = ModuleName
                                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                                , sort = Temporal 203
                                                                                }
                                                                            }
                                                                        )
                                                                    )
                                                                )
                                                            )
                                                            ( Assign
                                                                ( Meta
                                                                    { meta = [ AnyT ] :-> AnyT
                                                                    , id = Id
                                                                        { name = "d"
                                                                        , moduleName = ModuleName
                                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                                        , sort = Temporal 205
                                                                        }
                                                                    }
                                                                )
                                                                ( Call
                                                                    ( Var
                                                                        ( Meta
                                                                            { meta = [ AnyT ] :->
                                                                                ( [ AnyT ] :-> AnyT )
                                                                            , id = Id
                                                                                { name = "<>"
                                                                                , moduleName = ModuleName
                                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                                , sort = External
                                                                                }
                                                                            }
                                                                        )
                                                                    )
                                                                    [ Var
                                                                        ( Meta
                                                                            { meta = AnyT
                                                                            , id = Id
                                                                                { name = "d"
                                                                                , moduleName = ModuleName
                                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                                , sort = Temporal 204
                                                                                }
                                                                            }
                                                                        )
                                                                    ]
                                                                )
                                                                ( Cast
                                                                    ( [ AnyT ] :-> AnyT )
                                                                    ( Var
                                                                        ( Meta
                                                                            { meta = [ AnyT ] :-> AnyT
                                                                            , id = Id
                                                                                { name = "d"
                                                                                , moduleName = ModuleName
                                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                                , sort = Temporal 205
                                                                                }
                                                                            }
                                                                        )
                                                                    )
                                                                )
                                                            )
                                                        )
                                                        ( Assign
                                                            ( Meta
                                                                { meta = AnyT
                                                                , id = Id
                                                                    { name = "d"
                                                                    , moduleName = ModuleName
                                                                        { raw = "test/testcases/malgo/Show.mlg" }
                                                                    , sort = Temporal 216
                                                                    }
                                                                }
                                                            )
                                                            ( Assign
                                                                ( Meta
                                                                    { meta = [ AnyT ] :-> AnyT
                                                                    , id = Id
                                                                        { name = "d"
                                                                        , moduleName = ModuleName
                                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                                        , sort = Temporal 212
                                                                        }
                                                                    }
                                                                )
                                                                ( Assign
                                                                    ( Meta
                                                                        { meta = AnyT
                                                                        , id = Id
                                                                            { name = "d"
                                                                            , moduleName = ModuleName
                                                                                { raw = "test/testcases/malgo/Show.mlg" }
                                                                            , sort = Temporal 210
                                                                            }
                                                                        }
                                                                    )
                                                                    ( Assign
                                                                        ( Meta
                                                                            { meta = [ AnyT ] :-> AnyT
                                                                            , id = Id
                                                                                { name = "d"
                                                                                , moduleName = ModuleName
                                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                                , sort = Temporal 208
                                                                                }
                                                                            }
                                                                        )
                                                                        ( Assign
                                                                            ( Meta
                                                                                { meta = [ AnyT ] :-> AnyT
                                                                                , id = Id
                                                                                    { name = "d"
                                                                                    , moduleName = ModuleName
                                                                                        { raw = "test/testcases/malgo/Show.mlg" }
                                                                                    , sort = Temporal 207
                                                                                    }
                                                                                }
                                                                            )
                                                                            ( Call
                                                                                ( Var
                                                                                    ( Meta
                                                                                        { meta =
                                                                                            [ RecordT
                                                                                                ( fromList
                                                                                                    [
                                                                                                        ( "show"
                                                                                                        , [ AnyT ] :-> AnyT
                                                                                                        )
                                                                                                    ]
                                                                                                )
                                                                                            ] :->
                                                                                            ( [ AnyT ] :-> AnyT )
                                                                                        , id = Id
                                                                                            { name = "show"
                                                                                            , moduleName = ModuleName
                                                                                                { raw = "test/testcases/malgo/Show.mlg" }
                                                                                            , sort = External
                                                                                            }
                                                                                        }
                                                                                    )
                                                                                )
                                                                                [ Var
                                                                                    ( Meta
                                                                                        { meta = RecordT
                                                                                            ( fromList
                                                                                                [
                                                                                                    ( "show"
                                                                                                    , [ AnyT ] :-> AnyT
                                                                                                    )
                                                                                                ]
                                                                                            )
                                                                                        , id = Id
                                                                                            { name = "showDictB"
                                                                                            , moduleName = ModuleName
                                                                                                { raw = "test/testcases/malgo/Show.mlg" }
                                                                                            , sort = Temporal 188
                                                                                            }
                                                                                        }
                                                                                    )
                                                                                ]
                                                                            )
                                                                            ( Cast
                                                                                ( [ AnyT ] :-> AnyT )
                                                                                ( Var
                                                                                    ( Meta
                                                                                        { meta = [ AnyT ] :-> AnyT
                                                                                        , id = Id
                                                                                            { name = "d"
                                                                                            , moduleName = ModuleName
                                                                                                { raw = "test/testcases/malgo/Show.mlg" }
                                                                                            , sort = Temporal 207
                                                                                            }
                                                                                        }
                                                                                    )
                                                                                )
                                                                            )
                                                                        )
                                                                        ( Assign
                                                                            ( Meta
                                                                                { meta = AnyT
                                                                                , id = Id
                                                                                    { name = "d"
                                                                                    , moduleName = ModuleName
                                                                                        { raw = "test/testcases/malgo/Show.mlg" }
                                                                                    , sort = Temporal 209
                                                                                    }
                                                                                }
                                                                            )
                                                                            ( Call
                                                                                ( Var
                                                                                    ( Meta
                                                                                        { meta = [ AnyT ] :-> AnyT
                                                                                        , id = Id
                                                                                            { name = "d"
                                                                                            , moduleName = ModuleName
                                                                                                { raw = "test/testcases/malgo/Show.mlg" }
                                                                                            , sort = Temporal 208
                                                                                            }
                                                                                        }
                                                                                    )
                                                                                )
                                                                                [ Var
                                                                                    ( Meta
                                                                                        { meta = AnyT
                                                                                        , id = Id
                                                                                            { name = "p"
                                                                                            , moduleName = ModuleName
                                                                                                { raw = "test/testcases/malgo/Show.mlg" }
                                                                                            , sort = Temporal 192
                                                                                            }
                                                                                        }
                                                                                    )
                                                                                ]
                                                                            )
                                                                            ( Cast AnyT
                                                                                ( Var
                                                                                    ( Meta
                                                                                        { meta = AnyT
                                                                                        , id = Id
                                                                                            { name = "d"
                                                                                            , moduleName = ModuleName
                                                                                                { raw = "test/testcases/malgo/Show.mlg" }
                                                                                            , sort = Temporal 209
                                                                                            }
                                                                                        }
                                                                                    )
                                                                                )
                                                                            )
                                                                        )
                                                                    )
                                                                    ( Assign
                                                                        ( Meta
                                                                            { meta = [ AnyT ] :-> AnyT
                                                                            , id = Id
                                                                                { name = "d"
                                                                                , moduleName = ModuleName
                                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                                , sort = Temporal 211
                                                                                }
                                                                            }
                                                                        )
                                                                        ( Call
                                                                            ( Var
                                                                                ( Meta
                                                                                    { meta = [ AnyT ] :->
                                                                                        ( [ AnyT ] :-> AnyT )
                                                                                    , id = Id
                                                                                        { name = "<>"
                                                                                        , moduleName = ModuleName
                                                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                                                        , sort = External
                                                                                        }
                                                                                    }
                                                                                )
                                                                            )
                                                                            [ Var
                                                                                ( Meta
                                                                                    { meta = AnyT
                                                                                    , id = Id
                                                                                        { name = "d"
                                                                                        , moduleName = ModuleName
                                                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                                                        , sort = Temporal 210
                                                                                        }
                                                                                    }
                                                                                )
                                                                            ]
                                                                        )
                                                                        ( Cast
                                                                            ( [ AnyT ] :-> AnyT )
                                                                            ( Var
                                                                                ( Meta
                                                                                    { meta = [ AnyT ] :-> AnyT
                                                                                    , id = Id
                                                                                        { name = "d"
                                                                                        , moduleName = ModuleName
                                                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                                                        , sort = Temporal 211
                                                                                        }
                                                                                    }
                                                                                )
                                                                            )
                                                                        )
                                                                    )
                                                                )
                                                                ( Assign
                                                                    ( Meta
                                                                        { meta = AnyT
                                                                        , id = Id
                                                                            { name = "d"
                                                                            , moduleName = ModuleName
                                                                                { raw = "test/testcases/malgo/Show.mlg" }
                                                                            , sort = Temporal 214
                                                                            }
                                                                        }
                                                                    )
                                                                    ( Assign
                                                                        ( Meta
                                                                            { meta = AnyT
                                                                            , id = Id
                                                                                { name = "d"
                                                                                , moduleName = ModuleName
                                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                                , sort = Temporal 213
                                                                                }
                                                                            }
                                                                        )
                                                                        ( Call
                                                                            ( Var
                                                                                ( Meta
                                                                                    { meta = [ StringT ] :-> AnyT
                                                                                    , id = Id
                                                                                        { name = "String#"
                                                                                        , moduleName = ModuleName
                                                                                            { raw = "runtime/malgo/Builtin.mlg" }
                                                                                        , sort = External
                                                                                        }
                                                                                    }
                                                                                )
                                                                            )
                                                                            [ Unboxed
                                                                                ( String ")" )
                                                                            ]
                                                                        )
                                                                        ( Cast AnyT
                                                                            ( Var
                                                                                ( Meta
                                                                                    { meta = AnyT
                                                                                    , id = Id
                                                                                        { name = "d"
                                                                                        , moduleName = ModuleName
                                                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                                                        , sort = Temporal 213
                                                                                        }
                                                                                    }
                                                                                )
                                                                            )
                                                                        )
                                                                    )
                                                                    ( Assign
                                                                        ( Meta
                                                                            { meta = AnyT
                                                                            , id = Id
                                                                                { name = "d"
                                                                                , moduleName = ModuleName
                                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                                , sort = Temporal 215
                                                                                }
                                                                            }
                                                                        )
                                                                        ( Call
                                                                            ( Var
                                                                                ( Meta
                                                                                    { meta = [ AnyT ] :-> AnyT
                                                                                    , id = Id
                                                                                        { name = "d"
                                                                                        , moduleName = ModuleName
                                                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                                                        , sort = Temporal 212
                                                                                        }
                                                                                    }
                                                                                )
                                                                            )
                                                                            [ Var
                                                                                ( Meta
                                                                                    { meta = AnyT
                                                                                    , id = Id
                                                                                        { name = "d"
                                                                                        , moduleName = ModuleName
                                                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                                                        , sort = Temporal 214
                                                                                        }
                                                                                    }
                                                                                )
                                                                            ]
                                                                        )
                                                                        ( Cast AnyT
                                                                            ( Var
                                                                                ( Meta
                                                                                    { meta = AnyT
                                                                                    , id = Id
                                                                                        { name = "d"
                                                                                        , moduleName = ModuleName
                                                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                                                        , sort = Temporal 215
                                                                                        }
                                                                                    }
                                                                                )
                                                                            )
                                                                        )
                                                                    )
                                                                )
                                                            )
                                                            ( Assign
                                                                ( Meta
                                                                    { meta = AnyT
                                                                    , id = Id
                                                                        { name = "d"
                                                                        , moduleName = ModuleName
                                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                                        , sort = Temporal 217
                                                                        }
                                                                    }
                                                                )
                                                                ( Call
                                                                    ( Var
                                                                        ( Meta
                                                                            { meta = [ AnyT ] :-> AnyT
                                                                            , id = Id
                                                                                { name = "d"
                                                                                , moduleName = ModuleName
                                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                                , sort = Temporal 206
                                                                                }
                                                                            }
                                                                        )
                                                                    )
                                                                    [ Var
                                                                        ( Meta
                                                                            { meta = AnyT
                                                                            , id = Id
                                                                                { name = "d"
                                                                                , moduleName = ModuleName
                                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                                , sort = Temporal 216
                                                                                }
                                                                            }
                                                                        )
                                                                    ]
                                                                )
                                                                ( Cast AnyT
                                                                    ( Var
                                                                        ( Meta
                                                                            { meta = AnyT
                                                                            , id = Id
                                                                                { name = "d"
                                                                                , moduleName = ModuleName
                                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                                , sort = Temporal 217
                                                                                }
                                                                            }
                                                                        )
                                                                    )
                                                                )
                                                            )
                                                        )
                                                    )
                                                    ( Assign
                                                        ( Meta
                                                            { meta = AnyT
                                                            , id = Id
                                                                { name = "d"
                                                                , moduleName = ModuleName
                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                , sort = Temporal 219
                                                                }
                                                            }
                                                        )
                                                        ( Call
                                                            ( Var
                                                                ( Meta
                                                                    { meta = [ AnyT ] :-> AnyT
                                                                    , id = Id
                                                                        { name = "d"
                                                                        , moduleName = ModuleName
                                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                                        , sort = Temporal 202
                                                                        }
                                                                    }
                                                                )
                                                            )
                                                            [ Var
                                                                ( Meta
                                                                    { meta = AnyT
                                                                    , id = Id
                                                                        { name = "d"
                                                                        , moduleName = ModuleName
                                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                                        , sort = Temporal 218
                                                                        }
                                                                    }
                                                                )
                                                            ]
                                                        )
                                                        ( Cast AnyT
                                                            ( Var
                                                                ( Meta
                                                                    { meta = AnyT
                                                                    , id = Id
                                                                        { name = "d"
                                                                        , moduleName = ModuleName
                                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                                        , sort = Temporal 219
                                                                        }
                                                                    }
                                                                )
                                                            )
                                                        )
                                                    )
                                                )
                                            )
                                            ( Assign
                                                ( Meta
                                                    { meta = AnyT
                                                    , id = Id
                                                        { name = "d"
                                                        , moduleName = ModuleName
                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                        , sort = Temporal 221
                                                        }
                                                    }
                                                )
                                                ( Call
                                                    ( Var
                                                        ( Meta
                                                            { meta = [ AnyT ] :-> AnyT
                                                            , id = Id
                                                                { name = "d"
                                                                , moduleName = ModuleName
                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                , sort = Temporal 196
                                                                }
                                                            }
                                                        )
                                                    )
                                                    [ Var
                                                        ( Meta
                                                            { meta = AnyT
                                                            , id = Id
                                                                { name = "d"
                                                                , moduleName = ModuleName
                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                , sort = Temporal 220
                                                                }
                                                            }
                                                        )
                                                    ]
                                                )
                                                ( Cast AnyT
                                                    ( Var
                                                        ( Meta
                                                            { meta = AnyT
                                                            , id = Id
                                                                { name = "d"
                                                                , moduleName = ModuleName
                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                , sort = Temporal 221
                                                                }
                                                            }
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    )
                                ]
                            )
                        }
                    ]
                    ( Atom
                        ( Var
                            ( Meta
                                { meta =
                                    [ SumT
                                        [ Con Tuple
                                            [ AnyT
                                            , AnyT
                                            ]
                                        ]
                                    ] :-> AnyT
                                , id = Id
                                    { name = "fun"
                                    , moduleName = ModuleName
                                        { raw = "test/testcases/malgo/Show.mlg" }
                                    , sort = Temporal 189
                                    }
                                }
                            )
                        )
                    )
                )
                ( Let
                    [ LocalDef
                        { _variable = Meta
                            { meta = RecordT
                                ( fromList
                                    [
                                        ( "show"
                                        ,
                                            [ SumT
                                                [ Con Tuple
                                                    [ AnyT
                                                    , AnyT
                                                    ]
                                                ]
                                            ] :-> AnyT
                                        )
                                    ]
                                )
                            , id = Id
                                { name = "record"
                                , moduleName = ModuleName
                                    { raw = "test/testcases/malgo/Show.mlg" }
                                , sort = Temporal 223
                                }
                            }
                        , typ = RecordT
                            ( fromList
                                [
                                    ( "show"
                                    ,
                                        [ SumT
                                            [ Con Tuple
                                                [ AnyT
                                                , AnyT
                                                ]
                                            ]
                                        ] :-> AnyT
                                    )
                                ]
                            )
                        , _object = Record
                            ( fromList
                                [
                                    ( "show"
                                    , Var
                                        ( Meta
                                            { meta =
                                                [ SumT
                                                    [ Con Tuple
                                                        [ AnyT
                                                        , AnyT
                                                        ]
                                                    ]
                                                ] :-> AnyT
                                            , id = Id
                                                { name = "d"
                                                , moduleName = ModuleName
                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                , sort = Temporal 222
                                                }
                                            }
                                        )
                                    )
                                ]
                            )
                        }
                    ]
                    ( Atom
                        ( Var
                            ( Meta
                                { meta = RecordT
                                    ( fromList
                                        [
                                            ( "show"
                                            ,
                                                [ SumT
                                                    [ Con Tuple
                                                        [ AnyT
                                                        , AnyT
                                                        ]
                                                    ]
                                                ] :-> AnyT
                                            )
                                        ]
                                    )
                                , id = Id
                                    { name = "record"
                                    , moduleName = ModuleName
                                        { raw = "test/testcases/malgo/Show.mlg" }
                                    , sort = Temporal 223
                                    }
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Meta
                { meta =
                    [ AnyT
                    , AnyT
                    ] :-> AnyT
                , id = Id
                    { name = "<>_curry"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 142
                    }
                }
            ,
                [ Meta
                    { meta = AnyT
                    , id = Id
                        { name = "x"
                        , moduleName = ModuleName
                            { raw = "test/testcases/malgo/Show.mlg" }
                        , sort = Temporal 143
                        }
                    }
                , Meta
                    { meta = AnyT
                    , id = Id
                        { name = "y"
                        , moduleName = ModuleName
                            { raw = "test/testcases/malgo/Show.mlg" }
                        , sort = Temporal 144
                        }
                    }
                ]
            ,
                [ AnyT
                , AnyT
                ] :-> AnyT
            , Assign
                ( Meta
                    { meta = [ AnyT ] :-> AnyT
                    , id = Id
                        { name = "d"
                        , moduleName = ModuleName
                            { raw = "test/testcases/malgo/Show.mlg" }
                        , sort = Temporal 146
                        }
                    }
                )
                ( Assign
                    ( Meta
                        { meta = [ AnyT ] :-> AnyT
                        , id = Id
                            { name = "d"
                            , moduleName = ModuleName
                                { raw = "test/testcases/malgo/Show.mlg" }
                            , sort = Temporal 145
                            }
                        }
                    )
                    ( Call
                        ( Var
                            ( Meta
                                { meta = [ AnyT ] :->
                                    ( [ AnyT ] :-> AnyT )
                                , id = Id
                                    { name = "appendString"
                                    , moduleName = ModuleName
                                        { raw = "runtime/malgo/Builtin.mlg" }
                                    , sort = External
                                    }
                                }
                            )
                        )
                        [ Var
                            ( Meta
                                { meta = AnyT
                                , id = Id
                                    { name = "x"
                                    , moduleName = ModuleName
                                        { raw = "test/testcases/malgo/Show.mlg" }
                                    , sort = Temporal 143
                                    }
                                }
                            )
                        ]
                    )
                    ( Cast
                        ( [ AnyT ] :-> AnyT )
                        ( Var
                            ( Meta
                                { meta = [ AnyT ] :-> AnyT
                                , id = Id
                                    { name = "d"
                                    , moduleName = ModuleName
                                        { raw = "test/testcases/malgo/Show.mlg" }
                                    , sort = Temporal 145
                                    }
                                }
                            )
                        )
                    )
                )
                ( Assign
                    ( Meta
                        { meta = AnyT
                        , id = Id
                            { name = "d"
                            , moduleName = ModuleName
                                { raw = "test/testcases/malgo/Show.mlg" }
                            , sort = Temporal 147
                            }
                        }
                    )
                    ( Call
                        ( Var
                            ( Meta
                                { meta = [ AnyT ] :-> AnyT
                                , id = Id
                                    { name = "d"
                                    , moduleName = ModuleName
                                        { raw = "test/testcases/malgo/Show.mlg" }
                                    , sort = Temporal 146
                                    }
                                }
                            )
                        )
                        [ Var
                            ( Meta
                                { meta = AnyT
                                , id = Id
                                    { name = "y"
                                    , moduleName = ModuleName
                                        { raw = "test/testcases/malgo/Show.mlg" }
                                    , sort = Temporal 144
                                    }
                                }
                            )
                        ]
                    )
                    ( Cast AnyT
                        ( Var
                            ( Meta
                                { meta = AnyT
                                , id = Id
                                    { name = "d"
                                    , moduleName = ModuleName
                                        { raw = "test/testcases/malgo/Show.mlg" }
                                    , sort = Temporal 147
                                    }
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Meta
                { meta =
                    [ RecordT
                        ( fromList
                            [
                                ( "show"
                                , [ AnyT ] :-> AnyT
                                )
                            ]
                        )
                    , AnyT
                    ] :-> SumT
                    [ Con Tuple [] ]
                , id = Id
                    { name = "print_curry"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 128
                    }
                }
            ,
                [ Meta
                    { meta = RecordT
                        ( fromList
                            [
                                ( "show"
                                , [ AnyT ] :-> AnyT
                                )
                            ]
                        )
                    , id = Id
                        { name = "showDict"
                        , moduleName = ModuleName
                            { raw = "test/testcases/malgo/Show.mlg" }
                        , sort = Temporal 129
                        }
                    }
                , Meta
                    { meta = AnyT
                    , id = Id
                        { name = "x"
                        , moduleName = ModuleName
                            { raw = "test/testcases/malgo/Show.mlg" }
                        , sort = Temporal 130
                        }
                    }
                ]
            ,
                [ RecordT
                    ( fromList
                        [
                            ( "show"
                            , [ AnyT ] :-> AnyT
                            )
                        ]
                    )
                , AnyT
                ] :-> SumT
                [ Con Tuple [] ]
            , Assign
                ( Meta
                    { meta = AnyT
                    , id = Id
                        { name = "d"
                        , moduleName = ModuleName
                            { raw = "test/testcases/malgo/Show.mlg" }
                        , sort = Temporal 134
                        }
                    }
                )
                ( Assign
                    ( Meta
                        { meta = [ AnyT ] :-> AnyT
                        , id = Id
                            { name = "d"
                            , moduleName = ModuleName
                                { raw = "test/testcases/malgo/Show.mlg" }
                            , sort = Temporal 132
                            }
                        }
                    )
                    ( Assign
                        ( Meta
                            { meta = [ AnyT ] :-> AnyT
                            , id = Id
                                { name = "d"
                                , moduleName = ModuleName
                                    { raw = "test/testcases/malgo/Show.mlg" }
                                , sort = Temporal 131
                                }
                            }
                        )
                        ( Call
                            ( Var
                                ( Meta
                                    { meta =
                                        [ RecordT
                                            ( fromList
                                                [
                                                    ( "show"
                                                    , [ AnyT ] :-> AnyT
                                                    )
                                                ]
                                            )
                                        ] :->
                                        ( [ AnyT ] :-> AnyT )
                                    , id = Id
                                        { name = "show"
                                        , moduleName = ModuleName
                                            { raw = "test/testcases/malgo/Show.mlg" }
                                        , sort = External
                                        }
                                    }
                                )
                            )
                            [ Var
                                ( Meta
                                    { meta = RecordT
                                        ( fromList
                                            [
                                                ( "show"
                                                , [ AnyT ] :-> AnyT
                                                )
                                            ]
                                        )
                                    , id = Id
                                        { name = "showDict"
                                        , moduleName = ModuleName
                                            { raw = "test/testcases/malgo/Show.mlg" }
                                        , sort = Temporal 129
                                        }
                                    }
                                )
                            ]
                        )
                        ( Cast
                            ( [ AnyT ] :-> AnyT )
                            ( Var
                                ( Meta
                                    { meta = [ AnyT ] :-> AnyT
                                    , id = Id
                                        { name = "d"
                                        , moduleName = ModuleName
                                            { raw = "test/testcases/malgo/Show.mlg" }
                                        , sort = Temporal 131
                                        }
                                    }
                                )
                            )
                        )
                    )
                    ( Assign
                        ( Meta
                            { meta = AnyT
                            , id = Id
                                { name = "d"
                                , moduleName = ModuleName
                                    { raw = "test/testcases/malgo/Show.mlg" }
                                , sort = Temporal 133
                                }
                            }
                        )
                        ( Call
                            ( Var
                                ( Meta
                                    { meta = [ AnyT ] :-> AnyT
                                    , id = Id
                                        { name = "d"
                                        , moduleName = ModuleName
                                            { raw = "test/testcases/malgo/Show.mlg" }
                                        , sort = Temporal 132
                                        }
                                    }
                                )
                            )
                            [ Var
                                ( Meta
                                    { meta = AnyT
                                    , id = Id
                                        { name = "x"
                                        , moduleName = ModuleName
                                            { raw = "test/testcases/malgo/Show.mlg" }
                                        , sort = Temporal 130
                                        }
                                    }
                                )
                            ]
                        )
                        ( Cast AnyT
                            ( Var
                                ( Meta
                                    { meta = AnyT
                                    , id = Id
                                        { name = "d"
                                        , moduleName = ModuleName
                                            { raw = "test/testcases/malgo/Show.mlg" }
                                        , sort = Temporal 133
                                        }
                                    }
                                )
                            )
                        )
                    )
                )
                ( Assign
                    ( Meta
                        { meta = SumT
                            [ Con Tuple [] ]
                        , id = Id
                            { name = "d"
                            , moduleName = ModuleName
                                { raw = "test/testcases/malgo/Show.mlg" }
                            , sort = Temporal 135
                            }
                        }
                    )
                    ( Call
                        ( Var
                            ( Meta
                                { meta = [ AnyT ] :-> SumT
                                    [ Con Tuple [] ]
                                , id = Id
                                    { name = "printString"
                                    , moduleName = ModuleName
                                        { raw = "runtime/malgo/Builtin.mlg" }
                                    , sort = External
                                    }
                                }
                            )
                        )
                        [ Var
                            ( Meta
                                { meta = AnyT
                                , id = Id
                                    { name = "d"
                                    , moduleName = ModuleName
                                        { raw = "test/testcases/malgo/Show.mlg" }
                                    , sort = Temporal 134
                                    }
                                }
                            )
                        ]
                    )
                    ( Cast
                        ( SumT
                            [ Con Tuple [] ]
                        )
                        ( Var
                            ( Meta
                                { meta = SumT
                                    [ Con Tuple [] ]
                                , id = Id
                                    { name = "d"
                                    , moduleName = ModuleName
                                        { raw = "test/testcases/malgo/Show.mlg" }
                                    , sort = Temporal 135
                                    }
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Meta
                { meta =
                    [ RecordT
                        ( fromList
                            [
                                ( "show"
                                , [ AnyT ] :-> AnyT
                                )
                            ]
                        )
                    ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "show"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = External
                    }
                }
            ,
                [ Meta
                    { meta = RecordT
                        ( fromList
                            [
                                ( "show"
                                , [ AnyT ] :-> AnyT
                                )
                            ]
                        )
                    , id = Id
                        { name = "record"
                        , moduleName = ModuleName
                            { raw = "test/testcases/malgo/Show.mlg" }
                        , sort = Temporal 119
                        }
                    }
                ]
            ,
                [ RecordT
                    ( fromList
                        [
                            ( "show"
                            , [ AnyT ] :-> AnyT
                            )
                        ]
                    )
                ] :->
                ( [ AnyT ] :-> AnyT )
            , Match
                ( Atom
                    ( Var
                        ( Meta
                            { meta = RecordT
                                ( fromList
                                    [
                                        ( "show"
                                        , [ AnyT ] :-> AnyT
                                        )
                                    ]
                                )
                            , id = Id
                                { name = "record"
                                , moduleName = ModuleName
                                    { raw = "test/testcases/malgo/Show.mlg" }
                                , sort = Temporal 119
                                }
                            }
                        )
                    )
                )
                [ OpenRecord
                    ( fromList
                        [
                            ( "show"
                            , Meta
                                { meta = [ AnyT ] :-> AnyT
                                , id = Id
                                    { name = "p"
                                    , moduleName = ModuleName
                                        { raw = "test/testcases/malgo/Show.mlg" }
                                    , sort = Temporal 120
                                    }
                                }
                            )
                        ]
                    )
                    ( Atom
                        ( Var
                            ( Meta
                                { meta = [ AnyT ] :-> AnyT
                                , id = Id
                                    { name = "p"
                                    , moduleName = ModuleName
                                        { raw = "test/testcases/malgo/Show.mlg" }
                                    , sort = Temporal 120
                                    }
                                }
                            )
                        )
                    )
                ]
            )
        ,
            ( Meta
                { meta =
                    [ RecordT
                        ( fromList
                            [
                                ( "show"
                                , [ AnyT ] :-> AnyT
                                )
                            ]
                        )
                    ] :->
                    ( [ AnyT ] :-> SumT
                        [ Con Tuple [] ]
                    )
                , id = Id
                    { name = "print"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = External
                    }
                }
            ,
                [ Meta
                    { meta = RecordT
                        ( fromList
                            [
                                ( "show"
                                , [ AnyT ] :-> AnyT
                                )
                            ]
                        )
                    , id = Id
                        { name = "showDict"
                        , moduleName = ModuleName
                            { raw = "test/testcases/malgo/Show.mlg" }
                        , sort = Temporal 121
                        }
                    }
                ]
            ,
                [ RecordT
                    ( fromList
                        [
                            ( "show"
                            , [ AnyT ] :-> AnyT
                            )
                        ]
                    )
                ] :->
                ( [ AnyT ] :-> SumT
                    [ Con Tuple [] ]
                )
            , Let
                [ LocalDef
                    { _variable = Meta
                        { meta = [ AnyT ] :-> SumT
                            [ Con Tuple [] ]
                        , id = Id
                            { name = "let"
                            , moduleName = ModuleName
                                { raw = "test/testcases/malgo/Show.mlg" }
                            , sort = Temporal 136
                            }
                        }
                    , typ = [ AnyT ] :-> SumT
                        [ Con Tuple [] ]
                    , _object = Fun
                        [ Meta
                            { meta = AnyT
                            , id = Id
                                { name = "x"
                                , moduleName = ModuleName
                                    { raw = "test/testcases/malgo/Show.mlg" }
                                , sort = Temporal 122
                                }
                            }
                        ]
                        ( CallDirect
                            ( Meta
                                { meta =
                                    [ RecordT
                                        ( fromList
                                            [
                                                ( "show"
                                                , [ AnyT ] :-> AnyT
                                                )
                                            ]
                                        )
                                    , AnyT
                                    ] :-> SumT
                                    [ Con Tuple [] ]
                                , id = Id
                                    { name = "print_curry"
                                    , moduleName = ModuleName
                                        { raw = "test/testcases/malgo/Show.mlg" }
                                    , sort = Temporal 128
                                    }
                                }
                            )
                            [ Var
                                ( Meta
                                    { meta = RecordT
                                        ( fromList
                                            [
                                                ( "show"
                                                , [ AnyT ] :-> AnyT
                                                )
                                            ]
                                        )
                                    , id = Id
                                        { name = "showDict"
                                        , moduleName = ModuleName
                                            { raw = "test/testcases/malgo/Show.mlg" }
                                        , sort = Temporal 121
                                        }
                                    }
                                )
                            , Var
                                ( Meta
                                    { meta = AnyT
                                    , id = Id
                                        { name = "x"
                                        , moduleName = ModuleName
                                            { raw = "test/testcases/malgo/Show.mlg" }
                                        , sort = Temporal 122
                                        }
                                    }
                                )
                            ]
                        )
                    }
                ]
                ( Atom
                    ( Var
                        ( Meta
                            { meta = [ AnyT ] :-> SumT
                                [ Con Tuple [] ]
                            , id = Id
                                { name = "let"
                                , moduleName = ModuleName
                                    { raw = "test/testcases/malgo/Show.mlg" }
                                , sort = Temporal 136
                                }
                            }
                        )
                    )
                )
            )
        ,
            ( Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "<>"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = External
                    }
                }
            ,
                [ Meta
                    { meta = AnyT
                    , id = Id
                        { name = "x"
                        , moduleName = ModuleName
                            { raw = "test/testcases/malgo/Show.mlg" }
                        , sort = Temporal 137
                        }
                    }
                ]
            , [ AnyT ] :->
                ( [ AnyT ] :-> AnyT )
            , Let
                [ LocalDef
                    { _variable = Meta
                        { meta = [ AnyT ] :-> AnyT
                        , id = Id
                            { name = "let"
                            , moduleName = ModuleName
                                { raw = "test/testcases/malgo/Show.mlg" }
                            , sort = Temporal 148
                            }
                        }
                    , typ = [ AnyT ] :-> AnyT
                    , _object = Fun
                        [ Meta
                            { meta = AnyT
                            , id = Id
                                { name = "y"
                                , moduleName = ModuleName
                                    { raw = "test/testcases/malgo/Show.mlg" }
                                , sort = Temporal 138
                                }
                            }
                        ]
                        ( CallDirect
                            ( Meta
                                { meta =
                                    [ AnyT
                                    , AnyT
                                    ] :-> AnyT
                                , id = Id
                                    { name = "<>_curry"
                                    , moduleName = ModuleName
                                        { raw = "test/testcases/malgo/Show.mlg" }
                                    , sort = Temporal 142
                                    }
                                }
                            )
                            [ Var
                                ( Meta
                                    { meta = AnyT
                                    , id = Id
                                        { name = "x"
                                        , moduleName = ModuleName
                                            { raw = "test/testcases/malgo/Show.mlg" }
                                        , sort = Temporal 137
                                        }
                                    }
                                )
                            , Var
                                ( Meta
                                    { meta = AnyT
                                    , id = Id
                                        { name = "y"
                                        , moduleName = ModuleName
                                            { raw = "test/testcases/malgo/Show.mlg" }
                                        , sort = Temporal 138
                                        }
                                    }
                                )
                            ]
                        )
                    }
                ]
                ( Atom
                    ( Var
                        ( Meta
                            { meta = [ AnyT ] :-> AnyT
                            , id = Id
                                { name = "let"
                                , moduleName = ModuleName
                                    { raw = "test/testcases/malgo/Show.mlg" }
                                , sort = Temporal 148
                                }
                            }
                        )
                    )
                )
            )
        ,
            ( Meta
                { meta =
                    [ RecordT
                        ( fromList
                            [
                                ( "show"
                                , [ AnyT ] :-> AnyT
                                )
                            ]
                        )
                    ] :->
                    (
                        [ RecordT
                            ( fromList
                                [
                                    ( "show"
                                    , [ AnyT ] :-> AnyT
                                    )
                                ]
                            )
                        ] :-> RecordT
                        ( fromList
                            [
                                ( "show"
                                ,
                                    [ SumT
                                        [ Con Tuple
                                            [ AnyT
                                            , AnyT
                                            ]
                                        ]
                                    ] :-> AnyT
                                )
                            ]
                        )
                    )
                , id = Id
                    { name = "showTuple2"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = External
                    }
                }
            ,
                [ Meta
                    { meta = RecordT
                        ( fromList
                            [
                                ( "show"
                                , [ AnyT ] :-> AnyT
                                )
                            ]
                        )
                    , id = Id
                        { name = "showDictA"
                        , moduleName = ModuleName
                            { raw = "test/testcases/malgo/Show.mlg" }
                        , sort = Temporal 149
                        }
                    }
                ]
            ,
                [ RecordT
                    ( fromList
                        [
                            ( "show"
                            , [ AnyT ] :-> AnyT
                            )
                        ]
                    )
                ] :->
                (
                    [ RecordT
                        ( fromList
                            [
                                ( "show"
                                , [ AnyT ] :-> AnyT
                                )
                            ]
                        )
                    ] :-> RecordT
                    ( fromList
                        [
                            ( "show"
                            ,
                                [ SumT
                                    [ Con Tuple
                                        [ AnyT
                                        , AnyT
                                        ]
                                    ]
                                ] :-> AnyT
                            )
                        ]
                    )
                )
            , Let
                [ LocalDef
                    { _variable = Meta
                        { meta =
                            [ RecordT
                                ( fromList
                                    [
                                        ( "show"
                                        , [ AnyT ] :-> AnyT
                                        )
                                    ]
                                )
                            ] :-> RecordT
                            ( fromList
                                [
                                    ( "show"
                                    ,
                                        [ SumT
                                            [ Con Tuple
                                                [ AnyT
                                                , AnyT
                                                ]
                                            ]
                                        ] :-> AnyT
                                    )
                                ]
                            )
                        , id = Id
                            { name = "let"
                            , moduleName = ModuleName
                                { raw = "test/testcases/malgo/Show.mlg" }
                            , sort = Temporal 224
                            }
                        }
                    , typ =
                        [ RecordT
                            ( fromList
                                [
                                    ( "show"
                                    , [ AnyT ] :-> AnyT
                                    )
                                ]
                            )
                        ] :-> RecordT
                        ( fromList
                            [
                                ( "show"
                                ,
                                    [ SumT
                                        [ Con Tuple
                                            [ AnyT
                                            , AnyT
                                            ]
                                        ]
                                    ] :-> AnyT
                                )
                            ]
                        )
                    , _object = Fun
                        [ Meta
                            { meta = RecordT
                                ( fromList
                                    [
                                        ( "show"
                                        , [ AnyT ] :-> AnyT
                                        )
                                    ]
                                )
                            , id = Id
                                { name = "showDictB"
                                , moduleName = ModuleName
                                    { raw = "test/testcases/malgo/Show.mlg" }
                                , sort = Temporal 150
                                }
                            }
                        ]
                        ( CallDirect
                            ( Meta
                                { meta =
                                    [ RecordT
                                        ( fromList
                                            [
                                                ( "show"
                                                , [ AnyT ] :-> AnyT
                                                )
                                            ]
                                        )
                                    , RecordT
                                        ( fromList
                                            [
                                                ( "show"
                                                , [ AnyT ] :-> AnyT
                                                )
                                            ]
                                        )
                                    ] :-> RecordT
                                    ( fromList
                                        [
                                            ( "show"
                                            ,
                                                [ SumT
                                                    [ Con Tuple
                                                        [ AnyT
                                                        , AnyT
                                                        ]
                                                    ]
                                                ] :-> AnyT
                                            )
                                        ]
                                    )
                                , id = Id
                                    { name = "showTuple2_curry"
                                    , moduleName = ModuleName
                                        { raw = "test/testcases/malgo/Show.mlg" }
                                    , sort = Temporal 186
                                    }
                                }
                            )
                            [ Var
                                ( Meta
                                    { meta = RecordT
                                        ( fromList
                                            [
                                                ( "show"
                                                , [ AnyT ] :-> AnyT
                                                )
                                            ]
                                        )
                                    , id = Id
                                        { name = "showDictA"
                                        , moduleName = ModuleName
                                            { raw = "test/testcases/malgo/Show.mlg" }
                                        , sort = Temporal 149
                                        }
                                    }
                                )
                            , Var
                                ( Meta
                                    { meta = RecordT
                                        ( fromList
                                            [
                                                ( "show"
                                                , [ AnyT ] :-> AnyT
                                                )
                                            ]
                                        )
                                    , id = Id
                                        { name = "showDictB"
                                        , moduleName = ModuleName
                                            { raw = "test/testcases/malgo/Show.mlg" }
                                        , sort = Temporal 150
                                        }
                                    }
                                )
                            ]
                        )
                    }
                ]
                ( Atom
                    ( Var
                        ( Meta
                            { meta =
                                [ RecordT
                                    ( fromList
                                        [
                                            ( "show"
                                            , [ AnyT ] :-> AnyT
                                            )
                                        ]
                                    )
                                ] :-> RecordT
                                ( fromList
                                    [
                                        ( "show"
                                        ,
                                            [ SumT
                                                [ Con Tuple
                                                    [ AnyT
                                                    , AnyT
                                                    ]
                                                ]
                                            ] :-> AnyT
                                        )
                                    ]
                                )
                            , id = Id
                                { name = "let"
                                , moduleName = ModuleName
                                    { raw = "test/testcases/malgo/Show.mlg" }
                                , sort = Temporal 224
                                }
                            }
                        )
                    )
                )
            )
        ,
            ( Meta
                { meta =
                    [ SumT
                        [ Con Tuple [] ]
                    ] :-> SumT
                    [ Con Tuple [] ]
                , id = Id
                    { name = "main"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = External
                    }
                }
            ,
                [ Meta
                    { meta = SumT
                        [ Con Tuple [] ]
                    , id = Id
                        { name = "$_"
                        , moduleName = ModuleName
                            { raw = "test/testcases/malgo/Show.mlg" }
                        , sort = Temporal 225
                        }
                    }
                ]
            ,
                [ SumT
                    [ Con Tuple [] ]
                ] :-> SumT
                [ Con Tuple [] ]
            , Assign
                ( Meta
                    { meta =
                        [ SumT
                            [ Con Tuple
                                [ AnyT
                                , AnyT
                                ]
                            ]
                        ] :-> SumT
                        [ Con Tuple [] ]
                    , id = Id
                        { name = "d"
                        , moduleName = ModuleName
                            { raw = "test/testcases/malgo/Show.mlg" }
                        , sort = Temporal 232
                        }
                    }
                )
                ( Assign
                    ( Meta
                        { meta = RecordT
                            ( fromList
                                [
                                    ( "show"
                                    ,
                                        [ SumT
                                            [ Con Tuple
                                                [ AnyT
                                                , AnyT
                                                ]
                                            ]
                                        ] :-> AnyT
                                    )
                                ]
                            )
                        , id = Id
                            { name = "d"
                            , moduleName = ModuleName
                                { raw = "test/testcases/malgo/Show.mlg" }
                            , sort = Temporal 229
                            }
                        }
                    )
                    ( Assign
                        ( Meta
                            { meta =
                                [ RecordT
                                    ( fromList
                                        [
                                            ( "show"
                                            , [ AnyT ] :-> AnyT
                                            )
                                        ]
                                    )
                                ] :-> RecordT
                                ( fromList
                                    [
                                        ( "show"
                                        ,
                                            [ SumT
                                                [ Con Tuple
                                                    [ AnyT
                                                    , AnyT
                                                    ]
                                                ]
                                            ] :-> AnyT
                                        )
                                    ]
                                )
                            , id = Id
                                { name = "d"
                                , moduleName = ModuleName
                                    { raw = "test/testcases/malgo/Show.mlg" }
                                , sort = Temporal 227
                                }
                            }
                        )
                        ( Assign
                            ( Meta
                                { meta =
                                    [ RecordT
                                        ( fromList
                                            [
                                                ( "show"
                                                , [ AnyT ] :-> AnyT
                                                )
                                            ]
                                        )
                                    ] :-> RecordT
                                    ( fromList
                                        [
                                            ( "show"
                                            ,
                                                [ SumT
                                                    [ Con Tuple
                                                        [ AnyT
                                                        , AnyT
                                                        ]
                                                    ]
                                                ] :-> AnyT
                                            )
                                        ]
                                    )
                                , id = Id
                                    { name = "d"
                                    , moduleName = ModuleName
                                        { raw = "test/testcases/malgo/Show.mlg" }
                                    , sort = Temporal 226
                                    }
                                }
                            )
                            ( Call
                                ( Var
                                    ( Meta
                                        { meta =
                                            [ RecordT
                                                ( fromList
                                                    [
                                                        ( "show"
                                                        , [ AnyT ] :-> AnyT
                                                        )
                                                    ]
                                                )
                                            ] :->
                                            (
                                                [ RecordT
                                                    ( fromList
                                                        [
                                                            ( "show"
                                                            , [ AnyT ] :-> AnyT
                                                            )
                                                        ]
                                                    )
                                                ] :-> RecordT
                                                ( fromList
                                                    [
                                                        ( "show"
                                                        ,
                                                            [ SumT
                                                                [ Con Tuple
                                                                    [ AnyT
                                                                    , AnyT
                                                                    ]
                                                                ]
                                                            ] :-> AnyT
                                                        )
                                                    ]
                                                )
                                            )
                                        , id = Id
                                            { name = "showTuple2"
                                            , moduleName = ModuleName
                                                { raw = "test/testcases/malgo/Show.mlg" }
                                            , sort = External
                                            }
                                        }
                                    )
                                )
                                [ Var
                                    ( Meta
                                        { meta = RecordT
                                            ( fromList
                                                [
                                                    ( "show"
                                                    , [ AnyT ] :-> AnyT
                                                    )
                                                ]
                                            )
                                        , id = Id
                                            { name = "showInt32"
                                            , moduleName = ModuleName
                                                { raw = "test/testcases/malgo/Show.mlg" }
                                            , sort = External
                                            }
                                        }
                                    )
                                ]
                            )
                            ( Cast
                                (
                                    [ RecordT
                                        ( fromList
                                            [
                                                ( "show"
                                                , [ AnyT ] :-> AnyT
                                                )
                                            ]
                                        )
                                    ] :-> RecordT
                                    ( fromList
                                        [
                                            ( "show"
                                            ,
                                                [ SumT
                                                    [ Con Tuple
                                                        [ AnyT
                                                        , AnyT
                                                        ]
                                                    ]
                                                ] :-> AnyT
                                            )
                                        ]
                                    )
                                )
                                ( Var
                                    ( Meta
                                        { meta =
                                            [ RecordT
                                                ( fromList
                                                    [
                                                        ( "show"
                                                        , [ AnyT ] :-> AnyT
                                                        )
                                                    ]
                                                )
                                            ] :-> RecordT
                                            ( fromList
                                                [
                                                    ( "show"
                                                    ,
                                                        [ SumT
                                                            [ Con Tuple
                                                                [ AnyT
                                                                , AnyT
                                                                ]
                                                            ]
                                                        ] :-> AnyT
                                                    )
                                                ]
                                            )
                                        , id = Id
                                            { name = "d"
                                            , moduleName = ModuleName
                                                { raw = "test/testcases/malgo/Show.mlg" }
                                            , sort = Temporal 226
                                            }
                                        }
                                    )
                                )
                            )
                        )
                        ( Assign
                            ( Meta
                                { meta = RecordT
                                    ( fromList
                                        [
                                            ( "show"
                                            ,
                                                [ SumT
                                                    [ Con Tuple
                                                        [ AnyT
                                                        , AnyT
                                                        ]
                                                    ]
                                                ] :-> AnyT
                                            )
                                        ]
                                    )
                                , id = Id
                                    { name = "d"
                                    , moduleName = ModuleName
                                        { raw = "test/testcases/malgo/Show.mlg" }
                                    , sort = Temporal 228
                                    }
                                }
                            )
                            ( Call
                                ( Var
                                    ( Meta
                                        { meta =
                                            [ RecordT
                                                ( fromList
                                                    [
                                                        ( "show"
                                                        , [ AnyT ] :-> AnyT
                                                        )
                                                    ]
                                                )
                                            ] :-> RecordT
                                            ( fromList
                                                [
                                                    ( "show"
                                                    ,
                                                        [ SumT
                                                            [ Con Tuple
                                                                [ AnyT
                                                                , AnyT
                                                                ]
                                                            ]
                                                        ] :-> AnyT
                                                    )
                                                ]
                                            )
                                        , id = Id
                                            { name = "d"
                                            , moduleName = ModuleName
                                                { raw = "test/testcases/malgo/Show.mlg" }
                                            , sort = Temporal 227
                                            }
                                        }
                                    )
                                )
                                [ Var
                                    ( Meta
                                        { meta = RecordT
                                            ( fromList
                                                [
                                                    ( "show"
                                                    , [ AnyT ] :-> AnyT
                                                    )
                                                ]
                                            )
                                        , id = Id
                                            { name = "showInt32"
                                            , moduleName = ModuleName
                                                { raw = "test/testcases/malgo/Show.mlg" }
                                            , sort = External
                                            }
                                        }
                                    )
                                ]
                            )
                            ( Cast
                                ( RecordT
                                    ( fromList
                                        [
                                            ( "show"
                                            ,
                                                [ SumT
                                                    [ Con Tuple
                                                        [ AnyT
                                                        , AnyT
                                                        ]
                                                    ]
                                                ] :-> AnyT
                                            )
                                        ]
                                    )
                                )
                                ( Var
                                    ( Meta
                                        { meta = RecordT
                                            ( fromList
                                                [
                                                    ( "show"
                                                    ,
                                                        [ SumT
                                                            [ Con Tuple
                                                                [ AnyT
                                                                , AnyT
                                                                ]
                                                            ]
                                                        ] :-> AnyT
                                                    )
                                                ]
                                            )
                                        , id = Id
                                            { name = "d"
                                            , moduleName = ModuleName
                                                { raw = "test/testcases/malgo/Show.mlg" }
                                            , sort = Temporal 228
                                            }
                                        }
                                    )
                                )
                            )
                        )
                    )
                    ( Assign
                        ( Meta
                            { meta = RecordT
                                ( fromList
                                    [
                                        ( "show"
                                        , [ AnyT ] :-> AnyT
                                        )
                                    ]
                                )
                            , id = Id
                                { name = "cast"
                                , moduleName = ModuleName
                                    { raw = "test/testcases/malgo/Show.mlg" }
                                , sort = Temporal 230
                                }
                            }
                        )
                        ( Cast
                            ( RecordT
                                ( fromList
                                    [
                                        ( "show"
                                        , [ AnyT ] :-> AnyT
                                        )
                                    ]
                                )
                            )
                            ( Var
                                ( Meta
                                    { meta = RecordT
                                        ( fromList
                                            [
                                                ( "show"
                                                ,
                                                    [ SumT
                                                        [ Con Tuple
                                                            [ AnyT
                                                            , AnyT
                                                            ]
                                                        ]
                                                    ] :-> AnyT
                                                )
                                            ]
                                        )
                                    , id = Id
                                        { name = "d"
                                        , moduleName = ModuleName
                                            { raw = "test/testcases/malgo/Show.mlg" }
                                        , sort = Temporal 229
                                        }
                                    }
                                )
                            )
                        )
                        ( Assign
                            ( Meta
                                { meta = [ AnyT ] :-> SumT
                                    [ Con Tuple [] ]
                                , id = Id
                                    { name = "d"
                                    , moduleName = ModuleName
                                        { raw = "test/testcases/malgo/Show.mlg" }
                                    , sort = Temporal 231
                                    }
                                }
                            )
                            ( Call
                                ( Var
                                    ( Meta
                                        { meta =
                                            [ RecordT
                                                ( fromList
                                                    [
                                                        ( "show"
                                                        , [ AnyT ] :-> AnyT
                                                        )
                                                    ]
                                                )
                                            ] :->
                                            ( [ AnyT ] :-> SumT
                                                [ Con Tuple [] ]
                                            )
                                        , id = Id
                                            { name = "print"
                                            , moduleName = ModuleName
                                                { raw = "test/testcases/malgo/Show.mlg" }
                                            , sort = External
                                            }
                                        }
                                    )
                                )
                                [ Var
                                    ( Meta
                                        { meta = RecordT
                                            ( fromList
                                                [
                                                    ( "show"
                                                    , [ AnyT ] :-> AnyT
                                                    )
                                                ]
                                            )
                                        , id = Id
                                            { name = "cast"
                                            , moduleName = ModuleName
                                                { raw = "test/testcases/malgo/Show.mlg" }
                                            , sort = Temporal 230
                                            }
                                        }
                                    )
                                ]
                            )
                            ( Cast
                                (
                                    [ SumT
                                        [ Con Tuple
                                            [ AnyT
                                            , AnyT
                                            ]
                                        ]
                                    ] :-> SumT
                                    [ Con Tuple [] ]
                                )
                                ( Var
                                    ( Meta
                                        { meta = [ AnyT ] :-> SumT
                                            [ Con Tuple [] ]
                                        , id = Id
                                            { name = "d"
                                            , moduleName = ModuleName
                                                { raw = "test/testcases/malgo/Show.mlg" }
                                            , sort = Temporal 231
                                            }
                                        }
                                    )
                                )
                            )
                        )
                    )
                )
                ( Assign
                    ( Meta
                        { meta = SumT
                            [ Con Tuple
                                [ AnyT
                                , AnyT
                                ]
                            ]
                        , id = Id
                            { name = "d"
                            , moduleName = ModuleName
                                { raw = "test/testcases/malgo/Show.mlg" }
                            , sort = Temporal 238
                            }
                        }
                    )
                    ( Assign
                        ( Meta
                            { meta = AnyT
                            , id = Id
                                { name = "d"
                                , moduleName = ModuleName
                                    { raw = "test/testcases/malgo/Show.mlg" }
                                , sort = Temporal 234
                                }
                            }
                        )
                        ( Assign
                            ( Meta
                                { meta = AnyT
                                , id = Id
                                    { name = "d"
                                    , moduleName = ModuleName
                                        { raw = "test/testcases/malgo/Show.mlg" }
                                    , sort = Temporal 233
                                    }
                                }
                            )
                            ( Call
                                ( Var
                                    ( Meta
                                        { meta = [ Int32T ] :-> AnyT
                                        , id = Id
                                            { name = "Int32#"
                                            , moduleName = ModuleName
                                                { raw = "runtime/malgo/Builtin.mlg" }
                                            , sort = External
                                            }
                                        }
                                    )
                                )
                                [ Unboxed
                                    ( Int32 1 )
                                ]
                            )
                            ( Cast AnyT
                                ( Var
                                    ( Meta
                                        { meta = AnyT
                                        , id = Id
                                            { name = "d"
                                            , moduleName = ModuleName
                                                { raw = "test/testcases/malgo/Show.mlg" }
                                            , sort = Temporal 233
                                            }
                                        }
                                    )
                                )
                            )
                        )
                        ( Assign
                            ( Meta
                                { meta = AnyT
                                , id = Id
                                    { name = "d"
                                    , moduleName = ModuleName
                                        { raw = "test/testcases/malgo/Show.mlg" }
                                    , sort = Temporal 236
                                    }
                                }
                            )
                            ( Assign
                                ( Meta
                                    { meta = AnyT
                                    , id = Id
                                        { name = "d"
                                        , moduleName = ModuleName
                                            { raw = "test/testcases/malgo/Show.mlg" }
                                        , sort = Temporal 235
                                        }
                                    }
                                )
                                ( Call
                                    ( Var
                                        ( Meta
                                            { meta = [ Int32T ] :-> AnyT
                                            , id = Id
                                                { name = "Int32#"
                                                , moduleName = ModuleName
                                                    { raw = "runtime/malgo/Builtin.mlg" }
                                                , sort = External
                                                }
                                            }
                                        )
                                    )
                                    [ Unboxed
                                        ( Int32 2 )
                                    ]
                                )
                                ( Cast AnyT
                                    ( Var
                                        ( Meta
                                            { meta = AnyT
                                            , id = Id
                                                { name = "d"
                                                , moduleName = ModuleName
                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                , sort = Temporal 235
                                                }
                                            }
                                        )
                                    )
                                )
                            )
                            ( Let
                                [ LocalDef
                                    { _variable = Meta
                                        { meta = SumT
                                            [ Con Tuple
                                                [ AnyT
                                                , AnyT
                                                ]
                                            ]
                                        , id = Id
                                            { name = "let"
                                            , moduleName = ModuleName
                                                { raw = "test/testcases/malgo/Show.mlg" }
                                            , sort = Temporal 237
                                            }
                                        }
                                    , typ = SumT
                                        [ Con Tuple
                                            [ AnyT
                                            , AnyT
                                            ]
                                        ]
                                    , _object = Pack
                                        ( SumT
                                            [ Con Tuple
                                                [ AnyT
                                                , AnyT
                                                ]
                                            ]
                                        )
                                        ( Con Tuple
                                            [ AnyT
                                            , AnyT
                                            ]
                                        )
                                        [ Var
                                            ( Meta
                                                { meta = AnyT
                                                , id = Id
                                                    { name = "d"
                                                    , moduleName = ModuleName
                                                        { raw = "test/testcases/malgo/Show.mlg" }
                                                    , sort = Temporal 234
                                                    }
                                                }
                                            )
                                        , Var
                                            ( Meta
                                                { meta = AnyT
                                                , id = Id
                                                    { name = "d"
                                                    , moduleName = ModuleName
                                                        { raw = "test/testcases/malgo/Show.mlg" }
                                                    , sort = Temporal 236
                                                    }
                                                }
                                            )
                                        ]
                                    }
                                ]
                                ( Atom
                                    ( Var
                                        ( Meta
                                            { meta = SumT
                                                [ Con Tuple
                                                    [ AnyT
                                                    , AnyT
                                                    ]
                                                ]
                                            , id = Id
                                                { name = "let"
                                                , moduleName = ModuleName
                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                , sort = Temporal 237
                                                }
                                            }
                                        )
                                    )
                                )
                            )
                        )
                    )
                    ( Assign
                        ( Meta
                            { meta = SumT
                                [ Con Tuple [] ]
                            , id = Id
                                { name = "d"
                                , moduleName = ModuleName
                                    { raw = "test/testcases/malgo/Show.mlg" }
                                , sort = Temporal 239
                                }
                            }
                        )
                        ( Call
                            ( Var
                                ( Meta
                                    { meta =
                                        [ SumT
                                            [ Con Tuple
                                                [ AnyT
                                                , AnyT
                                                ]
                                            ]
                                        ] :-> SumT
                                        [ Con Tuple [] ]
                                    , id = Id
                                        { name = "d"
                                        , moduleName = ModuleName
                                            { raw = "test/testcases/malgo/Show.mlg" }
                                        , sort = Temporal 232
                                        }
                                    }
                                )
                            )
                            [ Var
                                ( Meta
                                    { meta = SumT
                                        [ Con Tuple
                                            [ AnyT
                                            , AnyT
                                            ]
                                        ]
                                    , id = Id
                                        { name = "d"
                                        , moduleName = ModuleName
                                            { raw = "test/testcases/malgo/Show.mlg" }
                                        , sort = Temporal 238
                                        }
                                    }
                                )
                            ]
                        )
                        ( Cast
                            ( SumT
                                [ Con Tuple [] ]
                            )
                            ( Var
                                ( Meta
                                    { meta = SumT
                                        [ Con Tuple [] ]
                                    , id = Id
                                        { name = "d"
                                        , moduleName = ModuleName
                                            { raw = "test/testcases/malgo/Show.mlg" }
                                        , sort = Temporal 239
                                        }
                                    }
                                )
                            )
                        )
                    )
                )
            )
        ]
    , extFuns = []
    }
DsState
    { _nameEnv = fromList
        [
            ( Id
                { name = "malgo_mul_float"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ FloatT ] :->
                    ( [ FloatT ] :-> FloatT )
                , id = Id
                    { name = "malgo_mul_float"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "geString"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "geString"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_print_char"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ CharT ] :-> SumT
                    [ Con Tuple [] ]
                , id = Id
                    { name = "malgo_print_char"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_is_lower"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ CharT ] :-> Int32T
                , id = Id
                    { name = "malgo_is_lower"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_char_to_string"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ CharT ] :-> StringT
                , id = Id
                    { name = "malgo_char_to_string"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "gtChar#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ CharT ] :->
                    ( [ CharT ] :-> Int32T )
                , id = Id
                    { name = "gtChar#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "mulInt64"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "mulInt64"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "sqrtDouble"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :-> AnyT
                , id = Id
                    { name = "sqrtDouble"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "sqrtDouble#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ DoubleT ] :-> DoubleT
                , id = Id
                    { name = "sqrtDouble#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "ltString"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "ltString"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "divDouble"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "divDouble"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_ne_double"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ DoubleT ] :->
                    ( [ DoubleT ] :-> Int32T )
                , id = Id
                    { name = "malgo_ne_double"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "isUpper#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ CharT ] :-> Int32T
                , id = Id
                    { name = "isUpper#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "punctuate"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "punctuate"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_le_char"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ CharT ] :->
                    ( [ CharT ] :-> Int32T )
                , id = Id
                    { name = "malgo_le_char"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "gtInt32"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "gtInt32"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "True"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [] :-> AnyT
                , id = Id
                    { name = "True"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "x"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 14
                }
            , Meta
                { meta = AnyT
                , id = Id
                    { name = "x"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 122
                    }
                }
            )
        ,
            ( Id
                { name = "neInt32#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int32T ] :->
                    ( [ Int32T ] :-> Int32T )
                , id = Id
                    { name = "neInt32#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "string#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ StringT ] :-> AnyT
                , id = Id
                    { name = "string#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_gt_string"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ StringT ] :->
                    ( [ StringT ] :-> Int32T )
                , id = Id
                    { name = "malgo_gt_string"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "gtInt64#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int64T ] :->
                    ( [ Int64T ] :-> Int32T )
                , id = Id
                    { name = "gtInt64#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_ne_float"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ FloatT ] :->
                    ( [ FloatT ] :-> Int32T )
                , id = Id
                    { name = "malgo_ne_float"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "String#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ StringT ] :-> AnyT
                , id = Id
                    { name = "String#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "getContents"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :-> AnyT
                , id = Id
                    { name = "getContents"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_gt_double"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ DoubleT ] :->
                    ( [ DoubleT ] :-> Int32T )
                , id = Id
                    { name = "malgo_gt_double"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "leInt64#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int64T ] :->
                    ( [ Int64T ] :-> Int32T )
                , id = Id
                    { name = "leInt64#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "eqString#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ StringT ] :->
                    ( [ StringT ] :-> Int32T )
                , id = Id
                    { name = "eqString#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "isAlphanum"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :-> AnyT
                , id = Id
                    { name = "isAlphanum"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "showDictA"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 8
                }
            , Meta
                { meta = RecordT
                    ( fromList
                        [
                            ( "show"
                            , [ AnyT ] :-> AnyT
                            )
                        ]
                    )
                , id = Id
                    { name = "showDictA"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 149
                    }
                }
            )
        ,
            ( Id
                { name = "leDouble"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "leDouble"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_lt_string"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ StringT ] :->
                    ( [ StringT ] :-> Int32T )
                , id = Id
                    { name = "malgo_lt_string"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "gtDouble"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "gtDouble"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "toStringFloat#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ FloatT ] :-> StringT
                , id = Id
                    { name = "toStringFloat#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "ltInt32#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int32T ] :->
                    ( [ Int32T ] :-> Int32T )
                , id = Id
                    { name = "ltInt32#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "lengthString"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :-> AnyT
                , id = Id
                    { name = "lengthString"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "geInt32#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int32T ] :->
                    ( [ Int32T ] :-> Int32T )
                , id = Id
                    { name = "geInt32#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_mul_int64_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int64T ] :->
                    ( [ Int64T ] :-> Int64T )
                , id = Id
                    { name = "malgo_mul_int64_t"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_le_float"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ FloatT ] :->
                    ( [ FloatT ] :-> Int32T )
                , id = Id
                    { name = "malgo_le_float"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_sub_float"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ FloatT ] :->
                    ( [ FloatT ] :-> FloatT )
                , id = Id
                    { name = "malgo_sub_float"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "flush"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :-> SumT
                    [ Con Tuple [] ]
                , id = Id
                    { name = "flush"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "isUpper"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :-> AnyT
                , id = Id
                    { name = "isUpper"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "neInt64#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int64T ] :->
                    ( [ Int64T ] :-> Int32T )
                , id = Id
                    { name = "neInt64#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "Float#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ FloatT ] :-> AnyT
                , id = Id
                    { name = "Float#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "show"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = External
                }
            , Meta
                { meta =
                    [ RecordT
                        ( fromList
                            [
                                ( "show"
                                , [ AnyT ] :-> AnyT
                                )
                            ]
                        )
                    ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "show"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_substring"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ StringT ] :->
                    ( [ Int64T ] :->
                        ( [ Int64T ] :-> StringT )
                    )
                , id = Id
                    { name = "malgo_substring"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "float#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ FloatT ] :-> AnyT
                , id = Id
                    { name = "float#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "mapList"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Meta
                { meta =
                    [ [ AnyT ] :-> AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "mapList"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_panic"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ StringT ] :-> AnyT
                , id = Id
                    { name = "malgo_panic"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "showInt32"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = External
                }
            , Meta
                { meta = RecordT
                    ( fromList
                        [
                            ( "show"
                            , [ AnyT ] :-> AnyT
                            )
                        ]
                    )
                , id = Id
                    { name = "showInt32"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "eqInt64"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "eqInt64"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "subInt32#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int32T ] :->
                    ( [ Int32T ] :-> Int32T )
                , id = Id
                    { name = "subInt32#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "Nil"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Meta
                { meta = [] :-> AnyT
                , id = Id
                    { name = "Nil"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_eq_float"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ FloatT ] :->
                    ( [ FloatT ] :-> Int32T )
                , id = Id
                    { name = "malgo_eq_float"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_string_length"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ StringT ] :-> Int64T
                , id = Id
                    { name = "malgo_string_length"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "putStrLn"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :-> SumT
                    [ Con Tuple [] ]
                , id = Id
                    { name = "putStrLn"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_div_float"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ FloatT ] :->
                    ( [ FloatT ] :-> FloatT )
                , id = Id
                    { name = "malgo_div_float"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "divInt64#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int64T ] :->
                    ( [ Int64T ] :-> Int64T )
                , id = Id
                    { name = "divInt64#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_ne_int32_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int32T ] :->
                    ( [ Int32T ] :-> Int32T )
                , id = Id
                    { name = "malgo_ne_int32_t"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "subDouble"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "subDouble"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_div_double"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ DoubleT ] :->
                    ( [ DoubleT ] :-> DoubleT )
                , id = Id
                    { name = "malgo_div_double"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "print"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = External
                }
            , Meta
                { meta =
                    [ RecordT
                        ( fromList
                            [
                                ( "show"
                                , [ AnyT ] :-> AnyT
                                )
                            ]
                        )
                    ] :->
                    ( [ AnyT ] :-> SumT
                        [ Con Tuple [] ]
                    )
                , id = Id
                    { name = "print"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_eq_double"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ DoubleT ] :->
                    ( [ DoubleT ] :-> Int32T )
                , id = Id
                    { name = "malgo_eq_double"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "gtDouble#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ DoubleT ] :->
                    ( [ DoubleT ] :-> Int32T )
                , id = Id
                    { name = "gtDouble#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "Cons"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "Cons"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "sqrtf"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ FloatT ] :-> FloatT
                , id = Id
                    { name = "sqrtf"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "int32#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int32T ] :-> AnyT
                , id = Id
                    { name = "int32#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_eq_char"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ CharT ] :->
                    ( [ CharT ] :-> Int32T )
                , id = Id
                    { name = "malgo_eq_char"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "sqrtFloat"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :-> AnyT
                , id = Id
                    { name = "sqrtFloat"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "leInt64"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "leInt64"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "double#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ DoubleT ] :-> AnyT
                , id = Id
                    { name = "double#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "isWhiteSpace"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :-> AnyT
                , id = Id
                    { name = "isWhiteSpace"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "eqString"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "eqString"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "toStringDouble#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ DoubleT ] :-> StringT
                , id = Id
                    { name = "toStringDouble#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "Double#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ DoubleT ] :-> AnyT
                , id = Id
                    { name = "Double#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "addFloat#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ FloatT ] :->
                    ( [ FloatT ] :-> FloatT )
                , id = Id
                    { name = "addFloat#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "toStringInt32#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int32T ] :-> StringT
                , id = Id
                    { name = "toStringInt32#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "Int32#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int32T ] :-> AnyT
                , id = Id
                    { name = "Int32#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "eqDouble#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ DoubleT ] :->
                    ( [ DoubleT ] :-> Int32T )
                , id = Id
                    { name = "eqDouble#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "tailString"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :-> AnyT
                , id = Id
                    { name = "tailString"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "subFloat#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ FloatT ] :->
                    ( [ FloatT ] :-> FloatT )
                , id = Id
                    { name = "subFloat#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "atString#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int64T ] :->
                    ( [ StringT ] :-> CharT )
                , id = Id
                    { name = "atString#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_lt_float"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ FloatT ] :->
                    ( [ FloatT ] :-> Int32T )
                , id = Id
                    { name = "malgo_lt_float"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "ltInt64"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "ltInt64"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "printChar#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ CharT ] :-> SumT
                    [ Con Tuple [] ]
                , id = Id
                    { name = "printChar#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "case"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    (
                        [ [ AnyT ] :-> AnyT ] :-> AnyT
                    )
                , id = Id
                    { name = "case"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "takeWhileString"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Meta
                { meta =
                    [ [ AnyT ] :-> AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "takeWhileString"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "$_"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 112
                }
            , Meta
                { meta = SumT
                    [ Con Tuple [] ]
                , id = Id
                    { name = "$_"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 225
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_ge_int64_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int64T ] :->
                    ( [ Int64T ] :-> Int32T )
                , id = Id
                    { name = "malgo_ge_int64_t"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "listToString"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :-> AnyT
                , id = Id
                    { name = "listToString"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "subInt64#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int64T ] :->
                    ( [ Int64T ] :-> Int64T )
                , id = Id
                    { name = "subInt64#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "geString#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ StringT ] :->
                    ( [ StringT ] :-> Int32T )
                , id = Id
                    { name = "geString#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_gt_int64_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int64T ] :->
                    ( [ Int64T ] :-> Int32T )
                , id = Id
                    { name = "malgo_gt_int64_t"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "geDouble"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "geDouble"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "ltDouble"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "ltDouble"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_is_alphanum"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ CharT ] :-> Int32T
                , id = Id
                    { name = "malgo_is_alphanum"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "eqFloat"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "eqFloat"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_int32_t_to_string"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int32T ] :-> StringT
                , id = Id
                    { name = "malgo_int32_t_to_string"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_lt_char"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ CharT ] :->
                    ( [ CharT ] :-> Int32T )
                , id = Id
                    { name = "malgo_lt_char"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "main"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = External
                }
            , Meta
                { meta =
                    [ SumT
                        [ Con Tuple [] ]
                    ] :-> SumT
                    [ Con Tuple [] ]
                , id = Id
                    { name = "main"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "isDigit"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :-> AnyT
                , id = Id
                    { name = "isDigit"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_flush"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta =
                    [ SumT
                        [ Con Tuple [] ]
                    ] :-> SumT
                    [ Con Tuple [] ]
                , id = Id
                    { name = "malgo_flush"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_is_upper"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ CharT ] :-> Int32T
                , id = Id
                    { name = "malgo_is_upper"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "neDouble"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "neDouble"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "eqChar"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "eqChar"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "isLower"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :-> AnyT
                , id = Id
                    { name = "isLower"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "mulInt32#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int32T ] :->
                    ( [ Int32T ] :-> Int32T )
                , id = Id
                    { name = "mulInt32#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "<|"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Meta
                { meta =
                    [ [ AnyT ] :-> AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "<|"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "eqInt32"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "eqInt32"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "b"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 11
                }
            , Meta
                { meta = AnyT
                , id = Id
                    { name = "p"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 153
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_add_int32_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int32T ] :->
                    ( [ Int32T ] :-> Int32T )
                , id = Id
                    { name = "malgo_add_int32_t"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "gtInt64"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "gtInt64"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "showTuple2"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = External
                }
            , Meta
                { meta =
                    [ RecordT
                        ( fromList
                            [
                                ( "show"
                                , [ AnyT ] :-> AnyT
                                )
                            ]
                        )
                    ] :->
                    (
                        [ RecordT
                            ( fromList
                                [
                                    ( "show"
                                    , [ AnyT ] :-> AnyT
                                    )
                                ]
                            )
                        ] :-> RecordT
                        ( fromList
                            [
                                ( "show"
                                ,
                                    [ SumT
                                        [ Con Tuple
                                            [ AnyT
                                            , AnyT
                                            ]
                                        ]
                                    ] :-> AnyT
                                )
                            ]
                        )
                    )
                , id = Id
                    { name = "showTuple2"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_ne_char"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ CharT ] :->
                    ( [ CharT ] :-> Int32T )
                , id = Id
                    { name = "malgo_ne_char"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "neInt32"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "neInt32"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "consString"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "consString"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "substring#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ StringT ] :->
                    ( [ Int64T ] :->
                        ( [ Int64T ] :-> StringT )
                    )
                , id = Id
                    { name = "substring#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_mul_int32_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int32T ] :->
                    ( [ Int32T ] :-> Int32T )
                , id = Id
                    { name = "malgo_mul_int32_t"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "printInt64"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :-> SumT
                    [ Con Tuple [] ]
                , id = Id
                    { name = "printInt64"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "showDictB"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 9
                }
            , Meta
                { meta = RecordT
                    ( fromList
                        [
                            ( "show"
                            , [ AnyT ] :-> AnyT
                            )
                        ]
                    )
                , id = Id
                    { name = "showDictB"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 150
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_int64_t_to_string"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int64T ] :-> StringT
                , id = Id
                    { name = "malgo_int64_t_to_string"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "const"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "const"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "mulInt64#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int64T ] :->
                    ( [ Int64T ] :-> Int64T )
                , id = Id
                    { name = "mulInt64#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "appendString"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "appendString"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "toStringFloat"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :-> AnyT
                , id = Id
                    { name = "toStringFloat"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "ltDouble#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ DoubleT ] :->
                    ( [ DoubleT ] :-> Int32T )
                , id = Id
                    { name = "ltDouble#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_ge_int32_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int32T ] :->
                    ( [ Int32T ] :-> Int32T )
                , id = Id
                    { name = "malgo_ge_int32_t"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "gtChar"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "gtChar"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "x"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 3
                }
            , Meta
                { meta = AnyT
                , id = Id
                    { name = "x"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 113
                    }
                }
            )
        ,
            ( Id
                { name = "leChar#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ CharT ] :->
                    ( [ CharT ] :-> Int32T )
                , id = Id
                    { name = "leChar#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "mulFloat"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "mulFloat"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "neString"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "neString"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_string_append"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ StringT ] :->
                    ( [ StringT ] :-> StringT )
                , id = Id
                    { name = "malgo_string_append"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "geInt64#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int64T ] :->
                    ( [ Int64T ] :-> Int32T )
                , id = Id
                    { name = "geInt64#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "identity"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :-> AnyT
                , id = Id
                    { name = "identity"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "head"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :-> AnyT
                , id = Id
                    { name = "head"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "False"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [] :-> AnyT
                , id = Id
                    { name = "False"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "gtString#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ StringT ] :->
                    ( [ StringT ] :-> Int32T )
                , id = Id
                    { name = "gtString#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_get_contents"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta =
                    [ SumT
                        [ Con Tuple [] ]
                    ] :-> StringT
                , id = Id
                    { name = "malgo_get_contents"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_div_int64_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int64T ] :->
                    ( [ Int64T ] :-> Int64T )
                , id = Id
                    { name = "malgo_div_int64_t"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "tail"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :-> AnyT
                , id = Id
                    { name = "tail"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_unsafe_cast"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :-> AnyT
                , id = Id
                    { name = "malgo_unsafe_cast"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "ltInt64#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int64T ] :->
                    ( [ Int64T ] :-> Int32T )
                , id = Id
                    { name = "ltInt64#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "a"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 10
                }
            , Meta
                { meta = AnyT
                , id = Id
                    { name = "p"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 152
                    }
                }
            )
        ,
            ( Id
                { name = "toStringInt32"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :-> AnyT
                , id = Id
                    { name = "toStringInt32"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "printString"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :-> SumT
                    [ Con Tuple [] ]
                , id = Id
                    { name = "printString"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "divFloat"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "divFloat"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "sqrtFloat#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ FloatT ] :-> FloatT
                , id = Id
                    { name = "sqrtFloat#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "undefined"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = AnyT
                , id = Id
                    { name = "undefined"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "divFloat#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ FloatT ] :->
                    ( [ FloatT ] :-> FloatT )
                , id = Id
                    { name = "divFloat#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_eq_int32_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int32T ] :->
                    ( [ Int32T ] :-> Int32T )
                , id = Id
                    { name = "malgo_eq_int32_t"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "geFloat"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "geFloat"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "exitFailure"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta =
                    [ SumT
                        [ Con Tuple [] ]
                    ] :-> AnyT
                , id = Id
                    { name = "exitFailure"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "addFloat"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "addFloat"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_sub_int32_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int32T ] :->
                    ( [ Int32T ] :-> Int32T )
                , id = Id
                    { name = "malgo_sub_int32_t"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "unless"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :->
                        (
                            [
                                [ SumT
                                    [ Con Tuple [] ]
                                ] :-> AnyT
                            ] :-> AnyT
                        )
                    )
                , id = Id
                    { name = "unless"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "cond"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :-> AnyT
                , id = Id
                    { name = "cond"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_lt_double"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ DoubleT ] :->
                    ( [ DoubleT ] :-> Int32T )
                , id = Id
                    { name = "malgo_lt_double"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "gtFloat"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "gtFloat"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "eqChar#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ CharT ] :->
                    ( [ CharT ] :-> Int32T )
                , id = Id
                    { name = "eqChar#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "eqInt64#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int64T ] :->
                    ( [ Int64T ] :-> Int32T )
                , id = Id
                    { name = "eqInt64#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "x"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 0
                }
            , Meta
                { meta = AnyT
                , id = Id
                    { name = "x"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 137
                    }
                }
            )
        ,
            ( Id
                { name = "mulDouble#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ DoubleT ] :->
                    ( [ DoubleT ] :-> DoubleT )
                , id = Id
                    { name = "mulDouble#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "isDigit#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ CharT ] :-> Int32T
                , id = Id
                    { name = "isDigit#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_float_to_string"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ FloatT ] :-> StringT
                , id = Id
                    { name = "malgo_float_to_string"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "neInt64"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "neInt64"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "newline"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :-> SumT
                    [ Con Tuple [] ]
                , id = Id
                    { name = "newline"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "showDict"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 13
                }
            , Meta
                { meta = RecordT
                    ( fromList
                        [
                            ( "show"
                            , [ AnyT ] :-> AnyT
                            )
                        ]
                    )
                , id = Id
                    { name = "showDict"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 121
                    }
                }
            )
        ,
            ( Id
                { name = "divDouble#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ DoubleT ] :->
                    ( [ DoubleT ] :-> DoubleT )
                , id = Id
                    { name = "divDouble#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_string_at"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int64T ] :->
                    ( [ StringT ] :-> CharT )
                , id = Id
                    { name = "malgo_string_at"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "show"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 5
                }
            , Meta
                { meta = [ AnyT ] :-> AnyT
                , id = Id
                    { name = "p"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 120
                    }
                }
            )
        ,
            ( Id
                { name = "mulDouble"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "mulDouble"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "putStr"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :-> SumT
                    [ Con Tuple [] ]
                , id = Id
                    { name = "putStr"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "isTrue#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int32T ] :-> AnyT
                , id = Id
                    { name = "isTrue#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "subFloat"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "subFloat"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "Just"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :-> AnyT
                , id = Id
                    { name = "Just"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "not"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :-> AnyT
                , id = Id
                    { name = "not"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "toStringChar"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :-> AnyT
                , id = Id
                    { name = "toStringChar"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "geChar#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ CharT ] :->
                    ( [ CharT ] :-> Int32T )
                , id = Id
                    { name = "geChar#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_char_ord"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ CharT ] :-> Int32T
                , id = Id
                    { name = "malgo_char_ord"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_le_string"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ StringT ] :->
                    ( [ StringT ] :-> Int32T )
                , id = Id
                    { name = "malgo_le_string"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_le_double"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ DoubleT ] :->
                    ( [ DoubleT ] :-> Int32T )
                , id = Id
                    { name = "malgo_le_double"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "neChar"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "neChar"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_mul_double"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ DoubleT ] :->
                    ( [ DoubleT ] :-> DoubleT )
                , id = Id
                    { name = "malgo_mul_double"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "isLower#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ CharT ] :-> Int32T
                , id = Id
                    { name = "isLower#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_ge_string"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ StringT ] :->
                    ( [ StringT ] :-> Int32T )
                , id = Id
                    { name = "malgo_ge_string"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "fst"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Meta
                { meta =
                    [ SumT
                        [ Con Tuple
                            [ AnyT
                            , AnyT
                            ]
                        ]
                    ] :-> AnyT
                , id = Id
                    { name = "fst"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_lt_int64_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int64T ] :->
                    ( [ Int64T ] :-> Int32T )
                , id = Id
                    { name = "malgo_lt_int64_t"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "toStringChar#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ CharT ] :-> StringT
                , id = Id
                    { name = "toStringChar#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_get_char"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta =
                    [ SumT
                        [ Con Tuple [] ]
                    ] :-> CharT
                , id = Id
                    { name = "malgo_get_char"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "neFloat#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ FloatT ] :->
                    ( [ FloatT ] :-> Int32T )
                , id = Id
                    { name = "neFloat#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "addDouble#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ DoubleT ] :->
                    ( [ DoubleT ] :-> DoubleT )
                , id = Id
                    { name = "addDouble#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_le_int64_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int64T ] :->
                    ( [ Int64T ] :-> Int32T )
                , id = Id
                    { name = "malgo_le_int64_t"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_is_digit"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ CharT ] :-> Int32T
                , id = Id
                    { name = "malgo_is_digit"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "addInt32#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int32T ] :->
                    ( [ Int32T ] :-> Int32T )
                , id = Id
                    { name = "addInt32#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_gt_float"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ FloatT ] :->
                    ( [ FloatT ] :-> Int32T )
                , id = Id
                    { name = "malgo_gt_float"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "getChar"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :-> AnyT
                , id = Id
                    { name = "getChar"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "subInt64"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "subInt64"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "consString#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ CharT ] :->
                    ( [ StringT ] :-> StringT )
                , id = Id
                    { name = "consString#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "printChar"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :-> SumT
                    [ Con Tuple [] ]
                , id = Id
                    { name = "printChar"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "panic"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :-> AnyT
                , id = Id
                    { name = "panic"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "leDouble#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ DoubleT ] :->
                    ( [ DoubleT ] :-> Int32T )
                , id = Id
                    { name = "leDouble#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_gt_char"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ CharT ] :->
                    ( [ CharT ] :-> Int32T )
                , id = Id
                    { name = "malgo_gt_char"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "atString"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "atString"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_add_float"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ FloatT ] :->
                    ( [ FloatT ] :-> FloatT )
                , id = Id
                    { name = "malgo_add_float"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "ltFloat#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ FloatT ] :->
                    ( [ FloatT ] :-> Int32T )
                , id = Id
                    { name = "ltFloat#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_sub_double"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ DoubleT ] :->
                    ( [ DoubleT ] :-> DoubleT )
                , id = Id
                    { name = "malgo_sub_double"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "headString"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :-> AnyT
                , id = Id
                    { name = "headString"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "eqDouble"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "eqDouble"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "geFloat#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ FloatT ] :->
                    ( [ FloatT ] :-> Int32T )
                , id = Id
                    { name = "geFloat#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "Nothing"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Meta
                { meta = [] :-> AnyT
                , id = Id
                    { name = "Nothing"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_ge_float"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ FloatT ] :->
                    ( [ FloatT ] :-> Int32T )
                , id = Id
                    { name = "malgo_ge_float"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "neString#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ StringT ] :->
                    ( [ StringT ] :-> Int32T )
                , id = Id
                    { name = "neString#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "Char#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ CharT ] :-> AnyT
                , id = Id
                    { name = "Char#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "gtString"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "gtString"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "char#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ CharT ] :-> AnyT
                , id = Id
                    { name = "char#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "neDouble#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ DoubleT ] :->
                    ( [ DoubleT ] :-> Int32T )
                , id = Id
                    { name = "neDouble#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "|>"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    (
                        [ [ AnyT ] :-> AnyT ] :-> AnyT
                    )
                , id = Id
                    { name = "|>"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_print_string"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ StringT ] :-> SumT
                    [ Con Tuple [] ]
                , id = Id
                    { name = "malgo_print_string"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "leString"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "leString"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_exit_failure"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta =
                    [ SumT
                        [ Con Tuple [] ]
                    ] :-> AnyT
                , id = Id
                    { name = "malgo_exit_failure"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "ltString#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ StringT ] :->
                    ( [ StringT ] :-> Int32T )
                , id = Id
                    { name = "ltString#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_lt_int32_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int32T ] :->
                    ( [ Int32T ] :-> Int32T )
                , id = Id
                    { name = "malgo_lt_int32_t"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "addDouble"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "addDouble"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "eqFloat#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ FloatT ] :->
                    ( [ FloatT ] :-> Int32T )
                , id = Id
                    { name = "eqFloat#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "ltInt32"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "ltInt32"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "lengthString#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ StringT ] :-> Int64T
                , id = Id
                    { name = "lengthString#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_ne_string"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ StringT ] :->
                    ( [ StringT ] :-> Int32T )
                , id = Id
                    { name = "malgo_ne_string"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_sub_int64_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int64T ] :->
                    ( [ Int64T ] :-> Int64T )
                , id = Id
                    { name = "malgo_sub_int64_t"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "printInt32"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :-> SumT
                    [ Con Tuple [] ]
                , id = Id
                    { name = "printInt32"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "leChar"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "leChar"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_eq_string"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ StringT ] :->
                    ( [ StringT ] :-> Int32T )
                , id = Id
                    { name = "malgo_eq_string"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "substring"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :->
                        ( [ AnyT ] :-> AnyT )
                    )
                , id = Id
                    { name = "substring"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_add_double"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ DoubleT ] :->
                    ( [ DoubleT ] :-> DoubleT )
                , id = Id
                    { name = "malgo_add_double"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "dropWhileString"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Meta
                { meta =
                    [ [ AnyT ] :-> AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "dropWhileString"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "leFloat#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ FloatT ] :->
                    ( [ FloatT ] :-> Int32T )
                , id = Id
                    { name = "leFloat#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "gtFloat#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ FloatT ] :->
                    ( [ FloatT ] :-> Int32T )
                , id = Id
                    { name = "gtFloat#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_add_int64_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int64T ] :->
                    ( [ Int64T ] :-> Int64T )
                , id = Id
                    { name = "malgo_add_int64_t"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "isAlphanum#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ CharT ] :-> Int32T
                , id = Id
                    { name = "isAlphanum#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "toStringInt64"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :-> AnyT
                , id = Id
                    { name = "toStringInt64"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "neChar#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ CharT ] :->
                    ( [ CharT ] :-> Int32T )
                , id = Id
                    { name = "neChar#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "eqInt32#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int32T ] :->
                    ( [ Int32T ] :-> Int32T )
                , id = Id
                    { name = "eqInt32#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_ne_int64_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int64T ] :->
                    ( [ Int64T ] :-> Int32T )
                , id = Id
                    { name = "malgo_ne_int64_t"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "toStringDouble"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :-> AnyT
                , id = Id
                    { name = "toStringDouble"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_string_cons"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ CharT ] :->
                    ( [ StringT ] :-> StringT )
                , id = Id
                    { name = "malgo_string_cons"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "ltFloat"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "ltFloat"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "leInt32#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int32T ] :->
                    ( [ Int32T ] :-> Int32T )
                , id = Id
                    { name = "leInt32#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "int64#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int64T ] :-> AnyT
                , id = Id
                    { name = "int64#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "subDouble#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ DoubleT ] :->
                    ( [ DoubleT ] :-> DoubleT )
                , id = Id
                    { name = "subDouble#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "mulInt32"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "mulInt32"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "leFloat"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "leFloat"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "geInt64"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "geInt64"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "gtInt32#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int32T ] :->
                    ( [ Int32T ] :-> Int32T )
                , id = Id
                    { name = "gtInt32#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "Int64#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int64T ] :-> AnyT
                , id = Id
                    { name = "Int64#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "addInt64"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "addInt64"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_le_int32_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int32T ] :->
                    ( [ Int32T ] :-> Int32T )
                , id = Id
                    { name = "malgo_le_int32_t"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "mulFloat#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ FloatT ] :->
                    ( [ FloatT ] :-> FloatT )
                , id = Id
                    { name = "mulFloat#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "divInt64"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "divInt64"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "toStringInt64#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int64T ] :-> StringT
                , id = Id
                    { name = "toStringInt64#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "ltChar"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "ltChar"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "divInt32"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "divInt32"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "geInt32"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "geInt32"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "divInt32#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int32T ] :->
                    ( [ Int32T ] :-> Int32T )
                , id = Id
                    { name = "divInt32#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_ge_char"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ CharT ] :->
                    ( [ CharT ] :-> Int32T )
                , id = Id
                    { name = "malgo_ge_char"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "addInt32"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "addInt32"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "appendString#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ StringT ] :->
                    ( [ StringT ] :-> StringT )
                , id = Id
                    { name = "appendString#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "geDouble#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ DoubleT ] :->
                    ( [ DoubleT ] :-> Int32T )
                , id = Id
                    { name = "geDouble#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "neFloat"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "neFloat"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "ordChar#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ CharT ] :-> Int32T
                , id = Id
                    { name = "ordChar#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "y"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 1
                }
            , Meta
                { meta = AnyT
                , id = Id
                    { name = "y"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 138
                    }
                }
            )
        ,
            ( Id
                { name = "leString#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ StringT ] :->
                    ( [ StringT ] :-> Int32T )
                , id = Id
                    { name = "leString#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "<>"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "<>"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "addInt64#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int64T ] :->
                    ( [ Int64T ] :-> Int64T )
                , id = Id
                    { name = "addInt64#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "leInt32"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "leInt32"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "foldl"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Meta
                { meta =
                    [ [ AnyT ] :->
                        ( [ AnyT ] :-> AnyT )
                    ] :->
                    ( [ AnyT ] :->
                        ( [ AnyT ] :-> AnyT )
                    )
                , id = Id
                    { name = "foldl"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_eq_int64_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int64T ] :->
                    ( [ Int64T ] :-> Int32T )
                , id = Id
                    { name = "malgo_eq_int64_t"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_newline"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta =
                    [ SumT
                        [ Con Tuple [] ]
                    ] :-> SumT
                    [ Con Tuple [] ]
                , id = Id
                    { name = "malgo_newline"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "snd"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Meta
                { meta =
                    [ SumT
                        [ Con Tuple
                            [ AnyT
                            , AnyT
                            ]
                        ]
                    ] :-> AnyT
                , id = Id
                    { name = "snd"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "ltChar#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ CharT ] :->
                    ( [ CharT ] :-> Int32T )
                , id = Id
                    { name = "ltChar#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "if"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    (
                        [
                            [ SumT
                                [ Con Tuple [] ]
                            ] :-> AnyT
                        ] :->
                        (
                            [
                                [ SumT
                                    [ Con Tuple [] ]
                                ] :-> AnyT
                            ] :-> AnyT
                        )
                    )
                , id = Id
                    { name = "if"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "concatString"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :-> AnyT
                , id = Id
                    { name = "concatString"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "."
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Meta
                { meta =
                    [ [ AnyT ] :-> AnyT ] :->
                    (
                        [ [ AnyT ] :-> AnyT ] :->
                        ( [ AnyT ] :-> AnyT )
                    )
                , id = Id
                    { name = "."
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_div_int32_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int32T ] :->
                    ( [ Int32T ] :-> Int32T )
                , id = Id
                    { name = "malgo_div_int32_t"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "printString#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ StringT ] :-> SumT
                    [ Con Tuple [] ]
                , id = Id
                    { name = "printString#"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "subInt32"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "subInt32"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "sqrt"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ DoubleT ] :-> DoubleT
                , id = Id
                    { name = "sqrt"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "ordChar"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :-> AnyT
                , id = Id
                    { name = "ordChar"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_double_to_string"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ DoubleT ] :-> StringT
                , id = Id
                    { name = "malgo_double_to_string"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_gt_int32_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ Int32T ] :->
                    ( [ Int32T ] :-> Int32T )
                , id = Id
                    { name = "malgo_gt_int32_t"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "geChar"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "geChar"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "malgo_ge_double"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Meta
                { meta = [ DoubleT ] :->
                    ( [ DoubleT ] :-> Int32T )
                , id = Id
                    { name = "malgo_ge_double"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = External
                    }
                }
            )
        ]
    , _signatureMap = fromList
        [
            ( Id
                { name = "malgo_mul_float"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim FloatT )
                    ( TyArr ( TyPrim FloatT ) ( TyPrim FloatT ) )
                )
            )
        ,
            ( Id
                { name = "geString"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "String"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "String"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Bool"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "malgo_print_char"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim CharT )
                    ( TyTuple 0 )
                )
            )
        ,
            ( Id
                { name = "malgo_is_lower"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim CharT ) ( TyPrim Int32T ) )
            )
        ,
            ( Id
                { name = "malgo_char_to_string"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim CharT ) ( TyPrim StringT ) )
            )
        ,
            ( Id
                { name = "gtChar#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim CharT )
                    ( TyArr ( TyPrim CharT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "mulInt64"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Int64"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Int64"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Int64"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "sqrtDouble"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Double"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyCon
                        ( Id
                            { name = "Double"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "sqrtDouble#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim DoubleT ) ( TyPrim DoubleT ) )
            )
        ,
            ( Id
                { name = "ltString"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "String"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "String"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Bool"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "divDouble"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Double"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Double"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Double"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "malgo_ne_double"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim DoubleT )
                    ( TyArr ( TyPrim DoubleT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "isUpper#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim CharT ) ( TyPrim Int32T ) )
            )
        ,
            ( Id
                { name = "punctuate"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Forall
                [ Id
                    { name = "a"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = Internal 127
                    }
                ]
                ( TyArr
                    ( TyVar
                        ( Id
                            { name = "a"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Prelude.mlg" }
                            , sort = Internal 127
                            }
                        )
                    )
                    ( TyArr
                        ( TyApp
                            ( TyCon
                                ( Id
                                    { name = "List"
                                    , moduleName = ModuleName
                                        { raw = "runtime/malgo/Prelude.mlg" }
                                    , sort = External
                                    }
                                )
                            )
                            ( TyVar
                                ( Id
                                    { name = "a"
                                    , moduleName = ModuleName
                                        { raw = "runtime/malgo/Prelude.mlg" }
                                    , sort = Internal 127
                                    }
                                )
                            )
                        )
                        ( TyApp
                            ( TyCon
                                ( Id
                                    { name = "List"
                                    , moduleName = ModuleName
                                        { raw = "runtime/malgo/Prelude.mlg" }
                                    , sort = External
                                    }
                                )
                            )
                            ( TyVar
                                ( Id
                                    { name = "a"
                                    , moduleName = ModuleName
                                        { raw = "runtime/malgo/Prelude.mlg" }
                                    , sort = Internal 127
                                    }
                                )
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "malgo_le_char"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim CharT )
                    ( TyArr ( TyPrim CharT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "gtInt32"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Int32"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Int32"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Bool"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "True"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyCon
                    ( Id
                        { name = "Bool"
                        , moduleName = ModuleName
                            { raw = "runtime/malgo/Builtin.mlg" }
                        , sort = External
                        }
                    )
                )
            )
        ,
            ( Id
                { name = "x"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 14
                }
            , Forall []
                ( TyVar
                    ( Id
                        { name = "t"
                        , moduleName = ModuleName
                            { raw = "test/testcases/malgo/Show.mlg" }
                        , sort = Internal 37
                        }
                    )
                )
            )
        ,
            ( Id
                { name = "neInt32#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int32T )
                    ( TyArr ( TyPrim Int32T ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "string#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim StringT )
                    ( TyCon
                        ( Id
                            { name = "String"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "malgo_gt_string"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim StringT )
                    ( TyArr ( TyPrim StringT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "gtInt64#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int64T )
                    ( TyArr ( TyPrim Int64T ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "malgo_ne_float"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim FloatT )
                    ( TyArr ( TyPrim FloatT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "String#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim StringT )
                    ( TyCon
                        ( Id
                            { name = "String"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "getContents"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall
                [ Id
                    { name = "t"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = Internal 1251
                    }
                ]
                ( TyArr
                    ( TyVar
                        ( Id
                            { name = "t"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = Internal 1251
                            }
                        )
                    )
                    ( TyCon
                        ( Id
                            { name = "String"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "malgo_gt_double"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim DoubleT )
                    ( TyArr ( TyPrim DoubleT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "leInt64#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int64T )
                    ( TyArr ( TyPrim Int64T ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "eqString#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim StringT )
                    ( TyArr ( TyPrim StringT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "isAlphanum"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Char"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyCon
                        ( Id
                            { name = "Bool"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "showDictA"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 8
                }
            , Forall []
                ( TyRecord
                    ( fromList
                        [
                            ( "show"
                            , TyArr
                                ( TyVar
                                    ( Id
                                        { name = "t"
                                        , moduleName = ModuleName
                                            { raw = "test/testcases/malgo/Show.mlg" }
                                        , sort = Internal 61
                                        }
                                    )
                                )
                                ( TyCon
                                    ( Id
                                        { name = "String"
                                        , moduleName = ModuleName
                                            { raw = "runtime/malgo/Builtin.mlg" }
                                        , sort = External
                                        }
                                    )
                                )
                            )
                        ]
                    )
                )
            )
        ,
            ( Id
                { name = "leDouble"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Double"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Double"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Bool"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "malgo_lt_string"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim StringT )
                    ( TyArr ( TyPrim StringT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "gtDouble"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Double"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Double"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Bool"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "toStringFloat#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim FloatT ) ( TyPrim StringT ) )
            )
        ,
            ( Id
                { name = "ltInt32#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int32T )
                    ( TyArr ( TyPrim Int32T ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "lengthString"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "String"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyCon
                        ( Id
                            { name = "Int64"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "geInt32#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int32T )
                    ( TyArr ( TyPrim Int32T ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "malgo_mul_int64_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int64T )
                    ( TyArr ( TyPrim Int64T ) ( TyPrim Int64T ) )
                )
            )
        ,
            ( Id
                { name = "malgo_le_float"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim FloatT )
                    ( TyArr ( TyPrim FloatT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "malgo_sub_float"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim FloatT )
                    ( TyArr ( TyPrim FloatT ) ( TyPrim FloatT ) )
                )
            )
        ,
            ( Id
                { name = "flush"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall
                [ Id
                    { name = "t"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = Internal 1395
                    }
                ]
                ( TyArr
                    ( TyVar
                        ( Id
                            { name = "t"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = Internal 1395
                            }
                        )
                    )
                    ( TyTuple 0 )
                )
            )
        ,
            ( Id
                { name = "isUpper"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Char"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyCon
                        ( Id
                            { name = "Bool"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "neInt64#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int64T )
                    ( TyArr ( TyPrim Int64T ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "Float#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim FloatT )
                    ( TyCon
                        ( Id
                            { name = "Float"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "show"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = External
                }
            , Forall
                [ Id
                    { name = "a"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Internal 17
                    }
                ]
                ( TyArr
                    ( TyRecord
                        ( fromList
                            [
                                ( "show"
                                , TyArr
                                    ( TyVar
                                        ( Id
                                            { name = "a"
                                            , moduleName = ModuleName
                                                { raw = "test/testcases/malgo/Show.mlg" }
                                            , sort = Internal 17
                                            }
                                        )
                                    )
                                    ( TyCon
                                        ( Id
                                            { name = "String"
                                            , moduleName = ModuleName
                                                { raw = "runtime/malgo/Builtin.mlg" }
                                            , sort = External
                                            }
                                        )
                                    )
                                )
                            ]
                        )
                    )
                    ( TyArr
                        ( TyVar
                            ( Id
                                { name = "a"
                                , moduleName = ModuleName
                                    { raw = "test/testcases/malgo/Show.mlg" }
                                , sort = Internal 17
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "String"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "malgo_substring"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim StringT )
                    ( TyArr ( TyPrim Int64T )
                        ( TyArr ( TyPrim Int64T ) ( TyPrim StringT ) )
                    )
                )
            )
        ,
            ( Id
                { name = "float#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim FloatT )
                    ( TyCon
                        ( Id
                            { name = "Float"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "mapList"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Forall
                [ Id
                    { name = "a"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = Internal 125
                    }
                , Id
                    { name = "b"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = Internal 123
                    }
                ]
                ( TyArr
                    ( TyArr
                        ( TyVar
                            ( Id
                                { name = "a"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Prelude.mlg" }
                                , sort = Internal 125
                                }
                            )
                        )
                        ( TyVar
                            ( Id
                                { name = "b"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Prelude.mlg" }
                                , sort = Internal 123
                                }
                            )
                        )
                    )
                    ( TyArr
                        ( TyApp
                            ( TyCon
                                ( Id
                                    { name = "List"
                                    , moduleName = ModuleName
                                        { raw = "runtime/malgo/Prelude.mlg" }
                                    , sort = External
                                    }
                                )
                            )
                            ( TyVar
                                ( Id
                                    { name = "a"
                                    , moduleName = ModuleName
                                        { raw = "runtime/malgo/Prelude.mlg" }
                                    , sort = Internal 125
                                    }
                                )
                            )
                        )
                        ( TyApp
                            ( TyCon
                                ( Id
                                    { name = "List"
                                    , moduleName = ModuleName
                                        { raw = "runtime/malgo/Prelude.mlg" }
                                    , sort = External
                                    }
                                )
                            )
                            ( TyVar
                                ( Id
                                    { name = "b"
                                    , moduleName = ModuleName
                                        { raw = "runtime/malgo/Prelude.mlg" }
                                    , sort = Internal 123
                                    }
                                )
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "malgo_panic"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall
                [ Id
                    { name = "a"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = Internal 277
                    }
                ]
                ( TyArr ( TyPrim StringT )
                    ( TyVar
                        ( Id
                            { name = "a"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = Internal 277
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "showInt32"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = External
                }
            , Forall []
                ( TyRecord
                    ( fromList
                        [
                            ( "show"
                            , TyArr
                                ( TyCon
                                    ( Id
                                        { name = "Int32"
                                        , moduleName = ModuleName
                                            { raw = "runtime/malgo/Builtin.mlg" }
                                        , sort = External
                                        }
                                    )
                                )
                                ( TyCon
                                    ( Id
                                        { name = "String"
                                        , moduleName = ModuleName
                                            { raw = "runtime/malgo/Builtin.mlg" }
                                        , sort = External
                                        }
                                    )
                                )
                            )
                        ]
                    )
                )
            )
        ,
            ( Id
                { name = "eqInt64"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Int64"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Int64"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Bool"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "subInt32#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int32T )
                    ( TyArr ( TyPrim Int32T ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "Nil"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Forall
                [ Id
                    { name = "runtime/malgo/Prelude.mlg.#a_19"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = Internal 95
                    }
                ]
                ( TyApp
                    ( TyCon
                        ( Id
                            { name = "List"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Prelude.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyVar
                        ( Id
                            { name = "runtime/malgo/Prelude.mlg.#a_19"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Prelude.mlg" }
                            , sort = Internal 95
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "malgo_eq_float"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim FloatT )
                    ( TyArr ( TyPrim FloatT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "malgo_string_length"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim StringT ) ( TyPrim Int64T ) )
            )
        ,
            ( Id
                { name = "putStrLn"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "String"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyTuple 0 )
                )
            )
        ,
            ( Id
                { name = "malgo_div_float"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim FloatT )
                    ( TyArr ( TyPrim FloatT ) ( TyPrim FloatT ) )
                )
            )
        ,
            ( Id
                { name = "divInt64#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int64T )
                    ( TyArr ( TyPrim Int64T ) ( TyPrim Int64T ) )
                )
            )
        ,
            ( Id
                { name = "malgo_ne_int32_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int32T )
                    ( TyArr ( TyPrim Int32T ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "subDouble"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Double"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Double"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Double"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "malgo_div_double"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim DoubleT )
                    ( TyArr ( TyPrim DoubleT ) ( TyPrim DoubleT ) )
                )
            )
        ,
            ( Id
                { name = "print"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = External
                }
            , Forall
                [ Id
                    { name = "a"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Internal 23
                    }
                ]
                ( TyArr
                    ( TyRecord
                        ( fromList
                            [
                                ( "show"
                                , TyArr
                                    ( TyVar
                                        ( Id
                                            { name = "a"
                                            , moduleName = ModuleName
                                                { raw = "test/testcases/malgo/Show.mlg" }
                                            , sort = Internal 23
                                            }
                                        )
                                    )
                                    ( TyCon
                                        ( Id
                                            { name = "String"
                                            , moduleName = ModuleName
                                                { raw = "runtime/malgo/Builtin.mlg" }
                                            , sort = External
                                            }
                                        )
                                    )
                                )
                            ]
                        )
                    )
                    ( TyArr
                        ( TyVar
                            ( Id
                                { name = "a"
                                , moduleName = ModuleName
                                    { raw = "test/testcases/malgo/Show.mlg" }
                                , sort = Internal 23
                                }
                            )
                        )
                        ( TyTuple 0 )
                    )
                )
            )
        ,
            ( Id
                { name = "malgo_eq_double"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim DoubleT )
                    ( TyArr ( TyPrim DoubleT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "gtDouble#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim DoubleT )
                    ( TyArr ( TyPrim DoubleT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "Cons"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Forall
                [ Id
                    { name = "runtime/malgo/Prelude.mlg.#a_19"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = Internal 95
                    }
                ]
                ( TyArr
                    ( TyVar
                        ( Id
                            { name = "runtime/malgo/Prelude.mlg.#a_19"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Prelude.mlg" }
                            , sort = Internal 95
                            }
                        )
                    )
                    ( TyArr
                        ( TyApp
                            ( TyCon
                                ( Id
                                    { name = "List"
                                    , moduleName = ModuleName
                                        { raw = "runtime/malgo/Prelude.mlg" }
                                    , sort = External
                                    }
                                )
                            )
                            ( TyVar
                                ( Id
                                    { name = "runtime/malgo/Prelude.mlg.#a_19"
                                    , moduleName = ModuleName
                                        { raw = "runtime/malgo/Prelude.mlg" }
                                    , sort = Internal 95
                                    }
                                )
                            )
                        )
                        ( TyApp
                            ( TyCon
                                ( Id
                                    { name = "List"
                                    , moduleName = ModuleName
                                        { raw = "runtime/malgo/Prelude.mlg" }
                                    , sort = External
                                    }
                                )
                            )
                            ( TyVar
                                ( Id
                                    { name = "runtime/malgo/Prelude.mlg.#a_19"
                                    , moduleName = ModuleName
                                        { raw = "runtime/malgo/Prelude.mlg" }
                                    , sort = Internal 95
                                    }
                                )
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "sqrtf"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim FloatT ) ( TyPrim FloatT ) )
            )
        ,
            ( Id
                { name = "int32#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int32T )
                    ( TyCon
                        ( Id
                            { name = "Int32"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "malgo_eq_char"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim CharT )
                    ( TyArr ( TyPrim CharT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "sqrtFloat"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Float"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyCon
                        ( Id
                            { name = "Float"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "leInt64"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Int64"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Int64"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Bool"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "double#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim DoubleT )
                    ( TyCon
                        ( Id
                            { name = "Double"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "isWhiteSpace"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Char"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyCon
                        ( Id
                            { name = "Bool"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "eqString"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "String"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "String"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Bool"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "toStringDouble#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim DoubleT ) ( TyPrim StringT ) )
            )
        ,
            ( Id
                { name = "Double#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim DoubleT )
                    ( TyCon
                        ( Id
                            { name = "Double"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "addFloat#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim FloatT )
                    ( TyArr ( TyPrim FloatT ) ( TyPrim FloatT ) )
                )
            )
        ,
            ( Id
                { name = "toStringInt32#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int32T ) ( TyPrim StringT ) )
            )
        ,
            ( Id
                { name = "Int32#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int32T )
                    ( TyCon
                        ( Id
                            { name = "Int32"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "eqDouble#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim DoubleT )
                    ( TyArr ( TyPrim DoubleT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "tailString"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "String"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyCon
                        ( Id
                            { name = "String"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "subFloat#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim FloatT )
                    ( TyArr ( TyPrim FloatT ) ( TyPrim FloatT ) )
                )
            )
        ,
            ( Id
                { name = "atString#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int64T )
                    ( TyArr ( TyPrim StringT ) ( TyPrim CharT ) )
                )
            )
        ,
            ( Id
                { name = "malgo_lt_float"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim FloatT )
                    ( TyArr ( TyPrim FloatT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "ltInt64"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Int64"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Int64"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Bool"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "printChar#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim CharT )
                    ( TyTuple 0 )
                )
            )
        ,
            ( Id
                { name = "case"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Forall
                [ Id
                    { name = "b"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = Internal 103
                    }
                , Id
                    { name = "a"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = Internal 105
                    }
                ]
                ( TyArr
                    ( TyVar
                        ( Id
                            { name = "a"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Prelude.mlg" }
                            , sort = Internal 105
                            }
                        )
                    )
                    ( TyArr
                        ( TyArr
                            ( TyVar
                                ( Id
                                    { name = "a"
                                    , moduleName = ModuleName
                                        { raw = "runtime/malgo/Prelude.mlg" }
                                    , sort = Internal 105
                                    }
                                )
                            )
                            ( TyVar
                                ( Id
                                    { name = "b"
                                    , moduleName = ModuleName
                                        { raw = "runtime/malgo/Prelude.mlg" }
                                    , sort = Internal 103
                                    }
                                )
                            )
                        )
                        ( TyVar
                            ( Id
                                { name = "b"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Prelude.mlg" }
                                , sort = Internal 103
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "takeWhileString"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Char"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Bool"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "String"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "String"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "$_"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 112
                }
            , Forall []
                ( TyTuple 0 )
            )
        ,
            ( Id
                { name = "malgo_ge_int64_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int64T )
                    ( TyArr ( TyPrim Int64T ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "listToString"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyApp
                        ( TyCon
                            ( Id
                                { name = "List"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Prelude.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Char"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                    ( TyCon
                        ( Id
                            { name = "String"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "subInt64#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int64T )
                    ( TyArr ( TyPrim Int64T ) ( TyPrim Int64T ) )
                )
            )
        ,
            ( Id
                { name = "geString#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim StringT )
                    ( TyArr ( TyPrim StringT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "malgo_gt_int64_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int64T )
                    ( TyArr ( TyPrim Int64T ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "geDouble"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Double"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Double"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Bool"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "ltDouble"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Double"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Double"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Bool"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "malgo_is_alphanum"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim CharT ) ( TyPrim Int32T ) )
            )
        ,
            ( Id
                { name = "eqFloat"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Float"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Float"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Bool"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "malgo_int32_t_to_string"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int32T ) ( TyPrim StringT ) )
            )
        ,
            ( Id
                { name = "malgo_lt_char"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim CharT )
                    ( TyArr ( TyPrim CharT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "main"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyTuple 0 )
                    ( TyTuple 0 )
                )
            )
        ,
            ( Id
                { name = "isDigit"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Char"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyCon
                        ( Id
                            { name = "Bool"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "malgo_flush"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyTuple 0 )
                    ( TyTuple 0 )
                )
            )
        ,
            ( Id
                { name = "malgo_is_upper"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim CharT ) ( TyPrim Int32T ) )
            )
        ,
            ( Id
                { name = "neDouble"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Double"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Double"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Bool"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "eqChar"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Char"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Char"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Bool"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "isLower"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Char"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyCon
                        ( Id
                            { name = "Bool"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "mulInt32#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int32T )
                    ( TyArr ( TyPrim Int32T ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "<|"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Forall
                [ Id
                    { name = "a"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = Internal 139
                    }
                , Id
                    { name = "b"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = Internal 141
                    }
                ]
                ( TyArr
                    ( TyArr
                        ( TyVar
                            ( Id
                                { name = "a"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Prelude.mlg" }
                                , sort = Internal 139
                                }
                            )
                        )
                        ( TyVar
                            ( Id
                                { name = "b"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Prelude.mlg" }
                                , sort = Internal 141
                                }
                            )
                        )
                    )
                    ( TyArr
                        ( TyVar
                            ( Id
                                { name = "a"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Prelude.mlg" }
                                , sort = Internal 139
                                }
                            )
                        )
                        ( TyVar
                            ( Id
                                { name = "b"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Prelude.mlg" }
                                , sort = Internal 141
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "eqInt32"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Int32"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Int32"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Bool"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "b"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 11
                }
            , Forall []
                ( TyVar
                    ( Id
                        { name = "t"
                        , moduleName = ModuleName
                            { raw = "test/testcases/malgo/Show.mlg" }
                        , sort = Internal 63
                        }
                    )
                )
            )
        ,
            ( Id
                { name = "malgo_add_int32_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int32T )
                    ( TyArr ( TyPrim Int32T ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "gtInt64"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Int64"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Int64"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Bool"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "showTuple2"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = External
                }
            , Forall
                [ Id
                    { name = "b"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Internal 21
                    }
                , Id
                    { name = "a"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Internal 19
                    }
                ]
                ( TyArr
                    ( TyRecord
                        ( fromList
                            [
                                ( "show"
                                , TyArr
                                    ( TyVar
                                        ( Id
                                            { name = "a"
                                            , moduleName = ModuleName
                                                { raw = "test/testcases/malgo/Show.mlg" }
                                            , sort = Internal 19
                                            }
                                        )
                                    )
                                    ( TyCon
                                        ( Id
                                            { name = "String"
                                            , moduleName = ModuleName
                                                { raw = "runtime/malgo/Builtin.mlg" }
                                            , sort = External
                                            }
                                        )
                                    )
                                )
                            ]
                        )
                    )
                    ( TyArr
                        ( TyRecord
                            ( fromList
                                [
                                    ( "show"
                                    , TyArr
                                        ( TyVar
                                            ( Id
                                                { name = "b"
                                                , moduleName = ModuleName
                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                , sort = Internal 21
                                                }
                                            )
                                        )
                                        ( TyCon
                                            ( Id
                                                { name = "String"
                                                , moduleName = ModuleName
                                                    { raw = "runtime/malgo/Builtin.mlg" }
                                                , sort = External
                                                }
                                            )
                                        )
                                    )
                                ]
                            )
                        )
                        ( TyRecord
                            ( fromList
                                [
                                    ( "show"
                                    , TyArr
                                        ( TyApp
                                            ( TyApp
                                                ( TyTuple 2 )
                                                ( TyVar
                                                    ( Id
                                                        { name = "a"
                                                        , moduleName = ModuleName
                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                        , sort = Internal 19
                                                        }
                                                    )
                                                )
                                            )
                                            ( TyVar
                                                ( Id
                                                    { name = "b"
                                                    , moduleName = ModuleName
                                                        { raw = "test/testcases/malgo/Show.mlg" }
                                                    , sort = Internal 21
                                                    }
                                                )
                                            )
                                        )
                                        ( TyCon
                                            ( Id
                                                { name = "String"
                                                , moduleName = ModuleName
                                                    { raw = "runtime/malgo/Builtin.mlg" }
                                                , sort = External
                                                }
                                            )
                                        )
                                    )
                                ]
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "malgo_ne_char"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim CharT )
                    ( TyArr ( TyPrim CharT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "neInt32"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Int32"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Int32"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Bool"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "consString"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Char"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "String"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "String"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "substring#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim StringT )
                    ( TyArr ( TyPrim Int64T )
                        ( TyArr ( TyPrim Int64T ) ( TyPrim StringT ) )
                    )
                )
            )
        ,
            ( Id
                { name = "malgo_mul_int32_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int32T )
                    ( TyArr ( TyPrim Int32T ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "printInt64"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Int64"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyTuple 0 )
                )
            )
        ,
            ( Id
                { name = "showDictB"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 9
                }
            , Forall []
                ( TyRecord
                    ( fromList
                        [
                            ( "show"
                            , TyArr
                                ( TyVar
                                    ( Id
                                        { name = "t"
                                        , moduleName = ModuleName
                                            { raw = "test/testcases/malgo/Show.mlg" }
                                        , sort = Internal 63
                                        }
                                    )
                                )
                                ( TyCon
                                    ( Id
                                        { name = "String"
                                        , moduleName = ModuleName
                                            { raw = "runtime/malgo/Builtin.mlg" }
                                        , sort = External
                                        }
                                    )
                                )
                            )
                        ]
                    )
                )
            )
        ,
            ( Id
                { name = "malgo_int64_t_to_string"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int64T ) ( TyPrim StringT ) )
            )
        ,
            ( Id
                { name = "const"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Forall
                [ Id
                    { name = "b"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = Internal 99
                    }
                , Id
                    { name = "a"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = Internal 101
                    }
                ]
                ( TyArr
                    ( TyVar
                        ( Id
                            { name = "a"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Prelude.mlg" }
                            , sort = Internal 101
                            }
                        )
                    )
                    ( TyArr
                        ( TyVar
                            ( Id
                                { name = "b"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Prelude.mlg" }
                                , sort = Internal 99
                                }
                            )
                        )
                        ( TyVar
                            ( Id
                                { name = "a"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Prelude.mlg" }
                                , sort = Internal 101
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "mulInt64#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int64T )
                    ( TyArr ( TyPrim Int64T ) ( TyPrim Int64T ) )
                )
            )
        ,
            ( Id
                { name = "appendString"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "String"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "String"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "String"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "toStringFloat"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Float"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyCon
                        ( Id
                            { name = "String"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "ltDouble#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim DoubleT )
                    ( TyArr ( TyPrim DoubleT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "malgo_ge_int32_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int32T )
                    ( TyArr ( TyPrim Int32T ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "gtChar"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Char"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Char"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Bool"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "x"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 3
                }
            , Forall []
                ( TyCon
                    ( Id
                        { name = "Int32"
                        , moduleName = ModuleName
                            { raw = "runtime/malgo/Builtin.mlg" }
                        , sort = External
                        }
                    )
                )
            )
        ,
            ( Id
                { name = "leChar#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim CharT )
                    ( TyArr ( TyPrim CharT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "mulFloat"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Float"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Float"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Float"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "neString"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "String"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "String"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Bool"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "malgo_string_append"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim StringT )
                    ( TyArr ( TyPrim StringT ) ( TyPrim StringT ) )
                )
            )
        ,
            ( Id
                { name = "geInt64#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int64T )
                    ( TyArr ( TyPrim Int64T ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "identity"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Forall
                [ Id
                    { name = "a"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = Internal 97
                    }
                ]
                ( TyArr
                    ( TyVar
                        ( Id
                            { name = "a"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Prelude.mlg" }
                            , sort = Internal 97
                            }
                        )
                    )
                    ( TyVar
                        ( Id
                            { name = "a"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Prelude.mlg" }
                            , sort = Internal 97
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "head"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Forall
                [ Id
                    { name = "a"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = Internal 115
                    }
                ]
                ( TyArr
                    ( TyApp
                        ( TyCon
                            ( Id
                                { name = "List"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Prelude.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyVar
                            ( Id
                                { name = "a"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Prelude.mlg" }
                                , sort = Internal 115
                                }
                            )
                        )
                    )
                    ( TyVar
                        ( Id
                            { name = "a"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Prelude.mlg" }
                            , sort = Internal 115
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "False"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyCon
                    ( Id
                        { name = "Bool"
                        , moduleName = ModuleName
                            { raw = "runtime/malgo/Builtin.mlg" }
                        , sort = External
                        }
                    )
                )
            )
        ,
            ( Id
                { name = "gtString#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim StringT )
                    ( TyArr ( TyPrim StringT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "malgo_get_contents"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyTuple 0 ) ( TyPrim StringT )
                )
            )
        ,
            ( Id
                { name = "malgo_div_int64_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int64T )
                    ( TyArr ( TyPrim Int64T ) ( TyPrim Int64T ) )
                )
            )
        ,
            ( Id
                { name = "tail"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Forall
                [ Id
                    { name = "a"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = Internal 117
                    }
                ]
                ( TyArr
                    ( TyApp
                        ( TyCon
                            ( Id
                                { name = "List"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Prelude.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyVar
                            ( Id
                                { name = "a"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Prelude.mlg" }
                                , sort = Internal 117
                                }
                            )
                        )
                    )
                    ( TyApp
                        ( TyCon
                            ( Id
                                { name = "List"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Prelude.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyVar
                            ( Id
                                { name = "a"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Prelude.mlg" }
                                , sort = Internal 117
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "malgo_unsafe_cast"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall
                [ Id
                    { name = "b"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = Internal 281
                    }
                , Id
                    { name = "a"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = Internal 279
                    }
                ]
                ( TyArr
                    ( TyVar
                        ( Id
                            { name = "a"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = Internal 279
                            }
                        )
                    )
                    ( TyVar
                        ( Id
                            { name = "b"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = Internal 281
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "ltInt64#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int64T )
                    ( TyArr ( TyPrim Int64T ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "a"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 10
                }
            , Forall []
                ( TyVar
                    ( Id
                        { name = "t"
                        , moduleName = ModuleName
                            { raw = "test/testcases/malgo/Show.mlg" }
                        , sort = Internal 61
                        }
                    )
                )
            )
        ,
            ( Id
                { name = "toStringInt32"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Int32"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyCon
                        ( Id
                            { name = "String"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "printString"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "String"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyTuple 0 )
                )
            )
        ,
            ( Id
                { name = "divFloat"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Float"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Float"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Float"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "sqrtFloat#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim FloatT ) ( TyPrim FloatT ) )
            )
        ,
            ( Id
                { name = "undefined"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall
                [ Id
                    { name = "a"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = Internal 287
                    }
                ]
                ( TyVar
                    ( Id
                        { name = "a"
                        , moduleName = ModuleName
                            { raw = "runtime/malgo/Builtin.mlg" }
                        , sort = Internal 287
                        }
                    )
                )
            )
        ,
            ( Id
                { name = "divFloat#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim FloatT )
                    ( TyArr ( TyPrim FloatT ) ( TyPrim FloatT ) )
                )
            )
        ,
            ( Id
                { name = "malgo_eq_int32_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int32T )
                    ( TyArr ( TyPrim Int32T ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "geFloat"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Float"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Float"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Bool"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "exitFailure"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall
                [ Id
                    { name = "a"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = Internal 289
                    }
                ]
                ( TyArr
                    ( TyTuple 0 )
                    ( TyVar
                        ( Id
                            { name = "a"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = Internal 289
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "addFloat"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Float"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Float"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Float"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "malgo_sub_int32_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int32T )
                    ( TyArr ( TyPrim Int32T ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "unless"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Forall
                [ Id
                    { name = "a"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = Internal 145
                    }
                ]
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Bool"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyVar
                            ( Id
                                { name = "a"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Prelude.mlg" }
                                , sort = Internal 145
                                }
                            )
                        )
                        ( TyArr
                            ( TyArr
                                ( TyTuple 0 )
                                ( TyVar
                                    ( Id
                                        { name = "a"
                                        , moduleName = ModuleName
                                            { raw = "runtime/malgo/Prelude.mlg" }
                                        , sort = Internal 145
                                        }
                                    )
                                )
                            )
                            ( TyVar
                                ( Id
                                    { name = "a"
                                    , moduleName = ModuleName
                                        { raw = "runtime/malgo/Prelude.mlg" }
                                    , sort = Internal 145
                                    }
                                )
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "cond"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Forall
                [ Id
                    { name = "a"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = Internal 147
                    }
                ]
                ( TyArr
                    ( TyApp
                        ( TyCon
                            ( Id
                                { name = "List"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Prelude.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyApp
                            ( TyApp
                                ( TyTuple 2 )
                                ( TyCon
                                    ( Id
                                        { name = "Bool"
                                        , moduleName = ModuleName
                                            { raw = "runtime/malgo/Builtin.mlg" }
                                        , sort = External
                                        }
                                    )
                                )
                            )
                            ( TyArr
                                ( TyTuple 0 )
                                ( TyVar
                                    ( Id
                                        { name = "a"
                                        , moduleName = ModuleName
                                            { raw = "runtime/malgo/Prelude.mlg" }
                                        , sort = Internal 147
                                        }
                                    )
                                )
                            )
                        )
                    )
                    ( TyVar
                        ( Id
                            { name = "a"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Prelude.mlg" }
                            , sort = Internal 147
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "malgo_lt_double"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim DoubleT )
                    ( TyArr ( TyPrim DoubleT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "gtFloat"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Float"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Float"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Bool"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "eqChar#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim CharT )
                    ( TyArr ( TyPrim CharT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "eqInt64#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int64T )
                    ( TyArr ( TyPrim Int64T ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "x"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 0
                }
            , Forall []
                ( TyCon
                    ( Id
                        { name = "String"
                        , moduleName = ModuleName
                            { raw = "runtime/malgo/Builtin.mlg" }
                        , sort = External
                        }
                    )
                )
            )
        ,
            ( Id
                { name = "mulDouble#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim DoubleT )
                    ( TyArr ( TyPrim DoubleT ) ( TyPrim DoubleT ) )
                )
            )
        ,
            ( Id
                { name = "isDigit#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim CharT ) ( TyPrim Int32T ) )
            )
        ,
            ( Id
                { name = "malgo_float_to_string"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim FloatT ) ( TyPrim StringT ) )
            )
        ,
            ( Id
                { name = "neInt64"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Int64"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Int64"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Bool"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "newline"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall
                [ Id
                    { name = "t"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = Internal 561
                    }
                ]
                ( TyArr
                    ( TyVar
                        ( Id
                            { name = "t"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = Internal 561
                            }
                        )
                    )
                    ( TyTuple 0 )
                )
            )
        ,
            ( Id
                { name = "showDict"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 13
                }
            , Forall []
                ( TyRecord
                    ( fromList
                        [
                            ( "show"
                            , TyArr
                                ( TyVar
                                    ( Id
                                        { name = "t"
                                        , moduleName = ModuleName
                                            { raw = "test/testcases/malgo/Show.mlg" }
                                        , sort = Internal 37
                                        }
                                    )
                                )
                                ( TyCon
                                    ( Id
                                        { name = "String"
                                        , moduleName = ModuleName
                                            { raw = "runtime/malgo/Builtin.mlg" }
                                        , sort = External
                                        }
                                    )
                                )
                            )
                        ]
                    )
                )
            )
        ,
            ( Id
                { name = "divDouble#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim DoubleT )
                    ( TyArr ( TyPrim DoubleT ) ( TyPrim DoubleT ) )
                )
            )
        ,
            ( Id
                { name = "malgo_string_at"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int64T )
                    ( TyArr ( TyPrim StringT ) ( TyPrim CharT ) )
                )
            )
        ,
            ( Id
                { name = "show"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 5
                }
            , Forall []
                ( TyArr
                    ( TyVar
                        ( Id
                            { name = "a"
                            , moduleName = ModuleName
                                { raw = "test/testcases/malgo/Show.mlg" }
                            , sort = Internal 33
                            }
                        )
                    )
                    ( TyCon
                        ( Id
                            { name = "String"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "mulDouble"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Double"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Double"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Double"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "putStr"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "String"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyTuple 0 )
                )
            )
        ,
            ( Id
                { name = "isTrue#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int32T )
                    ( TyCon
                        ( Id
                            { name = "Bool"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "subFloat"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Float"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Float"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Float"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "Just"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Forall
                [ Id
                    { name = "runtime/malgo/Prelude.mlg.#a_18"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = Internal 94
                    }
                ]
                ( TyArr
                    ( TyVar
                        ( Id
                            { name = "runtime/malgo/Prelude.mlg.#a_18"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Prelude.mlg" }
                            , sort = Internal 94
                            }
                        )
                    )
                    ( TyApp
                        ( TyCon
                            ( Id
                                { name = "Maybe"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Prelude.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyVar
                            ( Id
                                { name = "runtime/malgo/Prelude.mlg.#a_18"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Prelude.mlg" }
                                , sort = Internal 94
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "not"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Bool"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyCon
                        ( Id
                            { name = "Bool"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "toStringChar"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Char"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyCon
                        ( Id
                            { name = "String"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "geChar#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim CharT )
                    ( TyArr ( TyPrim CharT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "malgo_char_ord"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim CharT ) ( TyPrim Int32T ) )
            )
        ,
            ( Id
                { name = "malgo_le_string"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim StringT )
                    ( TyArr ( TyPrim StringT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "malgo_le_double"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim DoubleT )
                    ( TyArr ( TyPrim DoubleT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "neChar"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Char"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Char"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Bool"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "malgo_mul_double"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim DoubleT )
                    ( TyArr ( TyPrim DoubleT ) ( TyPrim DoubleT ) )
                )
            )
        ,
            ( Id
                { name = "isLower#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim CharT ) ( TyPrim Int32T ) )
            )
        ,
            ( Id
                { name = "malgo_ge_string"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim StringT )
                    ( TyArr ( TyPrim StringT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "fst"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Forall
                [ Id
                    { name = "a"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = Internal 107
                    }
                , Id
                    { name = "b"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = Internal 109
                    }
                ]
                ( TyArr
                    ( TyApp
                        ( TyApp
                            ( TyTuple 2 )
                            ( TyVar
                                ( Id
                                    { name = "a"
                                    , moduleName = ModuleName
                                        { raw = "runtime/malgo/Prelude.mlg" }
                                    , sort = Internal 107
                                    }
                                )
                            )
                        )
                        ( TyVar
                            ( Id
                                { name = "b"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Prelude.mlg" }
                                , sort = Internal 109
                                }
                            )
                        )
                    )
                    ( TyVar
                        ( Id
                            { name = "a"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Prelude.mlg" }
                            , sort = Internal 107
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "malgo_lt_int64_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int64T )
                    ( TyArr ( TyPrim Int64T ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "toStringChar#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim CharT ) ( TyPrim StringT ) )
            )
        ,
            ( Id
                { name = "malgo_get_char"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyTuple 0 ) ( TyPrim CharT )
                )
            )
        ,
            ( Id
                { name = "neFloat#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim FloatT )
                    ( TyArr ( TyPrim FloatT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "addDouble#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim DoubleT )
                    ( TyArr ( TyPrim DoubleT ) ( TyPrim DoubleT ) )
                )
            )
        ,
            ( Id
                { name = "malgo_le_int64_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int64T )
                    ( TyArr ( TyPrim Int64T ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "malgo_is_digit"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim CharT ) ( TyPrim Int32T ) )
            )
        ,
            ( Id
                { name = "addInt32#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int32T )
                    ( TyArr ( TyPrim Int32T ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "malgo_gt_float"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim FloatT )
                    ( TyArr ( TyPrim FloatT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "getChar"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall
                [ Id
                    { name = "t"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = Internal 1257
                    }
                ]
                ( TyArr
                    ( TyVar
                        ( Id
                            { name = "t"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = Internal 1257
                            }
                        )
                    )
                    ( TyCon
                        ( Id
                            { name = "Char"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "subInt64"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Int64"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Int64"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Int64"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "consString#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim CharT )
                    ( TyArr ( TyPrim StringT ) ( TyPrim StringT ) )
                )
            )
        ,
            ( Id
                { name = "printChar"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Char"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyTuple 0 )
                )
            )
        ,
            ( Id
                { name = "panic"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall
                [ Id
                    { name = "a"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = Internal 285
                    }
                ]
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "String"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyVar
                        ( Id
                            { name = "a"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = Internal 285
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "leDouble#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim DoubleT )
                    ( TyArr ( TyPrim DoubleT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "malgo_gt_char"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim CharT )
                    ( TyArr ( TyPrim CharT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "atString"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Int64"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "String"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Char"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "malgo_add_float"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim FloatT )
                    ( TyArr ( TyPrim FloatT ) ( TyPrim FloatT ) )
                )
            )
        ,
            ( Id
                { name = "ltFloat#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim FloatT )
                    ( TyArr ( TyPrim FloatT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "malgo_sub_double"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim DoubleT )
                    ( TyArr ( TyPrim DoubleT ) ( TyPrim DoubleT ) )
                )
            )
        ,
            ( Id
                { name = "headString"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "String"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyApp
                        ( TyCon
                            ( Id
                                { name = "Maybe"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Prelude.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Char"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "eqDouble"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Double"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Double"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Bool"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "geFloat#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim FloatT )
                    ( TyArr ( TyPrim FloatT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "Nothing"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Forall
                [ Id
                    { name = "runtime/malgo/Prelude.mlg.#a_18"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = Internal 94
                    }
                ]
                ( TyApp
                    ( TyCon
                        ( Id
                            { name = "Maybe"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Prelude.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyVar
                        ( Id
                            { name = "runtime/malgo/Prelude.mlg.#a_18"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Prelude.mlg" }
                            , sort = Internal 94
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "malgo_ge_float"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim FloatT )
                    ( TyArr ( TyPrim FloatT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "neString#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim StringT )
                    ( TyArr ( TyPrim StringT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "Char#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim CharT )
                    ( TyCon
                        ( Id
                            { name = "Char"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "gtString"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "String"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "String"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Bool"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "char#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim CharT )
                    ( TyCon
                        ( Id
                            { name = "Char"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "neDouble#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim DoubleT )
                    ( TyArr ( TyPrim DoubleT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "|>"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Forall
                [ Id
                    { name = "b"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = Internal 135
                    }
                , Id
                    { name = "a"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = Internal 137
                    }
                ]
                ( TyArr
                    ( TyVar
                        ( Id
                            { name = "a"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Prelude.mlg" }
                            , sort = Internal 137
                            }
                        )
                    )
                    ( TyArr
                        ( TyArr
                            ( TyVar
                                ( Id
                                    { name = "a"
                                    , moduleName = ModuleName
                                        { raw = "runtime/malgo/Prelude.mlg" }
                                    , sort = Internal 137
                                    }
                                )
                            )
                            ( TyVar
                                ( Id
                                    { name = "b"
                                    , moduleName = ModuleName
                                        { raw = "runtime/malgo/Prelude.mlg" }
                                    , sort = Internal 135
                                    }
                                )
                            )
                        )
                        ( TyVar
                            ( Id
                                { name = "b"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Prelude.mlg" }
                                , sort = Internal 135
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "malgo_print_string"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim StringT )
                    ( TyTuple 0 )
                )
            )
        ,
            ( Id
                { name = "leString"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "String"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "String"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Bool"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "malgo_exit_failure"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall
                [ Id
                    { name = "a"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Builtin.mlg" }
                    , sort = Internal 283
                    }
                ]
                ( TyArr
                    ( TyTuple 0 )
                    ( TyVar
                        ( Id
                            { name = "a"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = Internal 283
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "ltString#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim StringT )
                    ( TyArr ( TyPrim StringT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "malgo_lt_int32_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int32T )
                    ( TyArr ( TyPrim Int32T ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "addDouble"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Double"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Double"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Double"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "eqFloat#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim FloatT )
                    ( TyArr ( TyPrim FloatT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "ltInt32"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Int32"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Int32"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Bool"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "lengthString#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim StringT ) ( TyPrim Int64T ) )
            )
        ,
            ( Id
                { name = "malgo_ne_string"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim StringT )
                    ( TyArr ( TyPrim StringT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "malgo_sub_int64_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int64T )
                    ( TyArr ( TyPrim Int64T ) ( TyPrim Int64T ) )
                )
            )
        ,
            ( Id
                { name = "printInt32"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Int32"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyTuple 0 )
                )
            )
        ,
            ( Id
                { name = "leChar"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Char"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Char"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Bool"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "malgo_eq_string"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim StringT )
                    ( TyArr ( TyPrim StringT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "substring"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "String"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Int64"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyArr
                            ( TyCon
                                ( Id
                                    { name = "Int64"
                                    , moduleName = ModuleName
                                        { raw = "runtime/malgo/Builtin.mlg" }
                                    , sort = External
                                    }
                                )
                            )
                            ( TyCon
                                ( Id
                                    { name = "String"
                                    , moduleName = ModuleName
                                        { raw = "runtime/malgo/Builtin.mlg" }
                                    , sort = External
                                    }
                                )
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "malgo_add_double"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim DoubleT )
                    ( TyArr ( TyPrim DoubleT ) ( TyPrim DoubleT ) )
                )
            )
        ,
            ( Id
                { name = "dropWhileString"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Char"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Bool"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "String"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "String"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "leFloat#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim FloatT )
                    ( TyArr ( TyPrim FloatT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "gtFloat#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim FloatT )
                    ( TyArr ( TyPrim FloatT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "malgo_add_int64_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int64T )
                    ( TyArr ( TyPrim Int64T ) ( TyPrim Int64T ) )
                )
            )
        ,
            ( Id
                { name = "isAlphanum#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim CharT ) ( TyPrim Int32T ) )
            )
        ,
            ( Id
                { name = "toStringInt64"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Int64"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyCon
                        ( Id
                            { name = "String"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "neChar#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim CharT )
                    ( TyArr ( TyPrim CharT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "eqInt32#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int32T )
                    ( TyArr ( TyPrim Int32T ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "malgo_ne_int64_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int64T )
                    ( TyArr ( TyPrim Int64T ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "toStringDouble"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Double"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyCon
                        ( Id
                            { name = "String"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "malgo_string_cons"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim CharT )
                    ( TyArr ( TyPrim StringT ) ( TyPrim StringT ) )
                )
            )
        ,
            ( Id
                { name = "ltFloat"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Float"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Float"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Bool"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "leInt32#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int32T )
                    ( TyArr ( TyPrim Int32T ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "int64#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int64T )
                    ( TyCon
                        ( Id
                            { name = "Int64"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "subDouble#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim DoubleT )
                    ( TyArr ( TyPrim DoubleT ) ( TyPrim DoubleT ) )
                )
            )
        ,
            ( Id
                { name = "mulInt32"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Int32"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Int32"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Int32"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "leFloat"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Float"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Float"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Bool"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "geInt64"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Int64"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Int64"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Bool"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "gtInt32#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int32T )
                    ( TyArr ( TyPrim Int32T ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "Int64#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int64T )
                    ( TyCon
                        ( Id
                            { name = "Int64"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "addInt64"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Int64"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Int64"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Int64"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "malgo_le_int32_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int32T )
                    ( TyArr ( TyPrim Int32T ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "mulFloat#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim FloatT )
                    ( TyArr ( TyPrim FloatT ) ( TyPrim FloatT ) )
                )
            )
        ,
            ( Id
                { name = "divInt64"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Int64"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Int64"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Int64"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "toStringInt64#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int64T ) ( TyPrim StringT ) )
            )
        ,
            ( Id
                { name = "ltChar"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Char"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Char"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Bool"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "divInt32"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Int32"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Int32"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Int32"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "geInt32"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Int32"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Int32"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Bool"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "divInt32#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int32T )
                    ( TyArr ( TyPrim Int32T ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "malgo_ge_char"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim CharT )
                    ( TyArr ( TyPrim CharT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "addInt32"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Int32"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Int32"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Int32"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "appendString#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim StringT )
                    ( TyArr ( TyPrim StringT ) ( TyPrim StringT ) )
                )
            )
        ,
            ( Id
                { name = "geDouble#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim DoubleT )
                    ( TyArr ( TyPrim DoubleT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "neFloat"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Float"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Float"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Bool"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "ordChar#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim CharT ) ( TyPrim Int32T ) )
            )
        ,
            ( Id
                { name = "y"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 1
                }
            , Forall []
                ( TyCon
                    ( Id
                        { name = "String"
                        , moduleName = ModuleName
                            { raw = "runtime/malgo/Builtin.mlg" }
                        , sort = External
                        }
                    )
                )
            )
        ,
            ( Id
                { name = "leString#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim StringT )
                    ( TyArr ( TyPrim StringT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "<>"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "String"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "String"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "String"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "addInt64#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int64T )
                    ( TyArr ( TyPrim Int64T ) ( TyPrim Int64T ) )
                )
            )
        ,
            ( Id
                { name = "leInt32"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Int32"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Int32"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Bool"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "foldl"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Forall
                [ Id
                    { name = "a"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = Internal 119
                    }
                , Id
                    { name = "b"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = Internal 121
                    }
                ]
                ( TyArr
                    ( TyArr
                        ( TyVar
                            ( Id
                                { name = "a"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Prelude.mlg" }
                                , sort = Internal 119
                                }
                            )
                        )
                        ( TyArr
                            ( TyVar
                                ( Id
                                    { name = "b"
                                    , moduleName = ModuleName
                                        { raw = "runtime/malgo/Prelude.mlg" }
                                    , sort = Internal 121
                                    }
                                )
                            )
                            ( TyVar
                                ( Id
                                    { name = "a"
                                    , moduleName = ModuleName
                                        { raw = "runtime/malgo/Prelude.mlg" }
                                    , sort = Internal 119
                                    }
                                )
                            )
                        )
                    )
                    ( TyArr
                        ( TyVar
                            ( Id
                                { name = "a"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Prelude.mlg" }
                                , sort = Internal 119
                                }
                            )
                        )
                        ( TyArr
                            ( TyApp
                                ( TyCon
                                    ( Id
                                        { name = "List"
                                        , moduleName = ModuleName
                                            { raw = "runtime/malgo/Prelude.mlg" }
                                        , sort = External
                                        }
                                    )
                                )
                                ( TyVar
                                    ( Id
                                        { name = "b"
                                        , moduleName = ModuleName
                                            { raw = "runtime/malgo/Prelude.mlg" }
                                        , sort = Internal 121
                                        }
                                    )
                                )
                            )
                            ( TyVar
                                ( Id
                                    { name = "a"
                                    , moduleName = ModuleName
                                        { raw = "runtime/malgo/Prelude.mlg" }
                                    , sort = Internal 119
                                    }
                                )
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "malgo_eq_int64_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int64T )
                    ( TyArr ( TyPrim Int64T ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "malgo_newline"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyTuple 0 )
                    ( TyTuple 0 )
                )
            )
        ,
            ( Id
                { name = "snd"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Forall
                [ Id
                    { name = "a"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = Internal 111
                    }
                , Id
                    { name = "b"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = Internal 113
                    }
                ]
                ( TyArr
                    ( TyApp
                        ( TyApp
                            ( TyTuple 2 )
                            ( TyVar
                                ( Id
                                    { name = "a"
                                    , moduleName = ModuleName
                                        { raw = "runtime/malgo/Prelude.mlg" }
                                    , sort = Internal 111
                                    }
                                )
                            )
                        )
                        ( TyVar
                            ( Id
                                { name = "b"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Prelude.mlg" }
                                , sort = Internal 113
                                }
                            )
                        )
                    )
                    ( TyVar
                        ( Id
                            { name = "b"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Prelude.mlg" }
                            , sort = Internal 113
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "ltChar#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim CharT )
                    ( TyArr ( TyPrim CharT ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "if"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Forall
                [ Id
                    { name = "a"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = Internal 143
                    }
                ]
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Bool"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyArr
                            ( TyTuple 0 )
                            ( TyVar
                                ( Id
                                    { name = "a"
                                    , moduleName = ModuleName
                                        { raw = "runtime/malgo/Prelude.mlg" }
                                    , sort = Internal 143
                                    }
                                )
                            )
                        )
                        ( TyArr
                            ( TyArr
                                ( TyTuple 0 )
                                ( TyVar
                                    ( Id
                                        { name = "a"
                                        , moduleName = ModuleName
                                            { raw = "runtime/malgo/Prelude.mlg" }
                                        , sort = Internal 143
                                        }
                                    )
                                )
                            )
                            ( TyVar
                                ( Id
                                    { name = "a"
                                    , moduleName = ModuleName
                                        { raw = "runtime/malgo/Prelude.mlg" }
                                    , sort = Internal 143
                                    }
                                )
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "concatString"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyApp
                        ( TyCon
                            ( Id
                                { name = "List"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Prelude.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "String"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                    ( TyCon
                        ( Id
                            { name = "String"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "."
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , Forall
                [ Id
                    { name = "c"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = Internal 129
                    }
                , Id
                    { name = "b"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = Internal 133
                    }
                , Id
                    { name = "a"
                    , moduleName = ModuleName
                        { raw = "runtime/malgo/Prelude.mlg" }
                    , sort = Internal 131
                    }
                ]
                ( TyArr
                    ( TyArr
                        ( TyVar
                            ( Id
                                { name = "b"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Prelude.mlg" }
                                , sort = Internal 133
                                }
                            )
                        )
                        ( TyVar
                            ( Id
                                { name = "c"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Prelude.mlg" }
                                , sort = Internal 129
                                }
                            )
                        )
                    )
                    ( TyArr
                        ( TyArr
                            ( TyVar
                                ( Id
                                    { name = "a"
                                    , moduleName = ModuleName
                                        { raw = "runtime/malgo/Prelude.mlg" }
                                    , sort = Internal 131
                                    }
                                )
                            )
                            ( TyVar
                                ( Id
                                    { name = "b"
                                    , moduleName = ModuleName
                                        { raw = "runtime/malgo/Prelude.mlg" }
                                    , sort = Internal 133
                                    }
                                )
                            )
                        )
                        ( TyArr
                            ( TyVar
                                ( Id
                                    { name = "a"
                                    , moduleName = ModuleName
                                        { raw = "runtime/malgo/Prelude.mlg" }
                                    , sort = Internal 131
                                    }
                                )
                            )
                            ( TyVar
                                ( Id
                                    { name = "c"
                                    , moduleName = ModuleName
                                        { raw = "runtime/malgo/Prelude.mlg" }
                                    , sort = Internal 129
                                    }
                                )
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "malgo_div_int32_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int32T )
                    ( TyArr ( TyPrim Int32T ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "printString#"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim StringT )
                    ( TyTuple 0 )
                )
            )
        ,
            ( Id
                { name = "subInt32"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Int32"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Int32"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Int32"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "sqrt"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim DoubleT ) ( TyPrim DoubleT ) )
            )
        ,
            ( Id
                { name = "ordChar"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Char"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyCon
                        ( Id
                            { name = "Int32"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "malgo_double_to_string"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim DoubleT ) ( TyPrim StringT ) )
            )
        ,
            ( Id
                { name = "malgo_gt_int32_t"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim Int32T )
                    ( TyArr ( TyPrim Int32T ) ( TyPrim Int32T ) )
                )
            )
        ,
            ( Id
                { name = "geChar"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "Char"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        )
                    )
                    ( TyArr
                        ( TyCon
                            ( Id
                                { name = "Char"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                        ( TyCon
                            ( Id
                                { name = "Bool"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Builtin.mlg" }
                                , sort = External
                                }
                            )
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "malgo_ge_double"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim DoubleT )
                    ( TyArr ( TyPrim DoubleT ) ( TyPrim Int32T ) )
                )
            )
        ]
    , _typeDefMap = fromList
        [
            ( Id
                { name = "a"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 4
                }
            , TypeDef
                { _typeConstructor = TyVar
                    ( Id
                        { name = "a"
                        , moduleName = ModuleName
                            { raw = "test/testcases/malgo/Show.mlg" }
                        , sort = Internal 17
                        }
                    )
                , _typeParameters = []
                , _valueConstructors = []
                }
            )
        ,
            ( Id
                { name = "Float"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , TypeDef
                { _typeConstructor = TyCon
                    ( Id
                        { name = "Float"
                        , moduleName = ModuleName
                            { raw = "runtime/malgo/Builtin.mlg" }
                        , sort = External
                        }
                    )
                , _typeParameters = []
                , _valueConstructors =
                    [
                        ( Id
                            { name = "Float#"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        , Forall []
                            ( TyArr ( TyPrim FloatT )
                                ( TyCon
                                    ( Id
                                        { name = "Float"
                                        , moduleName = ModuleName
                                            { raw = "runtime/malgo/Builtin.mlg" }
                                        , sort = External
                                        }
                                    )
                                )
                            )
                        )
                    ]
                }
            )
        ,
            ( Id
                { name = "Int64#"
                , moduleName = ModuleName
                    { raw = "Builtin" }
                , sort = External
                }
            , TypeDef
                { _typeConstructor = TyPrim Int64T
                , _typeParameters = []
                , _valueConstructors = []
                }
            )
        ,
            ( Id
                { name = "a"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 6
                }
            , TypeDef
                { _typeConstructor = TyVar
                    ( Id
                        { name = "a"
                        , moduleName = ModuleName
                            { raw = "test/testcases/malgo/Show.mlg" }
                        , sort = Internal 19
                        }
                    )
                , _typeParameters = []
                , _valueConstructors = []
                }
            )
        ,
            ( Id
                { name = "Int32"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , TypeDef
                { _typeConstructor = TyCon
                    ( Id
                        { name = "Int32"
                        , moduleName = ModuleName
                            { raw = "runtime/malgo/Builtin.mlg" }
                        , sort = External
                        }
                    )
                , _typeParameters = []
                , _valueConstructors =
                    [
                        ( Id
                            { name = "Int32#"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        , Forall []
                            ( TyArr ( TyPrim Int32T )
                                ( TyCon
                                    ( Id
                                        { name = "Int32"
                                        , moduleName = ModuleName
                                            { raw = "runtime/malgo/Builtin.mlg" }
                                        , sort = External
                                        }
                                    )
                                )
                            )
                        )
                    ]
                }
            )
        ,
            ( Id
                { name = "List"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , TypeDef
                { _typeConstructor = TyCon
                    ( Id
                        { name = "List"
                        , moduleName = ModuleName
                            { raw = "runtime/malgo/Prelude.mlg" }
                        , sort = External
                        }
                    )
                , _typeParameters =
                    [ Id
                        { name = "runtime/malgo/Prelude.mlg.#a_19"
                        , moduleName = ModuleName
                            { raw = "runtime/malgo/Prelude.mlg" }
                        , sort = Internal 95
                        }
                    ]
                , _valueConstructors =
                    [
                        ( Id
                            { name = "Nil"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Prelude.mlg" }
                            , sort = External
                            }
                        , Forall
                            [ Id
                                { name = "runtime/malgo/Prelude.mlg.#a_19"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Prelude.mlg" }
                                , sort = Internal 95
                                }
                            ]
                            ( TyApp
                                ( TyCon
                                    ( Id
                                        { name = "List"
                                        , moduleName = ModuleName
                                            { raw = "runtime/malgo/Prelude.mlg" }
                                        , sort = External
                                        }
                                    )
                                )
                                ( TyVar
                                    ( Id
                                        { name = "runtime/malgo/Prelude.mlg.#a_19"
                                        , moduleName = ModuleName
                                            { raw = "runtime/malgo/Prelude.mlg" }
                                        , sort = Internal 95
                                        }
                                    )
                                )
                            )
                        )
                    ,
                        ( Id
                            { name = "Cons"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Prelude.mlg" }
                            , sort = External
                            }
                        , Forall
                            [ Id
                                { name = "runtime/malgo/Prelude.mlg.#a_19"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Prelude.mlg" }
                                , sort = Internal 95
                                }
                            ]
                            ( TyArr
                                ( TyVar
                                    ( Id
                                        { name = "runtime/malgo/Prelude.mlg.#a_19"
                                        , moduleName = ModuleName
                                            { raw = "runtime/malgo/Prelude.mlg" }
                                        , sort = Internal 95
                                        }
                                    )
                                )
                                ( TyArr
                                    ( TyApp
                                        ( TyCon
                                            ( Id
                                                { name = "List"
                                                , moduleName = ModuleName
                                                    { raw = "runtime/malgo/Prelude.mlg" }
                                                , sort = External
                                                }
                                            )
                                        )
                                        ( TyVar
                                            ( Id
                                                { name = "runtime/malgo/Prelude.mlg.#a_19"
                                                , moduleName = ModuleName
                                                    { raw = "runtime/malgo/Prelude.mlg" }
                                                , sort = Internal 95
                                                }
                                            )
                                        )
                                    )
                                    ( TyApp
                                        ( TyCon
                                            ( Id
                                                { name = "List"
                                                , moduleName = ModuleName
                                                    { raw = "runtime/malgo/Prelude.mlg" }
                                                , sort = External
                                                }
                                            )
                                        )
                                        ( TyVar
                                            ( Id
                                                { name = "runtime/malgo/Prelude.mlg.#a_19"
                                                , moduleName = ModuleName
                                                    { raw = "runtime/malgo/Prelude.mlg" }
                                                , sort = Internal 95
                                                }
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    ]
                }
            )
        ,
            ( Id
                { name = "Show"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = External
                }
            , TypeDef
                { _typeConstructor = TyRecord
                    ( fromList
                        [
                            ( "show"
                            , TyArr
                                ( TyVar
                                    ( Id
                                        { name = "test/testcases/malgo/Show.mlg.#a_2"
                                        , moduleName = ModuleName
                                            { raw = "test/testcases/malgo/Show.mlg" }
                                        , sort = Internal 15
                                        }
                                    )
                                )
                                ( TyCon
                                    ( Id
                                        { name = "String"
                                        , moduleName = ModuleName
                                            { raw = "runtime/malgo/Builtin.mlg" }
                                        , sort = External
                                        }
                                    )
                                )
                            )
                        ]
                    )
                , _typeParameters = []
                , _valueConstructors = []
                }
            )
        ,
            ( Id
                { name = "a"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 2
                }
            , TypeDef
                { _typeConstructor = TyVar
                    ( Id
                        { name = "test/testcases/malgo/Show.mlg.#a_2"
                        , moduleName = ModuleName
                            { raw = "test/testcases/malgo/Show.mlg" }
                        , sort = Internal 15
                        }
                    )
                , _typeParameters = []
                , _valueConstructors = []
                }
            )
        ,
            ( Id
                { name = "b"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 7
                }
            , TypeDef
                { _typeConstructor = TyVar
                    ( Id
                        { name = "b"
                        , moduleName = ModuleName
                            { raw = "test/testcases/malgo/Show.mlg" }
                        , sort = Internal 21
                        }
                    )
                , _typeParameters = []
                , _valueConstructors = []
                }
            )
        ,
            ( Id
                { name = "a"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 12
                }
            , TypeDef
                { _typeConstructor = TyVar
                    ( Id
                        { name = "a"
                        , moduleName = ModuleName
                            { raw = "test/testcases/malgo/Show.mlg" }
                        , sort = Internal 23
                        }
                    )
                , _typeParameters = []
                , _valueConstructors = []
                }
            )
        ,
            ( Id
                { name = "Double#"
                , moduleName = ModuleName
                    { raw = "Builtin" }
                , sort = External
                }
            , TypeDef
                { _typeConstructor = TyPrim DoubleT
                , _typeParameters = []
                , _valueConstructors = []
                }
            )
        ,
            ( Id
                { name = "Int32#"
                , moduleName = ModuleName
                    { raw = "Builtin" }
                , sort = External
                }
            , TypeDef
                { _typeConstructor = TyPrim Int32T
                , _typeParameters = []
                , _valueConstructors = []
                }
            )
        ,
            ( Id
                { name = "Bool"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , TypeDef
                { _typeConstructor = TyCon
                    ( Id
                        { name = "Bool"
                        , moduleName = ModuleName
                            { raw = "runtime/malgo/Builtin.mlg" }
                        , sort = External
                        }
                    )
                , _typeParameters = []
                , _valueConstructors =
                    [
                        ( Id
                            { name = "False"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        , Forall []
                            ( TyCon
                                ( Id
                                    { name = "Bool"
                                    , moduleName = ModuleName
                                        { raw = "runtime/malgo/Builtin.mlg" }
                                    , sort = External
                                    }
                                )
                            )
                        )
                    ,
                        ( Id
                            { name = "True"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        , Forall []
                            ( TyCon
                                ( Id
                                    { name = "Bool"
                                    , moduleName = ModuleName
                                        { raw = "runtime/malgo/Builtin.mlg" }
                                    , sort = External
                                    }
                                )
                            )
                        )
                    ]
                }
            )
        ,
            ( Id
                { name = "Ptr#"
                , moduleName = ModuleName
                    { raw = "Builtin" }
                , sort = External
                }
            , TypeDef
                { _typeConstructor = TyPtr
                , _typeParameters = []
                , _valueConstructors = []
                }
            )
        ,
            ( Id
                { name = "Maybe"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , TypeDef
                { _typeConstructor = TyCon
                    ( Id
                        { name = "Maybe"
                        , moduleName = ModuleName
                            { raw = "runtime/malgo/Prelude.mlg" }
                        , sort = External
                        }
                    )
                , _typeParameters =
                    [ Id
                        { name = "runtime/malgo/Prelude.mlg.#a_18"
                        , moduleName = ModuleName
                            { raw = "runtime/malgo/Prelude.mlg" }
                        , sort = Internal 94
                        }
                    ]
                , _valueConstructors =
                    [
                        ( Id
                            { name = "Nothing"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Prelude.mlg" }
                            , sort = External
                            }
                        , Forall
                            [ Id
                                { name = "runtime/malgo/Prelude.mlg.#a_18"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Prelude.mlg" }
                                , sort = Internal 94
                                }
                            ]
                            ( TyApp
                                ( TyCon
                                    ( Id
                                        { name = "Maybe"
                                        , moduleName = ModuleName
                                            { raw = "runtime/malgo/Prelude.mlg" }
                                        , sort = External
                                        }
                                    )
                                )
                                ( TyVar
                                    ( Id
                                        { name = "runtime/malgo/Prelude.mlg.#a_18"
                                        , moduleName = ModuleName
                                            { raw = "runtime/malgo/Prelude.mlg" }
                                        , sort = Internal 94
                                        }
                                    )
                                )
                            )
                        )
                    ,
                        ( Id
                            { name = "Just"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Prelude.mlg" }
                            , sort = External
                            }
                        , Forall
                            [ Id
                                { name = "runtime/malgo/Prelude.mlg.#a_18"
                                , moduleName = ModuleName
                                    { raw = "runtime/malgo/Prelude.mlg" }
                                , sort = Internal 94
                                }
                            ]
                            ( TyArr
                                ( TyVar
                                    ( Id
                                        { name = "runtime/malgo/Prelude.mlg.#a_18"
                                        , moduleName = ModuleName
                                            { raw = "runtime/malgo/Prelude.mlg" }
                                        , sort = Internal 94
                                        }
                                    )
                                )
                                ( TyApp
                                    ( TyCon
                                        ( Id
                                            { name = "Maybe"
                                            , moduleName = ModuleName
                                                { raw = "runtime/malgo/Prelude.mlg" }
                                            , sort = External
                                            }
                                        )
                                    )
                                    ( TyVar
                                        ( Id
                                            { name = "runtime/malgo/Prelude.mlg.#a_18"
                                            , moduleName = ModuleName
                                                { raw = "runtime/malgo/Prelude.mlg" }
                                            , sort = Internal 94
                                            }
                                        )
                                    )
                                )
                            )
                        )
                    ]
                }
            )
        ,
            ( Id
                { name = "String#"
                , moduleName = ModuleName
                    { raw = "Builtin" }
                , sort = External
                }
            , TypeDef
                { _typeConstructor = TyPrim StringT
                , _typeParameters = []
                , _valueConstructors = []
                }
            )
        ,
            ( Id
                { name = "Char"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , TypeDef
                { _typeConstructor = TyCon
                    ( Id
                        { name = "Char"
                        , moduleName = ModuleName
                            { raw = "runtime/malgo/Builtin.mlg" }
                        , sort = External
                        }
                    )
                , _typeParameters = []
                , _valueConstructors =
                    [
                        ( Id
                            { name = "Char#"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        , Forall []
                            ( TyArr ( TyPrim CharT )
                                ( TyCon
                                    ( Id
                                        { name = "Char"
                                        , moduleName = ModuleName
                                            { raw = "runtime/malgo/Builtin.mlg" }
                                        , sort = External
                                        }
                                    )
                                )
                            )
                        )
                    ]
                }
            )
        ,
            ( Id
                { name = "Double"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , TypeDef
                { _typeConstructor = TyCon
                    ( Id
                        { name = "Double"
                        , moduleName = ModuleName
                            { raw = "runtime/malgo/Builtin.mlg" }
                        , sort = External
                        }
                    )
                , _typeParameters = []
                , _valueConstructors =
                    [
                        ( Id
                            { name = "Double#"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        , Forall []
                            ( TyArr ( TyPrim DoubleT )
                                ( TyCon
                                    ( Id
                                        { name = "Double"
                                        , moduleName = ModuleName
                                            { raw = "runtime/malgo/Builtin.mlg" }
                                        , sort = External
                                        }
                                    )
                                )
                            )
                        )
                    ]
                }
            )
        ,
            ( Id
                { name = "Float#"
                , moduleName = ModuleName
                    { raw = "Builtin" }
                , sort = External
                }
            , TypeDef
                { _typeConstructor = TyPrim FloatT
                , _typeParameters = []
                , _valueConstructors = []
                }
            )
        ,
            ( Id
                { name = "String"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , TypeDef
                { _typeConstructor = TyCon
                    ( Id
                        { name = "String"
                        , moduleName = ModuleName
                            { raw = "runtime/malgo/Builtin.mlg" }
                        , sort = External
                        }
                    )
                , _typeParameters = []
                , _valueConstructors =
                    [
                        ( Id
                            { name = "String#"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        , Forall []
                            ( TyArr ( TyPrim StringT )
                                ( TyCon
                                    ( Id
                                        { name = "String"
                                        , moduleName = ModuleName
                                            { raw = "runtime/malgo/Builtin.mlg" }
                                        , sort = External
                                        }
                                    )
                                )
                            )
                        )
                    ]
                }
            )
        ,
            ( Id
                { name = "Char#"
                , moduleName = ModuleName
                    { raw = "Builtin" }
                , sort = External
                }
            , TypeDef
                { _typeConstructor = TyPrim CharT
                , _typeParameters = []
                , _valueConstructors = []
                }
            )
        ,
            ( Id
                { name = "Int64"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Builtin.mlg" }
                , sort = External
                }
            , TypeDef
                { _typeConstructor = TyCon
                    ( Id
                        { name = "Int64"
                        , moduleName = ModuleName
                            { raw = "runtime/malgo/Builtin.mlg" }
                        , sort = External
                        }
                    )
                , _typeParameters = []
                , _valueConstructors =
                    [
                        ( Id
                            { name = "Int64#"
                            , moduleName = ModuleName
                                { raw = "runtime/malgo/Builtin.mlg" }
                            , sort = External
                            }
                        , Forall []
                            ( TyArr ( TyPrim Int64T )
                                ( TyCon
                                    ( Id
                                        { name = "Int64"
                                        , moduleName = ModuleName
                                            { raw = "runtime/malgo/Builtin.mlg" }
                                        , sort = External
                                        }
                                    )
                                )
                            )
                        )
                    ]
                }
            )
        ]
    , _kindCtx = fromList
        [
            ( Id
                { name = "b"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 97
                }
            , TyMeta
                ( Id
                    { name = "kb"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 96
                    }
                )
            )
        ,
            ( Id
                { name = "t"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 51
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 50
                    }
                )
            )
        ,
            ( Id
                { name = "t"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 83
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 82
                    }
                )
            )
        ,
            ( Id
                { name = "Int64#"
                , moduleName = ModuleName
                    { raw = "Builtin" }
                , sort = External
                }
            , TYPE
            )
        ,
            ( Id
                { name = "t"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 49
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 48
                    }
                )
            )
        ,
            ( Id
                { name = "t"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 81
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 80
                    }
                )
            )
        ,
            ( Id
                { name = "a"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 39
                }
            , TyMeta
                ( Id
                    { name = "ka"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 38
                    }
                )
            )
        ,
            ( Id
                { name = "List"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , TyArr TYPE TYPE
            )
        ,
            ( Id
                { name = "t"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 55
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 54
                    }
                )
            )
        ,
            ( Id
                { name = "t"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 87
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 86
                    }
                )
            )
        ,
            ( Id
                { name = "Show"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = External
                }
            , TyArr TYPE TYPE
            )
        ,
            ( Id
                { name = "a"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 33
                }
            , TyMeta
                ( Id
                    { name = "ka"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 32
                    }
                )
            )
        ,
            ( Id
                { name = "t"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 53
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 52
                    }
                )
            )
        ,
            ( Id
                { name = "t"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 85
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 84
                    }
                )
            )
        ,
            ( Id
                { name = "a"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 67
                }
            , TyMeta
                ( Id
                    { name = "ka"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 66
                    }
                )
            )
        ,
            ( Id
                { name = "a"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 99
                }
            , TyMeta
                ( Id
                    { name = "ka"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 98
                    }
                )
            )
        ,
            ( Id
                { name = "Double#"
                , moduleName = ModuleName
                    { raw = "Builtin" }
                , sort = External
                }
            , TYPE
            )
        ,
            ( Id
                { name = "t"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 59
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 58
                    }
                )
            )
        ,
            ( Id
                { name = "t"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 27
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 26
                    }
                )
            )
        ,
            ( Id
                { name = "Int32#"
                , moduleName = ModuleName
                    { raw = "Builtin" }
                , sort = External
                }
            , TYPE
            )
        ,
            ( Id
                { name = "t"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 57
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 56
                    }
                )
            )
        ,
            ( Id
                { name = "t"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 25
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 24
                    }
                )
            )
        ,
            ( Id
                { name = "t"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 89
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 88
                    }
                )
            )
        ,
            ( Id
                { name = "a"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 47
                }
            , TyMeta
                ( Id
                    { name = "ka"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 46
                    }
                )
            )
        ,
            ( Id
                { name = "Ptr#"
                , moduleName = ModuleName
                    { raw = "Builtin" }
                , sort = External
                }
            , TyArr TYPE TYPE
            )
        ,
            ( Id
                { name = "t"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 63
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 62
                    }
                )
            )
        ,
            ( Id
                { name = "t"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 31
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 30
                    }
                )
            )
        ,
            ( Id
                { name = "t"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 61
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 60
                    }
                )
            )
        ,
            ( Id
                { name = "t"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 29
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 28
                    }
                )
            )
        ,
            ( Id
                { name = "a"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 75
                }
            , TyMeta
                ( Id
                    { name = "ka"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 74
                    }
                )
            )
        ,
            ( Id
                { name = "Maybe"
                , moduleName = ModuleName
                    { raw = "runtime/malgo/Prelude.mlg" }
                , sort = External
                }
            , TyArr TYPE TYPE
            )
        ,
            ( Id
                { name = "t"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 35
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 34
                    }
                )
            )
        ,
            ( Id
                { name = "t"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 65
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 64
                    }
                )
            )
        ,
            ( Id
                { name = "a"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 23
                }
            , TyMeta
                ( Id
                    { name = "ka"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 22
                    }
                )
            )
        ,
            ( Id
                { name = "b"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 21
                }
            , TyMeta
                ( Id
                    { name = "kb"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 20
                    }
                )
            )
        ,
            ( Id
                { name = "t"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 103
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 102
                    }
                )
            )
        ,
            ( Id
                { name = "t"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 71
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 70
                    }
                )
            )
        ,
            ( Id
                { name = "String#"
                , moduleName = ModuleName
                    { raw = "Builtin" }
                , sort = External
                }
            , TYPE
            )
        ,
            ( Id
                { name = "a"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 17
                }
            , TyMeta
                ( Id
                    { name = "ka"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 16
                    }
                )
            )
        ,
            ( Id
                { name = "t"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 37
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 36
                    }
                )
            )
        ,
            ( Id
                { name = "t"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 101
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 100
                    }
                )
            )
        ,
            ( Id
                { name = "t"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 69
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 68
                    }
                )
            )
        ,
            ( Id
                { name = "a"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 19
                }
            , TyMeta
                ( Id
                    { name = "ka"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 18
                    }
                )
            )
        ,
            ( Id
                { name = "t"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 43
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 42
                    }
                )
            )
        ,
            ( Id
                { name = "t"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 107
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 106
                    }
                )
            )
        ,
            ( Id
                { name = "a"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 93
                }
            , TyMeta
                ( Id
                    { name = "ka"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 92
                    }
                )
            )
        ,
            ( Id
                { name = "b"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 91
                }
            , TyMeta
                ( Id
                    { name = "kb"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 90
                    }
                )
            )
        ,
            ( Id
                { name = "Float#"
                , moduleName = ModuleName
                    { raw = "Builtin" }
                , sort = External
                }
            , TYPE
            )
        ,
            ( Id
                { name = "t"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 41
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 40
                    }
                )
            )
        ,
            ( Id
                { name = "t"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 105
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 104
                    }
                )
            )
        ,
            ( Id
                { name = "t"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 73
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 72
                    }
                )
            )
        ,
            ( Id
                { name = "a"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 95
                }
            , TyMeta
                ( Id
                    { name = "ka"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 94
                    }
                )
            )
        ,
            ( Id
                { name = "t"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 111
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 110
                    }
                )
            )
        ,
            ( Id
                { name = "t"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 79
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 78
                    }
                )
            )
        ,
            ( Id
                { name = "Char#"
                , moduleName = ModuleName
                    { raw = "Builtin" }
                , sort = External
                }
            , TYPE
            )
        ,
            ( Id
                { name = "t"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 45
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 44
                    }
                )
            )
        ,
            ( Id
                { name = "t"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 109
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 108
                    }
                )
            )
        ,
            ( Id
                { name = "t"
                , moduleName = ModuleName
                    { raw = "test/testcases/malgo/Show.mlg" }
                , sort = Internal 77
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 76
                    }
                )
            )
        ]
    , _globalDefs =
        [ FunDef
            ( Meta
                { meta =
                    [ RecordT
                        ( fromList
                            [
                                ( "show"
                                , [ AnyT ] :-> AnyT
                                )
                            ]
                        )
                    , RecordT
                        ( fromList
                            [
                                ( "show"
                                , [ AnyT ] :-> AnyT
                                )
                            ]
                        )
                    ] :-> RecordT
                    ( fromList
                        [
                            ( "show"
                            ,
                                [ SumT
                                    [ Con Tuple
                                        [ AnyT
                                        , AnyT
                                        ]
                                    ]
                                ] :-> AnyT
                            )
                        ]
                    )
                , id = Id
                    { name = "showTuple2_curry"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 186
                    }
                }
            )
            [ Meta
                { meta = RecordT
                    ( fromList
                        [
                            ( "show"
                            , [ AnyT ] :-> AnyT
                            )
                        ]
                    )
                , id = Id
                    { name = "showDictA"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 187
                    }
                }
            , Meta
                { meta = RecordT
                    ( fromList
                        [
                            ( "show"
                            , [ AnyT ] :-> AnyT
                            )
                        ]
                    )
                , id = Id
                    { name = "showDictB"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 188
                    }
                }
            ]
            (
                [ RecordT
                    ( fromList
                        [
                            ( "show"
                            , [ AnyT ] :-> AnyT
                            )
                        ]
                    )
                , RecordT
                    ( fromList
                        [
                            ( "show"
                            , [ AnyT ] :-> AnyT
                            )
                        ]
                    )
                ] :-> RecordT
                ( fromList
                    [
                        ( "show"
                        ,
                            [ SumT
                                [ Con Tuple
                                    [ AnyT
                                    , AnyT
                                    ]
                                ]
                            ] :-> AnyT
                        )
                    ]
                )
            )
            ( Assign
                ( Meta
                    { meta =
                        [ SumT
                            [ Con Tuple
                                [ AnyT
                                , AnyT
                                ]
                            ]
                        ] :-> AnyT
                    , id = Id
                        { name = "d"
                        , moduleName = ModuleName
                            { raw = "test/testcases/malgo/Show.mlg" }
                        , sort = Temporal 222
                        }
                    }
                )
                ( Let
                    [ LocalDef
                        { _variable = Meta
                            { meta =
                                [ SumT
                                    [ Con Tuple
                                        [ AnyT
                                        , AnyT
                                        ]
                                    ]
                                ] :-> AnyT
                            , id = Id
                                { name = "fun"
                                , moduleName = ModuleName
                                    { raw = "test/testcases/malgo/Show.mlg" }
                                , sort = Temporal 189
                                }
                            }
                        , typ =
                            [ SumT
                                [ Con Tuple
                                    [ AnyT
                                    , AnyT
                                    ]
                                ]
                            ] :-> AnyT
                        , _object = Fun
                            [ Meta
                                { meta = SumT
                                    [ Con Tuple
                                        [ AnyT
                                        , AnyT
                                        ]
                                    ]
                                , id = Id
                                    { name = "tuple"
                                    , moduleName = ModuleName
                                        { raw = "test/testcases/malgo/Show.mlg" }
                                    , sort = Temporal 190
                                    }
                                }
                            ]
                            ( Match
                                ( Atom
                                    ( Var
                                        ( Meta
                                            { meta = SumT
                                                [ Con Tuple
                                                    [ AnyT
                                                    , AnyT
                                                    ]
                                                ]
                                            , id = Id
                                                { name = "tuple"
                                                , moduleName = ModuleName
                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                , sort = Temporal 190
                                                }
                                            }
                                        )
                                    )
                                )
                                [ Unpack
                                    ( Con Tuple
                                        [ AnyT
                                        , AnyT
                                        ]
                                    )
                                    [ Meta
                                        { meta = AnyT
                                        , id = Id
                                            { name = "p"
                                            , moduleName = ModuleName
                                                { raw = "test/testcases/malgo/Show.mlg" }
                                            , sort = Temporal 191
                                            }
                                        }
                                    , Meta
                                        { meta = AnyT
                                        , id = Id
                                            { name = "p"
                                            , moduleName = ModuleName
                                                { raw = "test/testcases/malgo/Show.mlg" }
                                            , sort = Temporal 192
                                            }
                                        }
                                    ]
                                    ( Assign
                                        ( Meta
                                            { meta = [ AnyT ] :-> AnyT
                                            , id = Id
                                                { name = "d"
                                                , moduleName = ModuleName
                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                , sort = Temporal 196
                                                }
                                            }
                                        )
                                        ( Assign
                                            ( Meta
                                                { meta = AnyT
                                                , id = Id
                                                    { name = "d"
                                                    , moduleName = ModuleName
                                                        { raw = "test/testcases/malgo/Show.mlg" }
                                                    , sort = Temporal 194
                                                    }
                                                }
                                            )
                                            ( Assign
                                                ( Meta
                                                    { meta = AnyT
                                                    , id = Id
                                                        { name = "d"
                                                        , moduleName = ModuleName
                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                        , sort = Temporal 193
                                                        }
                                                    }
                                                )
                                                ( Call
                                                    ( Var
                                                        ( Meta
                                                            { meta = [ StringT ] :-> AnyT
                                                            , id = Id
                                                                { name = "String#"
                                                                , moduleName = ModuleName
                                                                    { raw = "runtime/malgo/Builtin.mlg" }
                                                                , sort = External
                                                                }
                                                            }
                                                        )
                                                    )
                                                    [ Unboxed
                                                        ( String "(" )
                                                    ]
                                                )
                                                ( Cast AnyT
                                                    ( Var
                                                        ( Meta
                                                            { meta = AnyT
                                                            , id = Id
                                                                { name = "d"
                                                                , moduleName = ModuleName
                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                , sort = Temporal 193
                                                                }
                                                            }
                                                        )
                                                    )
                                                )
                                            )
                                            ( Assign
                                                ( Meta
                                                    { meta = [ AnyT ] :-> AnyT
                                                    , id = Id
                                                        { name = "d"
                                                        , moduleName = ModuleName
                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                        , sort = Temporal 195
                                                        }
                                                    }
                                                )
                                                ( Call
                                                    ( Var
                                                        ( Meta
                                                            { meta = [ AnyT ] :->
                                                                ( [ AnyT ] :-> AnyT )
                                                            , id = Id
                                                                { name = "<>"
                                                                , moduleName = ModuleName
                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                , sort = External
                                                                }
                                                            }
                                                        )
                                                    )
                                                    [ Var
                                                        ( Meta
                                                            { meta = AnyT
                                                            , id = Id
                                                                { name = "d"
                                                                , moduleName = ModuleName
                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                , sort = Temporal 194
                                                                }
                                                            }
                                                        )
                                                    ]
                                                )
                                                ( Cast
                                                    ( [ AnyT ] :-> AnyT )
                                                    ( Var
                                                        ( Meta
                                                            { meta = [ AnyT ] :-> AnyT
                                                            , id = Id
                                                                { name = "d"
                                                                , moduleName = ModuleName
                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                , sort = Temporal 195
                                                                }
                                                            }
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                        ( Assign
                                            ( Meta
                                                { meta = AnyT
                                                , id = Id
                                                    { name = "d"
                                                    , moduleName = ModuleName
                                                        { raw = "test/testcases/malgo/Show.mlg" }
                                                    , sort = Temporal 220
                                                    }
                                                }
                                            )
                                            ( Assign
                                                ( Meta
                                                    { meta = [ AnyT ] :-> AnyT
                                                    , id = Id
                                                        { name = "d"
                                                        , moduleName = ModuleName
                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                        , sort = Temporal 202
                                                        }
                                                    }
                                                )
                                                ( Assign
                                                    ( Meta
                                                        { meta = AnyT
                                                        , id = Id
                                                            { name = "d"
                                                            , moduleName = ModuleName
                                                                { raw = "test/testcases/malgo/Show.mlg" }
                                                            , sort = Temporal 200
                                                            }
                                                        }
                                                    )
                                                    ( Assign
                                                        ( Meta
                                                            { meta = [ AnyT ] :-> AnyT
                                                            , id = Id
                                                                { name = "d"
                                                                , moduleName = ModuleName
                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                , sort = Temporal 198
                                                                }
                                                            }
                                                        )
                                                        ( Assign
                                                            ( Meta
                                                                { meta = [ AnyT ] :-> AnyT
                                                                , id = Id
                                                                    { name = "d"
                                                                    , moduleName = ModuleName
                                                                        { raw = "test/testcases/malgo/Show.mlg" }
                                                                    , sort = Temporal 197
                                                                    }
                                                                }
                                                            )
                                                            ( Call
                                                                ( Var
                                                                    ( Meta
                                                                        { meta =
                                                                            [ RecordT
                                                                                ( fromList
                                                                                    [
                                                                                        ( "show"
                                                                                        , [ AnyT ] :-> AnyT
                                                                                        )
                                                                                    ]
                                                                                )
                                                                            ] :->
                                                                            ( [ AnyT ] :-> AnyT )
                                                                        , id = Id
                                                                            { name = "show"
                                                                            , moduleName = ModuleName
                                                                                { raw = "test/testcases/malgo/Show.mlg" }
                                                                            , sort = External
                                                                            }
                                                                        }
                                                                    )
                                                                )
                                                                [ Var
                                                                    ( Meta
                                                                        { meta = RecordT
                                                                            ( fromList
                                                                                [
                                                                                    ( "show"
                                                                                    , [ AnyT ] :-> AnyT
                                                                                    )
                                                                                ]
                                                                            )
                                                                        , id = Id
                                                                            { name = "showDictA"
                                                                            , moduleName = ModuleName
                                                                                { raw = "test/testcases/malgo/Show.mlg" }
                                                                            , sort = Temporal 187
                                                                            }
                                                                        }
                                                                    )
                                                                ]
                                                            )
                                                            ( Cast
                                                                ( [ AnyT ] :-> AnyT )
                                                                ( Var
                                                                    ( Meta
                                                                        { meta = [ AnyT ] :-> AnyT
                                                                        , id = Id
                                                                            { name = "d"
                                                                            , moduleName = ModuleName
                                                                                { raw = "test/testcases/malgo/Show.mlg" }
                                                                            , sort = Temporal 197
                                                                            }
                                                                        }
                                                                    )
                                                                )
                                                            )
                                                        )
                                                        ( Assign
                                                            ( Meta
                                                                { meta = AnyT
                                                                , id = Id
                                                                    { name = "d"
                                                                    , moduleName = ModuleName
                                                                        { raw = "test/testcases/malgo/Show.mlg" }
                                                                    , sort = Temporal 199
                                                                    }
                                                                }
                                                            )
                                                            ( Call
                                                                ( Var
                                                                    ( Meta
                                                                        { meta = [ AnyT ] :-> AnyT
                                                                        , id = Id
                                                                            { name = "d"
                                                                            , moduleName = ModuleName
                                                                                { raw = "test/testcases/malgo/Show.mlg" }
                                                                            , sort = Temporal 198
                                                                            }
                                                                        }
                                                                    )
                                                                )
                                                                [ Var
                                                                    ( Meta
                                                                        { meta = AnyT
                                                                        , id = Id
                                                                            { name = "p"
                                                                            , moduleName = ModuleName
                                                                                { raw = "test/testcases/malgo/Show.mlg" }
                                                                            , sort = Temporal 191
                                                                            }
                                                                        }
                                                                    )
                                                                ]
                                                            )
                                                            ( Cast AnyT
                                                                ( Var
                                                                    ( Meta
                                                                        { meta = AnyT
                                                                        , id = Id
                                                                            { name = "d"
                                                                            , moduleName = ModuleName
                                                                                { raw = "test/testcases/malgo/Show.mlg" }
                                                                            , sort = Temporal 199
                                                                            }
                                                                        }
                                                                    )
                                                                )
                                                            )
                                                        )
                                                    )
                                                    ( Assign
                                                        ( Meta
                                                            { meta = [ AnyT ] :-> AnyT
                                                            , id = Id
                                                                { name = "d"
                                                                , moduleName = ModuleName
                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                , sort = Temporal 201
                                                                }
                                                            }
                                                        )
                                                        ( Call
                                                            ( Var
                                                                ( Meta
                                                                    { meta = [ AnyT ] :->
                                                                        ( [ AnyT ] :-> AnyT )
                                                                    , id = Id
                                                                        { name = "<>"
                                                                        , moduleName = ModuleName
                                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                                        , sort = External
                                                                        }
                                                                    }
                                                                )
                                                            )
                                                            [ Var
                                                                ( Meta
                                                                    { meta = AnyT
                                                                    , id = Id
                                                                        { name = "d"
                                                                        , moduleName = ModuleName
                                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                                        , sort = Temporal 200
                                                                        }
                                                                    }
                                                                )
                                                            ]
                                                        )
                                                        ( Cast
                                                            ( [ AnyT ] :-> AnyT )
                                                            ( Var
                                                                ( Meta
                                                                    { meta = [ AnyT ] :-> AnyT
                                                                    , id = Id
                                                                        { name = "d"
                                                                        , moduleName = ModuleName
                                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                                        , sort = Temporal 201
                                                                        }
                                                                    }
                                                                )
                                                            )
                                                        )
                                                    )
                                                )
                                                ( Assign
                                                    ( Meta
                                                        { meta = AnyT
                                                        , id = Id
                                                            { name = "d"
                                                            , moduleName = ModuleName
                                                                { raw = "test/testcases/malgo/Show.mlg" }
                                                            , sort = Temporal 218
                                                            }
                                                        }
                                                    )
                                                    ( Assign
                                                        ( Meta
                                                            { meta = [ AnyT ] :-> AnyT
                                                            , id = Id
                                                                { name = "d"
                                                                , moduleName = ModuleName
                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                , sort = Temporal 206
                                                                }
                                                            }
                                                        )
                                                        ( Assign
                                                            ( Meta
                                                                { meta = AnyT
                                                                , id = Id
                                                                    { name = "d"
                                                                    , moduleName = ModuleName
                                                                        { raw = "test/testcases/malgo/Show.mlg" }
                                                                    , sort = Temporal 204
                                                                    }
                                                                }
                                                            )
                                                            ( Assign
                                                                ( Meta
                                                                    { meta = AnyT
                                                                    , id = Id
                                                                        { name = "d"
                                                                        , moduleName = ModuleName
                                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                                        , sort = Temporal 203
                                                                        }
                                                                    }
                                                                )
                                                                ( Call
                                                                    ( Var
                                                                        ( Meta
                                                                            { meta = [ StringT ] :-> AnyT
                                                                            , id = Id
                                                                                { name = "String#"
                                                                                , moduleName = ModuleName
                                                                                    { raw = "runtime/malgo/Builtin.mlg" }
                                                                                , sort = External
                                                                                }
                                                                            }
                                                                        )
                                                                    )
                                                                    [ Unboxed
                                                                        ( String ", " )
                                                                    ]
                                                                )
                                                                ( Cast AnyT
                                                                    ( Var
                                                                        ( Meta
                                                                            { meta = AnyT
                                                                            , id = Id
                                                                                { name = "d"
                                                                                , moduleName = ModuleName
                                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                                , sort = Temporal 203
                                                                                }
                                                                            }
                                                                        )
                                                                    )
                                                                )
                                                            )
                                                            ( Assign
                                                                ( Meta
                                                                    { meta = [ AnyT ] :-> AnyT
                                                                    , id = Id
                                                                        { name = "d"
                                                                        , moduleName = ModuleName
                                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                                        , sort = Temporal 205
                                                                        }
                                                                    }
                                                                )
                                                                ( Call
                                                                    ( Var
                                                                        ( Meta
                                                                            { meta = [ AnyT ] :->
                                                                                ( [ AnyT ] :-> AnyT )
                                                                            , id = Id
                                                                                { name = "<>"
                                                                                , moduleName = ModuleName
                                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                                , sort = External
                                                                                }
                                                                            }
                                                                        )
                                                                    )
                                                                    [ Var
                                                                        ( Meta
                                                                            { meta = AnyT
                                                                            , id = Id
                                                                                { name = "d"
                                                                                , moduleName = ModuleName
                                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                                , sort = Temporal 204
                                                                                }
                                                                            }
                                                                        )
                                                                    ]
                                                                )
                                                                ( Cast
                                                                    ( [ AnyT ] :-> AnyT )
                                                                    ( Var
                                                                        ( Meta
                                                                            { meta = [ AnyT ] :-> AnyT
                                                                            , id = Id
                                                                                { name = "d"
                                                                                , moduleName = ModuleName
                                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                                , sort = Temporal 205
                                                                                }
                                                                            }
                                                                        )
                                                                    )
                                                                )
                                                            )
                                                        )
                                                        ( Assign
                                                            ( Meta
                                                                { meta = AnyT
                                                                , id = Id
                                                                    { name = "d"
                                                                    , moduleName = ModuleName
                                                                        { raw = "test/testcases/malgo/Show.mlg" }
                                                                    , sort = Temporal 216
                                                                    }
                                                                }
                                                            )
                                                            ( Assign
                                                                ( Meta
                                                                    { meta = [ AnyT ] :-> AnyT
                                                                    , id = Id
                                                                        { name = "d"
                                                                        , moduleName = ModuleName
                                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                                        , sort = Temporal 212
                                                                        }
                                                                    }
                                                                )
                                                                ( Assign
                                                                    ( Meta
                                                                        { meta = AnyT
                                                                        , id = Id
                                                                            { name = "d"
                                                                            , moduleName = ModuleName
                                                                                { raw = "test/testcases/malgo/Show.mlg" }
                                                                            , sort = Temporal 210
                                                                            }
                                                                        }
                                                                    )
                                                                    ( Assign
                                                                        ( Meta
                                                                            { meta = [ AnyT ] :-> AnyT
                                                                            , id = Id
                                                                                { name = "d"
                                                                                , moduleName = ModuleName
                                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                                , sort = Temporal 208
                                                                                }
                                                                            }
                                                                        )
                                                                        ( Assign
                                                                            ( Meta
                                                                                { meta = [ AnyT ] :-> AnyT
                                                                                , id = Id
                                                                                    { name = "d"
                                                                                    , moduleName = ModuleName
                                                                                        { raw = "test/testcases/malgo/Show.mlg" }
                                                                                    , sort = Temporal 207
                                                                                    }
                                                                                }
                                                                            )
                                                                            ( Call
                                                                                ( Var
                                                                                    ( Meta
                                                                                        { meta =
                                                                                            [ RecordT
                                                                                                ( fromList
                                                                                                    [
                                                                                                        ( "show"
                                                                                                        , [ AnyT ] :-> AnyT
                                                                                                        )
                                                                                                    ]
                                                                                                )
                                                                                            ] :->
                                                                                            ( [ AnyT ] :-> AnyT )
                                                                                        , id = Id
                                                                                            { name = "show"
                                                                                            , moduleName = ModuleName
                                                                                                { raw = "test/testcases/malgo/Show.mlg" }
                                                                                            , sort = External
                                                                                            }
                                                                                        }
                                                                                    )
                                                                                )
                                                                                [ Var
                                                                                    ( Meta
                                                                                        { meta = RecordT
                                                                                            ( fromList
                                                                                                [
                                                                                                    ( "show"
                                                                                                    , [ AnyT ] :-> AnyT
                                                                                                    )
                                                                                                ]
                                                                                            )
                                                                                        , id = Id
                                                                                            { name = "showDictB"
                                                                                            , moduleName = ModuleName
                                                                                                { raw = "test/testcases/malgo/Show.mlg" }
                                                                                            , sort = Temporal 188
                                                                                            }
                                                                                        }
                                                                                    )
                                                                                ]
                                                                            )
                                                                            ( Cast
                                                                                ( [ AnyT ] :-> AnyT )
                                                                                ( Var
                                                                                    ( Meta
                                                                                        { meta = [ AnyT ] :-> AnyT
                                                                                        , id = Id
                                                                                            { name = "d"
                                                                                            , moduleName = ModuleName
                                                                                                { raw = "test/testcases/malgo/Show.mlg" }
                                                                                            , sort = Temporal 207
                                                                                            }
                                                                                        }
                                                                                    )
                                                                                )
                                                                            )
                                                                        )
                                                                        ( Assign
                                                                            ( Meta
                                                                                { meta = AnyT
                                                                                , id = Id
                                                                                    { name = "d"
                                                                                    , moduleName = ModuleName
                                                                                        { raw = "test/testcases/malgo/Show.mlg" }
                                                                                    , sort = Temporal 209
                                                                                    }
                                                                                }
                                                                            )
                                                                            ( Call
                                                                                ( Var
                                                                                    ( Meta
                                                                                        { meta = [ AnyT ] :-> AnyT
                                                                                        , id = Id
                                                                                            { name = "d"
                                                                                            , moduleName = ModuleName
                                                                                                { raw = "test/testcases/malgo/Show.mlg" }
                                                                                            , sort = Temporal 208
                                                                                            }
                                                                                        }
                                                                                    )
                                                                                )
                                                                                [ Var
                                                                                    ( Meta
                                                                                        { meta = AnyT
                                                                                        , id = Id
                                                                                            { name = "p"
                                                                                            , moduleName = ModuleName
                                                                                                { raw = "test/testcases/malgo/Show.mlg" }
                                                                                            , sort = Temporal 192
                                                                                            }
                                                                                        }
                                                                                    )
                                                                                ]
                                                                            )
                                                                            ( Cast AnyT
                                                                                ( Var
                                                                                    ( Meta
                                                                                        { meta = AnyT
                                                                                        , id = Id
                                                                                            { name = "d"
                                                                                            , moduleName = ModuleName
                                                                                                { raw = "test/testcases/malgo/Show.mlg" }
                                                                                            , sort = Temporal 209
                                                                                            }
                                                                                        }
                                                                                    )
                                                                                )
                                                                            )
                                                                        )
                                                                    )
                                                                    ( Assign
                                                                        ( Meta
                                                                            { meta = [ AnyT ] :-> AnyT
                                                                            , id = Id
                                                                                { name = "d"
                                                                                , moduleName = ModuleName
                                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                                , sort = Temporal 211
                                                                                }
                                                                            }
                                                                        )
                                                                        ( Call
                                                                            ( Var
                                                                                ( Meta
                                                                                    { meta = [ AnyT ] :->
                                                                                        ( [ AnyT ] :-> AnyT )
                                                                                    , id = Id
                                                                                        { name = "<>"
                                                                                        , moduleName = ModuleName
                                                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                                                        , sort = External
                                                                                        }
                                                                                    }
                                                                                )
                                                                            )
                                                                            [ Var
                                                                                ( Meta
                                                                                    { meta = AnyT
                                                                                    , id = Id
                                                                                        { name = "d"
                                                                                        , moduleName = ModuleName
                                                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                                                        , sort = Temporal 210
                                                                                        }
                                                                                    }
                                                                                )
                                                                            ]
                                                                        )
                                                                        ( Cast
                                                                            ( [ AnyT ] :-> AnyT )
                                                                            ( Var
                                                                                ( Meta
                                                                                    { meta = [ AnyT ] :-> AnyT
                                                                                    , id = Id
                                                                                        { name = "d"
                                                                                        , moduleName = ModuleName
                                                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                                                        , sort = Temporal 211
                                                                                        }
                                                                                    }
                                                                                )
                                                                            )
                                                                        )
                                                                    )
                                                                )
                                                                ( Assign
                                                                    ( Meta
                                                                        { meta = AnyT
                                                                        , id = Id
                                                                            { name = "d"
                                                                            , moduleName = ModuleName
                                                                                { raw = "test/testcases/malgo/Show.mlg" }
                                                                            , sort = Temporal 214
                                                                            }
                                                                        }
                                                                    )
                                                                    ( Assign
                                                                        ( Meta
                                                                            { meta = AnyT
                                                                            , id = Id
                                                                                { name = "d"
                                                                                , moduleName = ModuleName
                                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                                , sort = Temporal 213
                                                                                }
                                                                            }
                                                                        )
                                                                        ( Call
                                                                            ( Var
                                                                                ( Meta
                                                                                    { meta = [ StringT ] :-> AnyT
                                                                                    , id = Id
                                                                                        { name = "String#"
                                                                                        , moduleName = ModuleName
                                                                                            { raw = "runtime/malgo/Builtin.mlg" }
                                                                                        , sort = External
                                                                                        }
                                                                                    }
                                                                                )
                                                                            )
                                                                            [ Unboxed
                                                                                ( String ")" )
                                                                            ]
                                                                        )
                                                                        ( Cast AnyT
                                                                            ( Var
                                                                                ( Meta
                                                                                    { meta = AnyT
                                                                                    , id = Id
                                                                                        { name = "d"
                                                                                        , moduleName = ModuleName
                                                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                                                        , sort = Temporal 213
                                                                                        }
                                                                                    }
                                                                                )
                                                                            )
                                                                        )
                                                                    )
                                                                    ( Assign
                                                                        ( Meta
                                                                            { meta = AnyT
                                                                            , id = Id
                                                                                { name = "d"
                                                                                , moduleName = ModuleName
                                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                                , sort = Temporal 215
                                                                                }
                                                                            }
                                                                        )
                                                                        ( Call
                                                                            ( Var
                                                                                ( Meta
                                                                                    { meta = [ AnyT ] :-> AnyT
                                                                                    , id = Id
                                                                                        { name = "d"
                                                                                        , moduleName = ModuleName
                                                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                                                        , sort = Temporal 212
                                                                                        }
                                                                                    }
                                                                                )
                                                                            )
                                                                            [ Var
                                                                                ( Meta
                                                                                    { meta = AnyT
                                                                                    , id = Id
                                                                                        { name = "d"
                                                                                        , moduleName = ModuleName
                                                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                                                        , sort = Temporal 214
                                                                                        }
                                                                                    }
                                                                                )
                                                                            ]
                                                                        )
                                                                        ( Cast AnyT
                                                                            ( Var
                                                                                ( Meta
                                                                                    { meta = AnyT
                                                                                    , id = Id
                                                                                        { name = "d"
                                                                                        , moduleName = ModuleName
                                                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                                                        , sort = Temporal 215
                                                                                        }
                                                                                    }
                                                                                )
                                                                            )
                                                                        )
                                                                    )
                                                                )
                                                            )
                                                            ( Assign
                                                                ( Meta
                                                                    { meta = AnyT
                                                                    , id = Id
                                                                        { name = "d"
                                                                        , moduleName = ModuleName
                                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                                        , sort = Temporal 217
                                                                        }
                                                                    }
                                                                )
                                                                ( Call
                                                                    ( Var
                                                                        ( Meta
                                                                            { meta = [ AnyT ] :-> AnyT
                                                                            , id = Id
                                                                                { name = "d"
                                                                                , moduleName = ModuleName
                                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                                , sort = Temporal 206
                                                                                }
                                                                            }
                                                                        )
                                                                    )
                                                                    [ Var
                                                                        ( Meta
                                                                            { meta = AnyT
                                                                            , id = Id
                                                                                { name = "d"
                                                                                , moduleName = ModuleName
                                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                                , sort = Temporal 216
                                                                                }
                                                                            }
                                                                        )
                                                                    ]
                                                                )
                                                                ( Cast AnyT
                                                                    ( Var
                                                                        ( Meta
                                                                            { meta = AnyT
                                                                            , id = Id
                                                                                { name = "d"
                                                                                , moduleName = ModuleName
                                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                                , sort = Temporal 217
                                                                                }
                                                                            }
                                                                        )
                                                                    )
                                                                )
                                                            )
                                                        )
                                                    )
                                                    ( Assign
                                                        ( Meta
                                                            { meta = AnyT
                                                            , id = Id
                                                                { name = "d"
                                                                , moduleName = ModuleName
                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                , sort = Temporal 219
                                                                }
                                                            }
                                                        )
                                                        ( Call
                                                            ( Var
                                                                ( Meta
                                                                    { meta = [ AnyT ] :-> AnyT
                                                                    , id = Id
                                                                        { name = "d"
                                                                        , moduleName = ModuleName
                                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                                        , sort = Temporal 202
                                                                        }
                                                                    }
                                                                )
                                                            )
                                                            [ Var
                                                                ( Meta
                                                                    { meta = AnyT
                                                                    , id = Id
                                                                        { name = "d"
                                                                        , moduleName = ModuleName
                                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                                        , sort = Temporal 218
                                                                        }
                                                                    }
                                                                )
                                                            ]
                                                        )
                                                        ( Cast AnyT
                                                            ( Var
                                                                ( Meta
                                                                    { meta = AnyT
                                                                    , id = Id
                                                                        { name = "d"
                                                                        , moduleName = ModuleName
                                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                                        , sort = Temporal 219
                                                                        }
                                                                    }
                                                                )
                                                            )
                                                        )
                                                    )
                                                )
                                            )
                                            ( Assign
                                                ( Meta
                                                    { meta = AnyT
                                                    , id = Id
                                                        { name = "d"
                                                        , moduleName = ModuleName
                                                            { raw = "test/testcases/malgo/Show.mlg" }
                                                        , sort = Temporal 221
                                                        }
                                                    }
                                                )
                                                ( Call
                                                    ( Var
                                                        ( Meta
                                                            { meta = [ AnyT ] :-> AnyT
                                                            , id = Id
                                                                { name = "d"
                                                                , moduleName = ModuleName
                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                , sort = Temporal 196
                                                                }
                                                            }
                                                        )
                                                    )
                                                    [ Var
                                                        ( Meta
                                                            { meta = AnyT
                                                            , id = Id
                                                                { name = "d"
                                                                , moduleName = ModuleName
                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                , sort = Temporal 220
                                                                }
                                                            }
                                                        )
                                                    ]
                                                )
                                                ( Cast AnyT
                                                    ( Var
                                                        ( Meta
                                                            { meta = AnyT
                                                            , id = Id
                                                                { name = "d"
                                                                , moduleName = ModuleName
                                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                                , sort = Temporal 221
                                                                }
                                                            }
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    )
                                ]
                            )
                        }
                    ]
                    ( Atom
                        ( Var
                            ( Meta
                                { meta =
                                    [ SumT
                                        [ Con Tuple
                                            [ AnyT
                                            , AnyT
                                            ]
                                        ]
                                    ] :-> AnyT
                                , id = Id
                                    { name = "fun"
                                    , moduleName = ModuleName
                                        { raw = "test/testcases/malgo/Show.mlg" }
                                    , sort = Temporal 189
                                    }
                                }
                            )
                        )
                    )
                )
                ( Let
                    [ LocalDef
                        { _variable = Meta
                            { meta = RecordT
                                ( fromList
                                    [
                                        ( "show"
                                        ,
                                            [ SumT
                                                [ Con Tuple
                                                    [ AnyT
                                                    , AnyT
                                                    ]
                                                ]
                                            ] :-> AnyT
                                        )
                                    ]
                                )
                            , id = Id
                                { name = "record"
                                , moduleName = ModuleName
                                    { raw = "test/testcases/malgo/Show.mlg" }
                                , sort = Temporal 223
                                }
                            }
                        , typ = RecordT
                            ( fromList
                                [
                                    ( "show"
                                    ,
                                        [ SumT
                                            [ Con Tuple
                                                [ AnyT
                                                , AnyT
                                                ]
                                            ]
                                        ] :-> AnyT
                                    )
                                ]
                            )
                        , _object = Record
                            ( fromList
                                [
                                    ( "show"
                                    , Var
                                        ( Meta
                                            { meta =
                                                [ SumT
                                                    [ Con Tuple
                                                        [ AnyT
                                                        , AnyT
                                                        ]
                                                    ]
                                                ] :-> AnyT
                                            , id = Id
                                                { name = "d"
                                                , moduleName = ModuleName
                                                    { raw = "test/testcases/malgo/Show.mlg" }
                                                , sort = Temporal 222
                                                }
                                            }
                                        )
                                    )
                                ]
                            )
                        }
                    ]
                    ( Atom
                        ( Var
                            ( Meta
                                { meta = RecordT
                                    ( fromList
                                        [
                                            ( "show"
                                            ,
                                                [ SumT
                                                    [ Con Tuple
                                                        [ AnyT
                                                        , AnyT
                                                        ]
                                                    ]
                                                ] :-> AnyT
                                            )
                                        ]
                                    )
                                , id = Id
                                    { name = "record"
                                    , moduleName = ModuleName
                                        { raw = "test/testcases/malgo/Show.mlg" }
                                    , sort = Temporal 223
                                    }
                                }
                            )
                        )
                    )
                )
            )
        , FunDef
            ( Meta
                { meta =
                    [ AnyT
                    , AnyT
                    ] :-> AnyT
                , id = Id
                    { name = "<>_curry"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 142
                    }
                }
            )
            [ Meta
                { meta = AnyT
                , id = Id
                    { name = "x"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 143
                    }
                }
            , Meta
                { meta = AnyT
                , id = Id
                    { name = "y"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 144
                    }
                }
            ]
            (
                [ AnyT
                , AnyT
                ] :-> AnyT
            )
            ( Assign
                ( Meta
                    { meta = [ AnyT ] :-> AnyT
                    , id = Id
                        { name = "d"
                        , moduleName = ModuleName
                            { raw = "test/testcases/malgo/Show.mlg" }
                        , sort = Temporal 146
                        }
                    }
                )
                ( Assign
                    ( Meta
                        { meta = [ AnyT ] :-> AnyT
                        , id = Id
                            { name = "d"
                            , moduleName = ModuleName
                                { raw = "test/testcases/malgo/Show.mlg" }
                            , sort = Temporal 145
                            }
                        }
                    )
                    ( Call
                        ( Var
                            ( Meta
                                { meta = [ AnyT ] :->
                                    ( [ AnyT ] :-> AnyT )
                                , id = Id
                                    { name = "appendString"
                                    , moduleName = ModuleName
                                        { raw = "runtime/malgo/Builtin.mlg" }
                                    , sort = External
                                    }
                                }
                            )
                        )
                        [ Var
                            ( Meta
                                { meta = AnyT
                                , id = Id
                                    { name = "x"
                                    , moduleName = ModuleName
                                        { raw = "test/testcases/malgo/Show.mlg" }
                                    , sort = Temporal 143
                                    }
                                }
                            )
                        ]
                    )
                    ( Cast
                        ( [ AnyT ] :-> AnyT )
                        ( Var
                            ( Meta
                                { meta = [ AnyT ] :-> AnyT
                                , id = Id
                                    { name = "d"
                                    , moduleName = ModuleName
                                        { raw = "test/testcases/malgo/Show.mlg" }
                                    , sort = Temporal 145
                                    }
                                }
                            )
                        )
                    )
                )
                ( Assign
                    ( Meta
                        { meta = AnyT
                        , id = Id
                            { name = "d"
                            , moduleName = ModuleName
                                { raw = "test/testcases/malgo/Show.mlg" }
                            , sort = Temporal 147
                            }
                        }
                    )
                    ( Call
                        ( Var
                            ( Meta
                                { meta = [ AnyT ] :-> AnyT
                                , id = Id
                                    { name = "d"
                                    , moduleName = ModuleName
                                        { raw = "test/testcases/malgo/Show.mlg" }
                                    , sort = Temporal 146
                                    }
                                }
                            )
                        )
                        [ Var
                            ( Meta
                                { meta = AnyT
                                , id = Id
                                    { name = "y"
                                    , moduleName = ModuleName
                                        { raw = "test/testcases/malgo/Show.mlg" }
                                    , sort = Temporal 144
                                    }
                                }
                            )
                        ]
                    )
                    ( Cast AnyT
                        ( Var
                            ( Meta
                                { meta = AnyT
                                , id = Id
                                    { name = "d"
                                    , moduleName = ModuleName
                                        { raw = "test/testcases/malgo/Show.mlg" }
                                    , sort = Temporal 147
                                    }
                                }
                            )
                        )
                    )
                )
            )
        , FunDef
            ( Meta
                { meta =
                    [ RecordT
                        ( fromList
                            [
                                ( "show"
                                , [ AnyT ] :-> AnyT
                                )
                            ]
                        )
                    , AnyT
                    ] :-> SumT
                    [ Con Tuple [] ]
                , id = Id
                    { name = "print_curry"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 128
                    }
                }
            )
            [ Meta
                { meta = RecordT
                    ( fromList
                        [
                            ( "show"
                            , [ AnyT ] :-> AnyT
                            )
                        ]
                    )
                , id = Id
                    { name = "showDict"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 129
                    }
                }
            , Meta
                { meta = AnyT
                , id = Id
                    { name = "x"
                    , moduleName = ModuleName
                        { raw = "test/testcases/malgo/Show.mlg" }
                    , sort = Temporal 130
                    }
                }
            ]
            (
                [ RecordT
                    ( fromList
                        [
                            ( "show"
                            , [ AnyT ] :-> AnyT
                            )
                        ]
                    )
                , AnyT
                ] :-> SumT
                [ Con Tuple [] ]
            )
            ( Assign
                ( Meta
                    { meta = AnyT
                    , id = Id
                        { name = "d"
                        , moduleName = ModuleName
                            { raw = "test/testcases/malgo/Show.mlg" }
                        , sort = Temporal 134
                        }
                    }
                )
                ( Assign
                    ( Meta
                        { meta = [ AnyT ] :-> AnyT
                        , id = Id
                            { name = "d"
                            , moduleName = ModuleName
                                { raw = "test/testcases/malgo/Show.mlg" }
                            , sort = Temporal 132
                            }
                        }
                    )
                    ( Assign
                        ( Meta
                            { meta = [ AnyT ] :-> AnyT
                            , id = Id
                                { name = "d"
                                , moduleName = ModuleName
                                    { raw = "test/testcases/malgo/Show.mlg" }
                                , sort = Temporal 131
                                }
                            }
                        )
                        ( Call
                            ( Var
                                ( Meta
                                    { meta =
                                        [ RecordT
                                            ( fromList
                                                [
                                                    ( "show"
                                                    , [ AnyT ] :-> AnyT
                                                    )
                                                ]
                                            )
                                        ] :->
                                        ( [ AnyT ] :-> AnyT )
                                    , id = Id
                                        { name = "show"
                                        , moduleName = ModuleName
                                            { raw = "test/testcases/malgo/Show.mlg" }
                                        , sort = External
                                        }
                                    }
                                )
                            )
                            [ Var
                                ( Meta
                                    { meta = RecordT
                                        ( fromList
                                            [
                                                ( "show"
                                                , [ AnyT ] :-> AnyT
                                                )
                                            ]
                                        )
                                    , id = Id
                                        { name = "showDict"
                                        , moduleName = ModuleName
                                            { raw = "test/testcases/malgo/Show.mlg" }
                                        , sort = Temporal 129
                                        }
                                    }
                                )
                            ]
                        )
                        ( Cast
                            ( [ AnyT ] :-> AnyT )
                            ( Var
                                ( Meta
                                    { meta = [ AnyT ] :-> AnyT
                                    , id = Id
                                        { name = "d"
                                        , moduleName = ModuleName
                                            { raw = "test/testcases/malgo/Show.mlg" }
                                        , sort = Temporal 131
                                        }
                                    }
                                )
                            )
                        )
                    )
                    ( Assign
                        ( Meta
                            { meta = AnyT
                            , id = Id
                                { name = "d"
                                , moduleName = ModuleName
                                    { raw = "test/testcases/malgo/Show.mlg" }
                                , sort = Temporal 133
                                }
                            }
                        )
                        ( Call
                            ( Var
                                ( Meta
                                    { meta = [ AnyT ] :-> AnyT
                                    , id = Id
                                        { name = "d"
                                        , moduleName = ModuleName
                                            { raw = "test/testcases/malgo/Show.mlg" }
                                        , sort = Temporal 132
                                        }
                                    }
                                )
                            )
                            [ Var
                                ( Meta
                                    { meta = AnyT
                                    , id = Id
                                        { name = "x"
                                        , moduleName = ModuleName
                                            { raw = "test/testcases/malgo/Show.mlg" }
                                        , sort = Temporal 130
                                        }
                                    }
                                )
                            ]
                        )
                        ( Cast AnyT
                            ( Var
                                ( Meta
                                    { meta = AnyT
                                    , id = Id
                                        { name = "d"
                                        , moduleName = ModuleName
                                            { raw = "test/testcases/malgo/Show.mlg" }
                                        , sort = Temporal 133
                                        }
                                    }
                                )
                            )
                        )
                    )
                )
                ( Assign
                    ( Meta
                        { meta = SumT
                            [ Con Tuple [] ]
                        , id = Id
                            { name = "d"
                            , moduleName = ModuleName
                                { raw = "test/testcases/malgo/Show.mlg" }
                            , sort = Temporal 135
                            }
                        }
                    )
                    ( Call
                        ( Var
                            ( Meta
                                { meta = [ AnyT ] :-> SumT
                                    [ Con Tuple [] ]
                                , id = Id
                                    { name = "printString"
                                    , moduleName = ModuleName
                                        { raw = "runtime/malgo/Builtin.mlg" }
                                    , sort = External
                                    }
                                }
                            )
                        )
                        [ Var
                            ( Meta
                                { meta = AnyT
                                , id = Id
                                    { name = "d"
                                    , moduleName = ModuleName
                                        { raw = "test/testcases/malgo/Show.mlg" }
                                    , sort = Temporal 134
                                    }
                                }
                            )
                        ]
                    )
                    ( Cast
                        ( SumT
                            [ Con Tuple [] ]
                        )
                        ( Var
                            ( Meta
                                { meta = SumT
                                    [ Con Tuple [] ]
                                , id = Id
                                    { name = "d"
                                    , moduleName = ModuleName
                                        { raw = "test/testcases/malgo/Show.mlg" }
                                    , sort = Temporal 135
                                    }
                                }
                            )
                        )
                    )
                )
            )
        ]
    , globalClosures = fromList []
    }