(((define
     showInt32
     (Record# (show (-> (Any#) Any#)))
     (=
        $Show.d_xxx
        (=
           $Show.d_xxx
           (let
              (($Show.fun_xxx
                  (-> (Any#) Any#)
                  (fun
                     ($Show.x_xxx)
                     (=
                        $Show.d_xxx
                        (call toStringInt32 $Show.x_xxx)
                        (cast Any# $Show.d_xxx)))))
              $Show.fun_xxx)
           (let
              (($Show.record_xxx
                  (Record# (show (-> (Any#) Any#)))
                  (record (show $Show.d_xxx))))
              $Show.record_xxx))
        $Show.d_xxx)))
   ((define
       ($Show.showTuple2_curry_xxx $Show.showDictA_xxx $Show.showDictB_xxx)
       (->
          ((Record# (show (-> (Any#) Any#))) (Record# (show (-> (Any#) Any#))))
          (Record# (show (-> ((sum (con Tuple# Any# Any#))) Any#))))
       (=
          $Show.d_xxx
          (let
             (($Show.fun_xxx
                 (-> ((sum (con Tuple# Any# Any#))) Any#)
                 (fun
                    ($Show.tuple_xxx)
                    (match
                       $Show.tuple_xxx
                       (unpack
                          (con Tuple# Any# Any#)
                          ($Show.p_xxx $Show.p_xxx)
                          (=
                             $Show.d_xxx
                             (=
                                $Show.d_xxx
                                (=
                                   $Show.d_xxx
                                   (call String# "(")
                                   (cast Any# $Show.d_xxx))
                                (=
                                   $Show.d_xxx
                                   (call <> $Show.d_xxx)
                                   (cast (-> (Any#) Any#) $Show.d_xxx)))
                             (=
                                $Show.d_xxx
                                (=
                                   $Show.d_xxx
                                   (=
                                      $Show.d_xxx
                                      (=
                                         $Show.d_xxx
                                         (=
                                            $Show.d_xxx
                                            (call show $Show.showDictA_xxx)
                                            (cast (-> (Any#) Any#) $Show.d_xxx))
                                         (=
                                            $Show.d_xxx
                                            (call $Show.d_xxx $Show.p_xxx)
                                            (cast Any# $Show.d_xxx)))
                                      (=
                                         $Show.d_xxx
                                         (call <> $Show.d_xxx)
                                         (cast (-> (Any#) Any#) $Show.d_xxx)))
                                   (=
                                      $Show.d_xxx
                                      (=
                                         $Show.d_xxx
                                         (=
                                            $Show.d_xxx
                                            (=
                                               $Show.d_xxx
                                               (call String# ", ")
                                               (cast Any# $Show.d_xxx))
                                            (=
                                               $Show.d_xxx
                                               (call <> $Show.d_xxx)
                                               (cast (-> (Any#) Any#) $Show.d_xxx)))
                                         (=
                                            $Show.d_xxx
                                            (=
                                               $Show.d_xxx
                                               (=
                                                  $Show.d_xxx
                                                  (=
                                                     $Show.d_xxx
                                                     (=
                                                        $Show.d_xxx
                                                        (call
                                                           show
                                                           $Show.showDictB_xxx)
                                                        (cast
                                                           (-> (Any#) Any#)
                                                           $Show.d_xxx))
                                                     (=
                                                        $Show.d_xxx
                                                        (call
                                                           $Show.d_xxx
                                                           $Show.p_xxx)
                                                        (cast Any# $Show.d_xxx)))
                                                  (=
                                                     $Show.d_xxx
                                                     (call <> $Show.d_xxx)
                                                     (cast
                                                        (-> (Any#) Any#)
                                                        $Show.d_xxx)))
                                               (=
                                                  $Show.d_xxx
                                                  (=
                                                     $Show.d_xxx
                                                     (call String# ")")
                                                     (cast Any# $Show.d_xxx))
                                                  (=
                                                     $Show.d_xxx
                                                     (call
                                                        $Show.d_xxx
                                                        $Show.d_xxx)
                                                     (cast Any# $Show.d_xxx))))
                                            (=
                                               $Show.d_xxx
                                               (call $Show.d_xxx $Show.d_xxx)
                                               (cast Any# $Show.d_xxx))))
                                      (=
                                         $Show.d_xxx
                                         (call $Show.d_xxx $Show.d_xxx)
                                         (cast Any# $Show.d_xxx))))
                                (=
                                   $Show.d_xxx
                                   (call $Show.d_xxx $Show.d_xxx)
                                   (cast Any# $Show.d_xxx)))))))))
             $Show.fun_xxx)
          (let
             (($Show.record_xxx
                 (Record# (show (-> ((sum (con Tuple# Any# Any#))) Any#)))
                 (record (show $Show.d_xxx))))
             $Show.record_xxx)))
      (define
         ($Show.<>_curry_xxx $Show.x_xxx $Show.y_xxx)
         (-> (Any# Any#) Any#)
         (=
            $Show.d_xxx
            (=
               $Show.d_xxx
               (call appendString $Show.x_xxx)
               (cast (-> (Any#) Any#) $Show.d_xxx))
            (= $Show.d_xxx (call $Show.d_xxx $Show.y_xxx) (cast Any# $Show.d_xxx))))
      (define
         ($Show.print_curry_xxx $Show.showDict_xxx $Show.x_xxx)
         (-> ((Record# (show (-> (Any#) Any#))) Any#) (sum (con Tuple#)))
         (=
            $Show.d_xxx
            (=
               $Show.d_xxx
               (=
                  $Show.d_xxx
                  (call show $Show.showDict_xxx)
                  (cast (-> (Any#) Any#) $Show.d_xxx))
               (=
                  $Show.d_xxx
                  (call $Show.d_xxx $Show.x_xxx)
                  (cast Any# $Show.d_xxx)))
            (=
               $Show.d_xxx
               (call printString $Show.d_xxx)
               (cast (sum (con Tuple#)) $Show.d_xxx))))
      (define
         (show $Show.record_xxx)
         (-> ((Record# (show (-> (Any#) Any#)))) (-> (Any#) Any#))
         (match $Show.record_xxx (open ((show $Show.p_xxx)) $Show.p_xxx)))
      (define
         (print $Show.showDict_xxx)
         (-> ((Record# (show (-> (Any#) Any#)))) (-> (Any#) (sum (con Tuple#))))
         (let
            (($Show.let_xxx
                (-> (Any#) (sum (con Tuple#)))
                (fun
                   ($Show.x_xxx)
                   (direct $Show.print_curry_xxx $Show.showDict_xxx $Show.x_xxx))))
            $Show.let_xxx))
      (define
         (<> $Show.x_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Show.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Show.y_xxx)
                   (direct $Show.<>_curry_xxx $Show.x_xxx $Show.y_xxx))))
            $Show.let_xxx))
      (define
         (showTuple2 $Show.showDictA_xxx)
         (->
            ((Record# (show (-> (Any#) Any#))))
            (->
               ((Record# (show (-> (Any#) Any#))))
               (Record# (show (-> ((sum (con Tuple# Any# Any#))) Any#)))))
         (let
            (($Show.let_xxx
                (->
                   ((Record# (show (-> (Any#) Any#))))
                   (Record# (show (-> ((sum (con Tuple# Any# Any#))) Any#))))
                (fun
                   ($Show.showDictB_xxx)
                   (direct
                      $Show.showTuple2_curry_xxx
                      $Show.showDictA_xxx
                      $Show.showDictB_xxx))))
            $Show.let_xxx))
      (define
         (main $Show.$__xxx)
         (-> ((sum (con Tuple#))) (sum (con Tuple#)))
         (=
            $Show.d_xxx
            (=
               $Show.d_xxx
               (=
                  $Show.d_xxx
                  (=
                     $Show.d_xxx
                     (call showTuple2 showInt32)
                     (cast
                        (->
                           ((Record# (show (-> (Any#) Any#))))
                           (Record#
                              (show (-> ((sum (con Tuple# Any# Any#))) Any#))))
                        $Show.d_xxx))
                  (=
                     $Show.d_xxx
                     (call $Show.d_xxx showInt32)
                     (cast
                        (Record# (show (-> ((sum (con Tuple# Any# Any#))) Any#)))
                        $Show.d_xxx)))
               (=
                  $Show.cast_xxx
                  (cast (Record# (show (-> (Any#) Any#))) $Show.d_xxx)
                  (=
                     $Show.d_xxx
                     (call print $Show.cast_xxx)
                     (cast
                        (-> ((sum (con Tuple# Any# Any#))) (sum (con Tuple#)))
                        $Show.d_xxx))))
            (=
               $Show.d_xxx
               (=
                  $Show.d_xxx
                  (= $Show.d_xxx (call Int32# 1_i32) (cast Any# $Show.d_xxx))
                  (=
                     $Show.d_xxx
                     (= $Show.d_xxx (call Int32# 2_i32) (cast Any# $Show.d_xxx))
                     (let
                        (($Show.let_xxx
                            (sum (con Tuple# Any# Any#))
                            (pack
                               (sum (con Tuple# Any# Any#))
                               (con Tuple# Any# Any#)
                               $Show.d_xxx
                               $Show.d_xxx)))
                        $Show.let_xxx)))
               (=
                  $Show.d_xxx
                  (call $Show.d_xxx $Show.d_xxx)
                  (cast (sum (con Tuple#)) $Show.d_xxx))))))
   ())