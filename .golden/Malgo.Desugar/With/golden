(()
   ((define
       ($With.finally_curry_xxx $With.finalizer_xxx $With.k_xxx)
       (-> ((-> (Any#) Any#) (-> ((sum (con Tuple#))) Any#)) Any#)
       (match
          (=
             $With.d_xxx
             (let
                (($With.let_xxx
                    (sum (con Tuple#))
                    (pack (sum (con Tuple#)) (con Tuple#))))
                $With.let_xxx)
             (=
                $With.d_xxx
                (call $With.k_xxx $With.d_xxx)
                (cast Any# $With.d_xxx)))
          (bind
             $With.let_test/testcases/malgo/With.mlg.#x_4_xxx
             Any#
             (=
                $With.d_xxx
                (call
                   $With.finalizer_xxx
                   $With.let_test/testcases/malgo/With.mlg.#x_4_xxx)
                (cast Any# $With.d_xxx)))))
      (define
         ($With.printAndReturn_curry_xxx $With.str_xxx $With.k_xxx)
         (-> (Any# (-> (Any#) Any#)) Any#)
         (=
            $With.d_xxx
            (=
               $With.d_xxx
               (call printString $With.str_xxx)
               (cast (sum (con Tuple#)) $With.d_xxx))
            (=
               $With.d_xxx
               (call $With.k_xxx $With.str_xxx)
               (cast Any# $With.d_xxx))))
      (define
         (twice $With.k_xxx)
         (-> ((-> ((sum (con Tuple#))) Any#)) Any#)
         (=
            $With.d_xxx
            (=
               $With.d_xxx
               (let
                  (($With.let_xxx
                      (sum (con Tuple#))
                      (pack (sum (con Tuple#)) (con Tuple#))))
                  $With.let_xxx)
               (=
                  $With.d_xxx
                  (call $With.k_xxx $With.d_xxx)
                  (cast Any# $With.d_xxx)))
            (=
               $With.d_xxx
               (let
                  (($With.let_xxx
                      (sum (con Tuple#))
                      (pack (sum (con Tuple#)) (con Tuple#))))
                  $With.let_xxx)
               (=
                  $With.d_xxx
                  (call $With.k_xxx $With.d_xxx)
                  (cast Any# $With.d_xxx)))))
      (define
         (printAndReturn $With.str_xxx)
         (-> (Any#) (-> ((-> (Any#) Any#)) Any#))
         (let
            (($With.let_xxx
                (-> ((-> (Any#) Any#)) Any#)
                (fun
                   ($With.k_xxx)
                   (direct
                      $With.printAndReturn_curry_xxx
                      $With.str_xxx
                      $With.k_xxx))))
            $With.let_xxx))
      (define
         (finally $With.finalizer_xxx)
         (-> ((-> (Any#) Any#)) (-> ((-> ((sum (con Tuple#))) Any#)) Any#))
         (let
            (($With.let_xxx
                (-> ((-> ((sum (con Tuple#))) Any#)) Any#)
                (fun
                   ($With.k_xxx)
                   (direct
                      $With.finally_curry_xxx
                      $With.finalizer_xxx
                      $With.k_xxx))))
            $With.let_xxx))
      (define
         (main $With.$__xxx)
         (-> ((sum (con Tuple#))) (sum (con Tuple#)))
         (=
            $With.d_xxx
            (=
               $With.d_xxx
               (let
                  (($With.fun_xxx
                      (-> ((sum (con Tuple#))) (sum (con Tuple#)))
                      (fun
                         ($With.tuple_xxx)
                         (match
                            $With.tuple_xxx
                            (unpack
                               (con Tuple#)
                               ()
                               (=
                                  $With.d_xxx
                                  (=
                                     $With.d_xxx
                                     (call String# "end")
                                     (cast Any# $With.d_xxx))
                                  (=
                                     $With.d_xxx
                                     (call printString $With.d_xxx)
                                     (cast (sum (con Tuple#)) $With.d_xxx))))))))
                  $With.fun_xxx)
               (=
                  $With.cast_xxx
                  (cast (-> (Any#) Any#) $With.d_xxx)
                  (=
                     $With.d_xxx
                     (call finally $With.cast_xxx)
                     (cast
                        (->
                           ((-> ((sum (con Tuple#))) (sum (con Tuple#))))
                           (sum (con Tuple#)))
                        $With.d_xxx))))
            (=
               $With.d_xxx
               (let
                  (($With.fun_xxx
                      (-> ((sum (con Tuple#))) (sum (con Tuple#)))
                      (fun
                         ($With.$__xxx)
                         (=
                            $With.d_xxx
                            (let
                               (($With.fun_xxx
                                   (-> ((sum (con Tuple#))) (sum (con Tuple#)))
                                   (fun
                                      ($With.$__xxx)
                                      (=
                                         $With.d_xxx
                                         (=
                                            $With.d_xxx
                                            (=
                                               $With.d_xxx
                                               (call String# "foo")
                                               (cast Any# $With.d_xxx))
                                            (=
                                               $With.d_xxx
                                               (call printAndReturn $With.d_xxx)
                                               (cast
                                                  (->
                                                     ((->
                                                         (Any#)
                                                         (sum (con Tuple#))))
                                                     (sum (con Tuple#)))
                                                  $With.d_xxx)))
                                         (=
                                            $With.d_xxx
                                            (let
                                               (($With.fun_xxx
                                                   (-> (Any#) (sum (con Tuple#)))
                                                   (fun
                                                      ($With.x_xxx)
                                                      (=
                                                         $With.d_xxx
                                                         (call
                                                            printString
                                                            $With.x_xxx)
                                                         (cast
                                                            (sum (con Tuple#))
                                                            $With.d_xxx)))))
                                               $With.fun_xxx)
                                            (=
                                               $With.d_xxx
                                               (call $With.d_xxx $With.d_xxx)
                                               (cast
                                                  (sum (con Tuple#))
                                                  $With.d_xxx)))))))
                               $With.fun_xxx)
                            (=
                               $With.cast_xxx
                               (cast (-> ((sum (con Tuple#))) Any#) $With.d_xxx)
                               (=
                                  $With.d_xxx
                                  (call twice $With.cast_xxx)
                                  (cast (sum (con Tuple#)) $With.d_xxx)))))))
                  $With.fun_xxx)
               (=
                  $With.d_xxx
                  (call $With.d_xxx $With.d_xxx)
                  (cast (sum (con Tuple#)) $With.d_xxx))))))
   ())