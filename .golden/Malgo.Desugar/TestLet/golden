(()
   ((define
       ($TestLet.|>_curry_xxx $TestLet.x_xxx $TestLet.f_xxx)
       (-> (Any# (-> (Any#) Any#)) Any#)
       (=
          $TestLet.d_xxx
          (call $TestLet.f_xxx $TestLet.x_xxx)
          (cast Any# $TestLet.d_xxx)))
      (define
         (|> $TestLet.x_xxx)
         (-> (Any#) (-> ((-> (Any#) Any#)) Any#))
         (let
            (($TestLet.let_xxx
                (-> ((-> (Any#) Any#)) Any#)
                (fun
                   ($TestLet.f_xxx)
                   (direct $TestLet.|>_curry_xxx $TestLet.x_xxx $TestLet.f_xxx))))
            $TestLet.let_xxx))
      (define
         (main $TestLet.$__xxx)
         (-> ((sum (con Tuple#))) (sum (con Tuple#)))
         (match
            (=
               $TestLet.d_xxx
               (=
                  $TestLet.d_xxx
                  (call addInt32# 1_i32)
                  (cast (-> (Int32#) Int32#) $TestLet.d_xxx))
               (=
                  $TestLet.d_xxx
                  (call $TestLet.d_xxx 2_i32)
                  (cast Int32# $TestLet.d_xxx)))
            (bind
               $TestLet.let_test/testcases/malgo/TestLet.mlg.#x_4_xxx
               Int32#
               (=
                  $TestLet.d_xxx
                  (=
                     $TestLet.d_xxx
                     (=
                        $TestLet.d_xxx
                        (call
                           toStringInt32#
                           $TestLet.let_test/testcases/malgo/TestLet.mlg.#x_4_xxx)
                        (cast String# $TestLet.d_xxx))
                     (=
                        $TestLet.d_xxx
                        (call printString# $TestLet.d_xxx)
                        (cast (sum (con Tuple#)) $TestLet.d_xxx)))
                  (match
                     (=
                        $TestLet.d_xxx
                        (=
                           $TestLet.d_xxx
                           (=
                              $TestLet.d_xxx
                              (call addInt32# 1_i32)
                              (cast (-> (Int32#) Int32#) $TestLet.d_xxx))
                           (=
                              $TestLet.d_xxx
                              (call $TestLet.d_xxx 2_i32)
                              (cast Int32# $TestLet.d_xxx)))
                        (=
                           $TestLet.d_xxx
                           (call Int32# $TestLet.d_xxx)
                           (cast Any# $TestLet.d_xxx)))
                     (bind
                        $TestLet.let_test/testcases/malgo/TestLet.mlg.#x_5_xxx
                        Any#
                        (match
                           (let
                              (($TestLet.fun_xxx
                                  (-> (Any#) (sum (con Tuple#)))
                                  (fun
                                     ($TestLet.int32#_xxx)
                                     (match
                                        (cast
                                           (sum
                                              (con
                                                 runtime/malgo/Builtin.mlg.Int32#
                                                 Int32#))
                                           $TestLet.int32#_xxx)
                                        (unpack
                                           (con
                                              runtime/malgo/Builtin.mlg.Int32#
                                              Int32#)
                                           ($TestLet.p_xxx)
                                           (=
                                              $TestLet.d_xxx
                                              (=
                                                 $TestLet.d_xxx
                                                 (call
                                                    toStringInt32#
                                                    $TestLet.p_xxx)
                                                 (cast String# $TestLet.d_xxx))
                                              (=
                                                 $TestLet.d_xxx
                                                 (call
                                                    printString#
                                                    $TestLet.d_xxx)
                                                 (cast
                                                    (sum (con Tuple#))
                                                    $TestLet.d_xxx))))))))
                              $TestLet.fun_xxx)
                           (bind
                              $TestLet.let_test/testcases/malgo/TestLet.mlg.#printInt32_7_xxx
                              (-> (Any#) (sum (con Tuple#)))
                              (=
                                 $TestLet.d_xxx
                                 (call
                                    $TestLet.let_test/testcases/malgo/TestLet.mlg.#printInt32_7_xxx
                                    $TestLet.let_test/testcases/malgo/TestLet.mlg.#x_5_xxx)
                                 (cast (sum (con Tuple#)) $TestLet.d_xxx)))))))))))
   ())