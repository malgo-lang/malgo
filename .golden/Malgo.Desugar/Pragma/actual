(()
   ((define
       (String# $Pragma.p_xxx)
       (-> (String#) Any#)
       (let
          (($Pragma.let_xxx
              (sum (con test/testcases/malgo/Pragma.mlg.String# String#))
              (pack
                 (sum (con test/testcases/malgo/Pragma.mlg.String# String#))
                 (con test/testcases/malgo/Pragma.mlg.String# String#)
                 $Pragma.p_xxx)))
          (cast Any# $Pragma.let_xxx)))
      (define
         (malgo_print_string $Pragma.p_xxx)
         (-> (String#) (sum (con Tuple#)))
         (raw malgo_print_string (-> (String#) (sum (con Tuple#))) $Pragma.p_xxx))
      (define
         (malgo_newline $Pragma.p_xxx)
         (-> ((sum (con Tuple#))) (sum (con Tuple#)))
         (raw
            malgo_newline
            (-> ((sum (con Tuple#))) (sum (con Tuple#)))
            $Pragma.p_xxx))
      (define
         (string# $Pragma.x_xxx)
         (-> (String#) Any#)
         (= $Pragma.d_xxx (call String# $Pragma.x_xxx) (cast Any# $Pragma.d_xxx)))
      (define
         (putStrLn $Pragma.string#_xxx)
         (-> (Any#) (sum (con Tuple#)))
         (match
            (cast
               (sum (con test/testcases/malgo/Pragma.mlg.String# String#))
               $Pragma.string#_xxx)
            (unpack
               (con test/testcases/malgo/Pragma.mlg.String# String#)
               ($Pragma.p_xxx)
               (=
                  $Pragma.d_xxx
                  (=
                     $Pragma.d_xxx
                     (call malgo_print_string $Pragma.p_xxx)
                     (cast (sum (con Tuple#)) $Pragma.d_xxx))
                  (=
                     $Pragma.d_xxx
                     (let
                        (($Pragma.let_xxx
                            (sum (con Tuple#))
                            (pack (sum (con Tuple#)) (con Tuple#))))
                        $Pragma.let_xxx)
                     (=
                        $Pragma.d_xxx
                        (call malgo_newline $Pragma.d_xxx)
                        (cast (sum (con Tuple#)) $Pragma.d_xxx)))))))
      (define
         (main $Pragma.$__xxx)
         (-> ((sum (con Tuple#))) (sum (con Tuple#)))
         (=
            $Pragma.d_xxx
            (=
               $Pragma.d_xxx
               (call String# "Hello, world")
               (cast Any# $Pragma.d_xxx))
            (=
               $Pragma.d_xxx
               (call putStrLn $Pragma.d_xxx)
               (cast (sum (con Tuple#)) $Pragma.d_xxx)))))
   ((extern malgo_print_string (-> (String#) (sum (con Tuple#))))
      (extern malgo_newline (-> ((sum (con Tuple#))) (sum (con Tuple#))))))