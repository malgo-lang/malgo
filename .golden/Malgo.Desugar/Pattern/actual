(()
   ((define
      (main $Pattern.$__16)
      (->
         ((sum (con Tuple#)))
         (sum (con Tuple#)))
      (= $Pattern.d_18
         (= $Pattern.d_17
            (call String# "OK")
            (cast Any# $Pattern.d_17))
         (= $Pattern.d_19
            (call putStrLn $Pattern.d_18)
            (cast
               (sum (con Tuple#))
               $Pattern.d_19))))
      (define
         (isNil $Pattern.nil_20)
         (->
            (Any#)
            Any#)
         (match
            (cast
               (sum (con runtime/malgo/Prelude.mlg.Nil)
                  (con runtime/malgo/Prelude.mlg.Cons Any# Any#))
               $Pattern.nil_20)
            (unpack
               (con runtime/malgo/Prelude.mlg.Nil)
               ()
               (direct True))
            (unpack
               (con runtime/malgo/Prelude.mlg.Cons Any# Any#)
               ($Pattern.p_21 $Pattern.p_22)
               (direct False)))))
   ())