(()
   ((define
      ($Test1.if_curry_51 $Test1.true_52 $Test1.t_53 $Test1.__54)
      (->
         (Any#
            (->
               ((sum
                  (con Tuple#)))
               Any#)
            (->
               ((sum
                  (con Tuple#)))
               Any#))
         Any#)
      (match
         (cast
            (sum
               (con test/testcases/malgo/Test1.mlg.True)
               (con test/testcases/malgo/Test1.mlg.False))
            $Test1.true_52)
         (unpack
            (con test/testcases/malgo/Test1.mlg.True)
            ()
            (=
               $Test1.d_56
               (let
                  (($Test1.let_55
                     (sum
                        (con Tuple#))
                     (pack
                        (sum
                           (con Tuple#))
                        (con Tuple#))))
                  $Test1.let_55)
               (=
                  $Test1.d_57
                  (call $Test1.t_53 $Test1.d_56)
                  (cast Any# $Test1.d_57))))
         (unpack
            (con test/testcases/malgo/Test1.mlg.False)
            ()
            (=
               $Test1.d_59
               (let
                  (($Test1.let_58
                     (sum
                        (con Tuple#))
                     (pack
                        (sum
                           (con Tuple#))
                        (con Tuple#))))
                  $Test1.let_58)
               (=
                  $Test1.d_60
                  (call $Test1.__54 $Test1.d_59)
                  (cast Any# $Test1.d_60))))))
      (define
         (True)
         (-> () Any#)
         (let
            (($Test1.let_39
               (sum
                  (con test/testcases/malgo/Test1.mlg.True)
                  (con test/testcases/malgo/Test1.mlg.False))
               (pack
                  (sum
                     (con test/testcases/malgo/Test1.mlg.True)
                     (con test/testcases/malgo/Test1.mlg.False))
                  (con test/testcases/malgo/Test1.mlg.True))))
            (cast Any# $Test1.let_39)))
      (define
         (False)
         (-> () Any#)
         (let
            (($Test1.let_40
               (sum
                  (con test/testcases/malgo/Test1.mlg.True)
                  (con test/testcases/malgo/Test1.mlg.False))
               (pack
                  (sum
                     (con test/testcases/malgo/Test1.mlg.True)
                     (con test/testcases/malgo/Test1.mlg.False))
                  (con test/testcases/malgo/Test1.mlg.False))))
            (cast Any# $Test1.let_40)))
      (define
         (malgo_print_string $Test1.p_41)
         (->
            (String#)
            (sum
               (con Tuple#)))
         (raw
            malgo_print_string
            (->
               (String#)
               (sum
                  (con Tuple#)))
            $Test1.p_41))
      (define
         (if $Test1.true_42)
         (->
            (Any#)
            (->
               ((->
                  ((sum
                     (con Tuple#)))
                  Any#))
               (->
                  ((->
                     ((sum
                        (con Tuple#)))
                     Any#))
                  Any#)))
         (let
            (($Test1.let_62
               (->
                  ((->
                     ((sum
                        (con Tuple#)))
                     Any#))
                  (->
                     ((->
                        ((sum
                           (con Tuple#)))
                        Any#))
                     Any#))
               (fun
                  ($Test1.t_43)
                  (let
                     (($Test1.let_61
                        (->
                           ((->
                              ((sum
                                 (con Tuple#)))
                              Any#))
                           Any#)
                        (fun
                           ($Test1.__44)
                           (direct $Test1.if_curry_51 $Test1.true_42 $Test1.t_43 $Test1.__44))))
                     $Test1.let_61))))
            $Test1.let_62))
      (define
         (main $Test1.$__63)
         (->
            ((sum
               (con Tuple#)))
            (sum
               (con Tuple#)))
         (=
            $Test1.d_72
            (=
               $Test1.d_66
               (=
                  $Test1.d_64
                  (direct True)
                  (=
                     $Test1.d_65
                     (call if $Test1.d_64)
                     (cast
                        (->
                           ((->
                              ((sum
                                 (con Tuple#)))
                              (sum
                                 (con Tuple#))))
                           (->
                              ((->
                                 ((sum
                                    (con Tuple#)))
                                 (sum
                                    (con Tuple#))))
                              (sum
                                 (con Tuple#))))
                        $Test1.d_65)))
               (=
                  $Test1.d_70
                  (let
                     (($Test1.fun_69
                        (->
                           ((sum
                              (con Tuple#)))
                           (sum
                              (con Tuple#)))
                        (fun
                           ($Test1.$__67)
                           (=
                              $Test1.d_68
                              (call malgo_print_string "True")
                              (cast
                                 (sum
                                    (con Tuple#))
                                 $Test1.d_68)))))
                     $Test1.fun_69)
                  (=
                     $Test1.d_71
                     (call $Test1.d_66 $Test1.d_70)
                     (cast
                        (->
                           ((->
                              ((sum
                                 (con Tuple#)))
                              (sum
                                 (con Tuple#))))
                           (sum
                              (con Tuple#)))
                        $Test1.d_71))))
            (=
               $Test1.d_76
               (let
                  (($Test1.fun_75
                     (->
                        ((sum
                           (con Tuple#)))
                        (sum
                           (con Tuple#)))
                     (fun
                        ($Test1.$__73)
                        (=
                           $Test1.d_74
                           (call malgo_print_string "False")
                           (cast
                              (sum
                                 (con Tuple#))
                              $Test1.d_74)))))
                  $Test1.fun_75)
               (=
                  $Test1.d_77
                  (call $Test1.d_72 $Test1.d_76)
                  (cast
                     (sum
                        (con Tuple#))
                     $Test1.d_77))))))
   ((extern
      malgo_print_string
      (->
         (String#)
         (sum
            (con Tuple#))))))