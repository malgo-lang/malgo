(()
   ((define
       (String# $HelloBoxed.p_xxx)
       (-> (String#) Any#)
       (let
          (($HelloBoxed.let_xxx
              (sum (con test/testcases/malgo/HelloBoxed.mlg.String# String#))
              (pack
                 (sum (con test/testcases/malgo/HelloBoxed.mlg.String# String#))
                 (con test/testcases/malgo/HelloBoxed.mlg.String# String#)
                 $HelloBoxed.p_xxx)))
          (cast Any# $HelloBoxed.let_xxx)))
      (define
         (malgo_print_string $HelloBoxed.p_xxx)
         (-> (String#) (sum (con Tuple#)))
         (raw
            malgo_print_string
            (-> (String#) (sum (con Tuple#)))
            $HelloBoxed.p_xxx))
      (define
         (malgo_newline $HelloBoxed.p_xxx)
         (-> ((sum (con Tuple#))) (sum (con Tuple#)))
         (raw
            malgo_newline
            (-> ((sum (con Tuple#))) (sum (con Tuple#)))
            $HelloBoxed.p_xxx))
      (define
         (string# $HelloBoxed.x_xxx)
         (-> (String#) Any#)
         (=
            $HelloBoxed.d_xxx
            (call String# $HelloBoxed.x_xxx)
            (cast Any# $HelloBoxed.d_xxx)))
      (define
         (putStrLn $HelloBoxed.string#_xxx)
         (-> (Any#) (sum (con Tuple#)))
         (match
            (cast
               (sum (con test/testcases/malgo/HelloBoxed.mlg.String# String#))
               $HelloBoxed.string#_xxx)
            (unpack
               (con test/testcases/malgo/HelloBoxed.mlg.String# String#)
               ($HelloBoxed.p_xxx)
               (=
                  $HelloBoxed.d_xxx
                  (=
                     $HelloBoxed.d_xxx
                     (call malgo_print_string $HelloBoxed.p_xxx)
                     (cast (sum (con Tuple#)) $HelloBoxed.d_xxx))
                  (=
                     $HelloBoxed.d_xxx
                     (let
                        (($HelloBoxed.let_xxx
                            (sum (con Tuple#))
                            (pack (sum (con Tuple#)) (con Tuple#))))
                        $HelloBoxed.let_xxx)
                     (=
                        $HelloBoxed.d_xxx
                        (call malgo_newline $HelloBoxed.d_xxx)
                        (cast (sum (con Tuple#)) $HelloBoxed.d_xxx)))))))
      (define
         (main $HelloBoxed.$__xxx)
         (-> ((sum (con Tuple#))) (sum (con Tuple#)))
         (=
            $HelloBoxed.d_xxx
            (=
               $HelloBoxed.d_xxx
               (call String# "Hello, world")
               (cast Any# $HelloBoxed.d_xxx))
            (=
               $HelloBoxed.d_xxx
               (call putStrLn $HelloBoxed.d_xxx)
               (cast (sum (con Tuple#)) $HelloBoxed.d_xxx)))))
   ((extern malgo_print_string (-> (String#) (sum (con Tuple#))))
      (extern malgo_newline (-> ((sum (con Tuple#))) (sum (con Tuple#))))))