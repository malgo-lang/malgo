(()
   ((define
       (main $TypeAnnotation.$__xxx)
       (-> ((sum (con Tuple#))) (sum (con Tuple#)))
       (=
          $TypeAnnotation.d_xxx
          (=
             $TypeAnnotation.d_xxx
             (let
                (($TypeAnnotation.fun_xxx
                    (-> (Any#) Any#)
                    (fun ($TypeAnnotation.x_xxx) $TypeAnnotation.x_xxx)))
                $TypeAnnotation.fun_xxx)
             (=
                $TypeAnnotation.d_xxx
                (=
                   $TypeAnnotation.d_xxx
                   (call String# "hoge")
                   (cast Any# $TypeAnnotation.d_xxx))
                (=
                   $TypeAnnotation.d_xxx
                   (call $TypeAnnotation.d_xxx $TypeAnnotation.d_xxx)
                   (cast Any# $TypeAnnotation.d_xxx))))
          (=
             $TypeAnnotation.d_xxx
             (call printString $TypeAnnotation.d_xxx)
             (cast (sum (con Tuple#)) $TypeAnnotation.d_xxx)))))
   ())