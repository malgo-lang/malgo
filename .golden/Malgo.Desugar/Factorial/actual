(()
   ((define
       ($Factorial.factAcc_curry_xxx $Factorial.n_xxx $Factorial.acc_xxx)
       (-> (Any# Any#) Any#)
       (=
          $Factorial.d_xxx
          (=
             $Factorial.d_xxx
             (=
                $Factorial.d_xxx
                (=
                   $Factorial.d_xxx
                   (=
                      $Factorial.d_xxx
                      (call == $Factorial.n_xxx)
                      (cast (-> (Any#) Any#) $Factorial.d_xxx))
                   (=
                      $Factorial.d_xxx
                      (=
                         $Factorial.d_xxx
                         (call Int64# 0_i64)
                         (cast Any# $Factorial.d_xxx))
                      (=
                         $Factorial.d_xxx
                         (call $Factorial.d_xxx $Factorial.d_xxx)
                         (cast Any# $Factorial.d_xxx))))
                (=
                   $Factorial.d_xxx
                   (call if $Factorial.d_xxx)
                   (cast
                      (->
                         ((-> ((sum (con Tuple#))) Any#))
                         (-> ((-> ((sum (con Tuple#))) Any#)) Any#))
                      $Factorial.d_xxx)))
             (=
                $Factorial.d_xxx
                (let
                   (($Factorial.fun_xxx
                       (-> ((sum (con Tuple#))) Any#)
                       (fun ($Factorial.$__xxx) $Factorial.acc_xxx)))
                   $Factorial.fun_xxx)
                (=
                   $Factorial.d_xxx
                   (call $Factorial.d_xxx $Factorial.d_xxx)
                   (cast
                      (-> ((-> ((sum (con Tuple#))) Any#)) Any#)
                      $Factorial.d_xxx))))
          (=
             $Factorial.d_xxx
             (let
                (($Factorial.fun_xxx
                    (-> ((sum (con Tuple#))) Any#)
                    (fun
                       ($Factorial.$__xxx)
                       (=
                          $Factorial.d_xxx
                          (=
                             $Factorial.d_xxx
                             (=
                                $Factorial.d_xxx
                                (=
                                   $Factorial.d_xxx
                                   (call - $Factorial.n_xxx)
                                   (cast (-> (Any#) Any#) $Factorial.d_xxx))
                                (=
                                   $Factorial.d_xxx
                                   (=
                                      $Factorial.d_xxx
                                      (call Int64# 1_i64)
                                      (cast Any# $Factorial.d_xxx))
                                   (=
                                      $Factorial.d_xxx
                                      (call $Factorial.d_xxx $Factorial.d_xxx)
                                      (cast Any# $Factorial.d_xxx))))
                             (=
                                $Factorial.d_xxx
                                (call factAcc $Factorial.d_xxx)
                                (cast (-> (Any#) Any#) $Factorial.d_xxx)))
                          (=
                             $Factorial.d_xxx
                             (=
                                $Factorial.d_xxx
                                (=
                                   $Factorial.d_xxx
                                   (call * $Factorial.n_xxx)
                                   (cast (-> (Any#) Any#) $Factorial.d_xxx))
                                (=
                                   $Factorial.d_xxx
                                   (call $Factorial.d_xxx $Factorial.acc_xxx)
                                   (cast Any# $Factorial.d_xxx)))
                             (=
                                $Factorial.d_xxx
                                (call $Factorial.d_xxx $Factorial.d_xxx)
                                (cast Any# $Factorial.d_xxx)))))))
                $Factorial.fun_xxx)
             (=
                $Factorial.d_xxx
                (call $Factorial.d_xxx $Factorial.d_xxx)
                (cast Any# $Factorial.d_xxx)))))
      (define
         ($Factorial.*_curry_xxx $Factorial.x_xxx $Factorial.y_xxx)
         (-> (Any# Any#) Any#)
         (=
            $Factorial.d_xxx
            (=
               $Factorial.d_xxx
               (call mulInt64 $Factorial.x_xxx)
               (cast (-> (Any#) Any#) $Factorial.d_xxx))
            (=
               $Factorial.d_xxx
               (call $Factorial.d_xxx $Factorial.y_xxx)
               (cast Any# $Factorial.d_xxx))))
      (define
         ($Factorial.-_curry_xxx $Factorial.x_xxx $Factorial.y_xxx)
         (-> (Any# Any#) Any#)
         (=
            $Factorial.d_xxx
            (=
               $Factorial.d_xxx
               (call subInt64 $Factorial.x_xxx)
               (cast (-> (Any#) Any#) $Factorial.d_xxx))
            (=
               $Factorial.d_xxx
               (call $Factorial.d_xxx $Factorial.y_xxx)
               (cast Any# $Factorial.d_xxx))))
      (define
         ($Factorial.==_curry_xxx $Factorial.x_xxx $Factorial.y_xxx)
         (-> (Any# Any#) Any#)
         (=
            $Factorial.d_xxx
            (=
               $Factorial.d_xxx
               (call eqInt64 $Factorial.x_xxx)
               (cast (-> (Any#) Any#) $Factorial.d_xxx))
            (=
               $Factorial.d_xxx
               (call $Factorial.d_xxx $Factorial.y_xxx)
               (cast Any# $Factorial.d_xxx))))
      (define
         (== $Factorial.x_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Factorial.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Factorial.y_xxx)
                   (direct
                      $Factorial.==_curry_xxx
                      $Factorial.x_xxx
                      $Factorial.y_xxx))))
            $Factorial.let_xxx))
      (define
         (- $Factorial.x_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Factorial.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Factorial.y_xxx)
                   (direct
                      $Factorial.-_curry_xxx
                      $Factorial.x_xxx
                      $Factorial.y_xxx))))
            $Factorial.let_xxx))
      (define
         (* $Factorial.x_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Factorial.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Factorial.y_xxx)
                   (direct
                      $Factorial.*_curry_xxx
                      $Factorial.x_xxx
                      $Factorial.y_xxx))))
            $Factorial.let_xxx))
      (define
         (factAcc $Factorial.n_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Factorial.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Factorial.acc_xxx)
                   (direct
                      $Factorial.factAcc_curry_xxx
                      $Factorial.n_xxx
                      $Factorial.acc_xxx))))
            $Factorial.let_xxx))
      (define
         (fact $Factorial.n_xxx)
         (-> (Any#) Any#)
         (=
            $Factorial.d_xxx
            (=
               $Factorial.d_xxx
               (call factAcc $Factorial.n_xxx)
               (cast (-> (Any#) Any#) $Factorial.d_xxx))
            (=
               $Factorial.d_xxx
               (=
                  $Factorial.d_xxx
                  (call Int64# 1_i64)
                  (cast Any# $Factorial.d_xxx))
               (=
                  $Factorial.d_xxx
                  (call $Factorial.d_xxx $Factorial.d_xxx)
                  (cast Any# $Factorial.d_xxx)))))
      (define
         (main $Factorial.$__xxx)
         (-> ((sum (con Tuple#))) (sum (con Tuple#)))
         (=
            $Factorial.d_xxx
            (=
               $Factorial.d_xxx
               (=
                  $Factorial.d_xxx
                  (=
                     $Factorial.d_xxx
                     (=
                        $Factorial.d_xxx
                        (=
                           $Factorial.d_xxx
                           (call Int64# 5_i64)
                           (cast Any# $Factorial.d_xxx))
                        (=
                           $Factorial.d_xxx
                           (call fact $Factorial.d_xxx)
                           (cast Any# $Factorial.d_xxx)))
                     (=
                        $Factorial.d_xxx
                        (call |> $Factorial.d_xxx)
                        (cast (-> ((-> (Any#) Any#)) Any#) $Factorial.d_xxx)))
                  (=
                     $Factorial.d_xxx
                     (call $Factorial.d_xxx toStringInt64)
                     (cast Any# $Factorial.d_xxx)))
               (=
                  $Factorial.d_xxx
                  (call |> $Factorial.d_xxx)
                  (cast
                     (-> ((-> (Any#) (sum (con Tuple#)))) (sum (con Tuple#)))
                     $Factorial.d_xxx)))
            (=
               $Factorial.d_xxx
               (call $Factorial.d_xxx putStrLn)
               (cast (sum (con Tuple#)) $Factorial.d_xxx)))))
   ())