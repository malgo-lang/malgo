(()
   ((define
       (Int32# $ShowSimple.p_xxx)
       (-> (Int32#) Any#)
       (let
          (($ShowSimple.let_xxx
              (sum (con test/testcases/malgo/ShowSimple.mlg.Int32# Int32#))
              (pack
                 (sum (con test/testcases/malgo/ShowSimple.mlg.Int32# Int32#))
                 (con test/testcases/malgo/ShowSimple.mlg.Int32# Int32#)
                 $ShowSimple.p_xxx)))
          (cast Any# $ShowSimple.let_xxx)))
      (define
         (String# $ShowSimple.p_xxx)
         (-> (String#) Any#)
         (let
            (($ShowSimple.let_xxx
                (sum (con test/testcases/malgo/ShowSimple.mlg.String# String#))
                (pack
                   (sum (con test/testcases/malgo/ShowSimple.mlg.String# String#))
                   (con test/testcases/malgo/ShowSimple.mlg.String# String#)
                   $ShowSimple.p_xxx)))
            (cast Any# $ShowSimple.let_xxx)))
      (define
         (malgo_print_string $ShowSimple.p_xxx)
         (-> (String#) (sum (con Tuple#)))
         (raw
            malgo_print_string
            (-> (String#) (sum (con Tuple#)))
            $ShowSimple.p_xxx))
      (define
         (malgo_newline $ShowSimple.p_xxx)
         (-> ((sum (con Tuple#))) (sum (con Tuple#)))
         (raw
            malgo_newline
            (-> ((sum (con Tuple#))) (sum (con Tuple#)))
            $ShowSimple.p_xxx))
      (define
         (malgo_int32_t_to_string $ShowSimple.p_xxx)
         (-> (Int32#) String#)
         (raw malgo_int32_t_to_string (-> (Int32#) String#) $ShowSimple.p_xxx))
      (define
         (wrap $ShowSimple.fn_xxx)
         (-> ((-> (Any#) Any#)) (Record# (show (-> (Any#) Any#))))
         (let
            (($ShowSimple.record_xxx
                (Record# (show (-> (Any#) Any#)))
                (record (show $ShowSimple.fn_xxx))))
            $ShowSimple.record_xxx))
      (define
         (string# $ShowSimple.x_xxx)
         (-> (String#) Any#)
         (=
            $ShowSimple.d_xxx
            (call String# $ShowSimple.x_xxx)
            (cast Any# $ShowSimple.d_xxx)))
      (define
         (show $ShowSimple.record_xxx)
         (-> ((Record# (show (-> (Any#) Any#)))) (-> (Any#) Any#))
         (match
            $ShowSimple.record_xxx
            (open ((show $ShowSimple.p_xxx)) $ShowSimple.p_xxx)))
      (define
         (putStr $ShowSimple.string#_xxx)
         (-> (Any#) (sum (con Tuple#)))
         (match
            (cast
               (sum (con test/testcases/malgo/ShowSimple.mlg.String# String#))
               $ShowSimple.string#_xxx)
            (unpack
               (con test/testcases/malgo/ShowSimple.mlg.String# String#)
               ($ShowSimple.p_xxx)
               (=
                  $ShowSimple.d_xxx
                  (call malgo_print_string $ShowSimple.p_xxx)
                  (cast (sum (con Tuple#)) $ShowSimple.d_xxx)))))
      (define
         (main $ShowSimple.$__xxx)
         (-> ((sum (con Tuple#))) (sum (con Tuple#)))
         (=
            $ShowSimple.d_xxx
            (=
               $ShowSimple.d_xxx
               (=
                  $ShowSimple.d_xxx
                  (=
                     $ShowSimple.d_xxx
                     (let
                        (($ShowSimple.fun_xxx
                            (-> (Any#) Any#)
                            (fun
                               ($ShowSimple.int32#_xxx)
                               (match
                                  (cast
                                     (sum
                                        (con
                                           test/testcases/malgo/ShowSimple.mlg.Int32#
                                           Int32#))
                                     $ShowSimple.int32#_xxx)
                                  (unpack
                                     (con
                                        test/testcases/malgo/ShowSimple.mlg.Int32#
                                        Int32#)
                                     ($ShowSimple.p_xxx)
                                     (=
                                        $ShowSimple.d_xxx
                                        (=
                                           $ShowSimple.d_xxx
                                           (call
                                              malgo_int32_t_to_string
                                              $ShowSimple.p_xxx)
                                           (cast String# $ShowSimple.d_xxx))
                                        (=
                                           $ShowSimple.d_xxx
                                           (call String# $ShowSimple.d_xxx)
                                           (cast Any# $ShowSimple.d_xxx))))))))
                        $ShowSimple.fun_xxx)
                     (=
                        $ShowSimple.d_xxx
                        (call wrap $ShowSimple.d_xxx)
                        (cast (Record# (show (-> (Any#) Any#))) $ShowSimple.d_xxx)))
                  (=
                     $ShowSimple.d_xxx
                     (call show $ShowSimple.d_xxx)
                     (cast (-> (Any#) Any#) $ShowSimple.d_xxx)))
               (=
                  $ShowSimple.d_xxx
                  (=
                     $ShowSimple.d_xxx
                     (call Int32# 1_i32)
                     (cast Any# $ShowSimple.d_xxx))
                  (=
                     $ShowSimple.d_xxx
                     (call $ShowSimple.d_xxx $ShowSimple.d_xxx)
                     (cast Any# $ShowSimple.d_xxx))))
            (=
               $ShowSimple.d_xxx
               (call putStr $ShowSimple.d_xxx)
               (cast (sum (con Tuple#)) $ShowSimple.d_xxx))))
      (define
         (int32# $ShowSimple.x_xxx)
         (-> (Int32#) Any#)
         (=
            $ShowSimple.d_xxx
            (call Int32# $ShowSimple.x_xxx)
            (cast Any# $ShowSimple.d_xxx))))
   ((extern malgo_print_string (-> (String#) (sum (con Tuple#))))
      (extern malgo_newline (-> ((sum (con Tuple#))) (sum (con Tuple#))))
      (extern malgo_int32_t_to_string (-> (Int32#) String#))))