(((define
     undefined
     Any#
     (=
        $Builtin.d_xxx
        (=
           $Builtin.d_xxx
           (let
              (($Builtin.let_xxx
                  (sum (con Tuple#))
                  (pack (sum (con Tuple#)) (con Tuple#))))
              $Builtin.let_xxx)
           (=
              $Builtin.cast_xxx
              (cast Any# $Builtin.d_xxx)
              (=
                 $Builtin.d_xxx
                 (call malgo_unsafe_cast $Builtin.cast_xxx)
                 (cast Any# $Builtin.d_xxx))))
        $Builtin.d_xxx)))
   ((define
       ($Builtin.addDouble_curry_xxx $Builtin.double#_xxx $Builtin.double#_xxx)
       (-> (Any# Any#) Any#)
       (match
          (cast
             (sum (con runtime/malgo/Builtin.mlg.Double# Double#))
             $Builtin.double#_xxx)
          (unpack
             (con runtime/malgo/Builtin.mlg.Double# Double#)
             ($Builtin.p_xxx)
             (match
                (cast
                   (sum (con runtime/malgo/Builtin.mlg.Double# Double#))
                   $Builtin.double#_xxx)
                (unpack
                   (con runtime/malgo/Builtin.mlg.Double# Double#)
                   ($Builtin.p_xxx)
                   (=
                      $Builtin.d_xxx
                      (=
                         $Builtin.d_xxx
                         (=
                            $Builtin.d_xxx
                            (call addDouble# $Builtin.p_xxx)
                            (cast (-> (Double#) Double#) $Builtin.d_xxx))
                         (=
                            $Builtin.d_xxx
                            (call $Builtin.d_xxx $Builtin.p_xxx)
                            (cast Double# $Builtin.d_xxx)))
                      (=
                         $Builtin.d_xxx
                         (call Double# $Builtin.d_xxx)
                         (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.addDouble#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Double# Double#) Double#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_add_double $Builtin.x_xxx)
               (cast (-> (Double#) Double#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Double# $Builtin.d_xxx))))
      (define
         ($Builtin.addFloat_curry_xxx $Builtin.float#_xxx $Builtin.float#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Float# Float#))
               $Builtin.float#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Float# Float#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Float# Float#))
                     $Builtin.float#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Float# Float#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call addFloat# $Builtin.p_xxx)
                              (cast (-> (Float#) Float#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Float# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call Float# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.addFloat#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Float# Float#) Float#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_add_float $Builtin.x_xxx)
               (cast (-> (Float#) Float#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Float# $Builtin.d_xxx))))
      (define
         ($Builtin.addInt32_curry_xxx $Builtin.int32#_xxx $Builtin.int32#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Int32# Int32#))
               $Builtin.int32#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Int32# Int32#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Int32# Int32#))
                     $Builtin.int32#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Int32# Int32#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call addInt32# $Builtin.p_xxx)
                              (cast (-> (Int32#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call Int32# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.addInt32#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Int32# Int32#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_add_int32_t $Builtin.x_xxx)
               (cast (-> (Int32#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.addInt64_curry_xxx $Builtin.int64#_xxx $Builtin.int64#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Int64# Int64#))
               $Builtin.int64#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Int64# Int64#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Int64# Int64#))
                     $Builtin.int64#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Int64# Int64#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call addInt64# $Builtin.p_xxx)
                              (cast (-> (Int64#) Int64#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int64# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call Int64# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.addInt64#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Int64# Int64#) Int64#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_add_int64_t $Builtin.x_xxx)
               (cast (-> (Int64#) Int64#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int64# $Builtin.d_xxx))))
      (define
         ($Builtin.appendString_curry_xxx
            $Builtin.string#_xxx
            $Builtin.string#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.String# String#))
               $Builtin.string#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.String# String#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.String# String#))
                     $Builtin.string#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.String# String#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call appendString# $Builtin.p_xxx)
                              (cast (-> (String#) String#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast String# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call String# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.appendString#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (String# String#) String#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_string_append $Builtin.x_xxx)
               (cast (-> (String#) String#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast String# $Builtin.d_xxx))))
      (define
         ($Builtin.atString_curry_xxx $Builtin.int64#_xxx $Builtin.string#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Int64# Int64#))
               $Builtin.int64#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Int64# Int64#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.String# String#))
                     $Builtin.string#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.String# String#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call atString# $Builtin.p_xxx)
                              (cast (-> (String#) Char#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Char# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call Char# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.atString#_curry_xxx $Builtin.i_xxx $Builtin.x_xxx)
         (-> (Int64# String#) Char#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_string_at $Builtin.i_xxx)
               (cast (-> (String#) Char#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.x_xxx)
               (cast Char# $Builtin.d_xxx))))
      (define
         ($Builtin.consString_curry_xxx $Builtin.char#_xxx $Builtin.string#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Char# Char#))
               $Builtin.char#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Char# Char#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.String# String#))
                     $Builtin.string#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.String# String#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call consString# $Builtin.p_xxx)
                              (cast (-> (String#) String#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast String# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call String# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.consString#_curry_xxx $Builtin.c_xxx $Builtin.cs_xxx)
         (-> (Char# String#) String#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_string_cons $Builtin.c_xxx)
               (cast (-> (String#) String#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.cs_xxx)
               (cast String# $Builtin.d_xxx))))
      (define
         ($Builtin.divDouble_curry_xxx $Builtin.double#_xxx $Builtin.double#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Double# Double#))
               $Builtin.double#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Double# Double#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Double# Double#))
                     $Builtin.double#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Double# Double#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call divDouble# $Builtin.p_xxx)
                              (cast (-> (Double#) Double#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Double# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call Double# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.divDouble#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Double# Double#) Double#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_div_double $Builtin.x_xxx)
               (cast (-> (Double#) Double#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Double# $Builtin.d_xxx))))
      (define
         ($Builtin.divFloat_curry_xxx $Builtin.float#_xxx $Builtin.float#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Float# Float#))
               $Builtin.float#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Float# Float#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Float# Float#))
                     $Builtin.float#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Float# Float#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call divFloat# $Builtin.p_xxx)
                              (cast (-> (Float#) Float#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Float# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call Float# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.divFloat#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Float# Float#) Float#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_div_float $Builtin.x_xxx)
               (cast (-> (Float#) Float#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Float# $Builtin.d_xxx))))
      (define
         ($Builtin.divInt32_curry_xxx $Builtin.int32#_xxx $Builtin.int32#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Int32# Int32#))
               $Builtin.int32#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Int32# Int32#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Int32# Int32#))
                     $Builtin.int32#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Int32# Int32#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call divInt32# $Builtin.p_xxx)
                              (cast (-> (Int32#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call Int32# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.divInt32#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Int32# Int32#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_div_int32_t $Builtin.x_xxx)
               (cast (-> (Int32#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.divInt64_curry_xxx $Builtin.int64#_xxx $Builtin.int64#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Int64# Int64#))
               $Builtin.int64#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Int64# Int64#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Int64# Int64#))
                     $Builtin.int64#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Int64# Int64#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call divInt64# $Builtin.p_xxx)
                              (cast (-> (Int64#) Int64#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int64# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call Int64# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.divInt64#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Int64# Int64#) Int64#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_div_int64_t $Builtin.x_xxx)
               (cast (-> (Int64#) Int64#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int64# $Builtin.d_xxx))))
      (define
         ($Builtin.eqChar_curry_xxx $Builtin.char#_xxx $Builtin.char#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Char# Char#))
               $Builtin.char#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Char# Char#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Char# Char#))
                     $Builtin.char#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Char# Char#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call eqChar# $Builtin.p_xxx)
                              (cast (-> (Char#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call isTrue# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.eqChar#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Char# Char#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_eq_char $Builtin.x_xxx)
               (cast (-> (Char#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.eqDouble_curry_xxx $Builtin.double#_xxx $Builtin.double#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Double# Double#))
               $Builtin.double#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Double# Double#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Double# Double#))
                     $Builtin.double#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Double# Double#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call eqDouble# $Builtin.p_xxx)
                              (cast (-> (Double#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call isTrue# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.eqDouble#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Double# Double#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_eq_double $Builtin.x_xxx)
               (cast (-> (Double#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.eqFloat_curry_xxx $Builtin.float#_xxx $Builtin.float#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Float# Float#))
               $Builtin.float#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Float# Float#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Float# Float#))
                     $Builtin.float#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Float# Float#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call eqFloat# $Builtin.p_xxx)
                              (cast (-> (Float#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call isTrue# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.eqFloat#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Float# Float#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_eq_float $Builtin.x_xxx)
               (cast (-> (Float#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.eqInt32_curry_xxx $Builtin.int32#_xxx $Builtin.int32#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Int32# Int32#))
               $Builtin.int32#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Int32# Int32#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Int32# Int32#))
                     $Builtin.int32#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Int32# Int32#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call eqInt32# $Builtin.p_xxx)
                              (cast (-> (Int32#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call isTrue# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.eqInt32#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Int32# Int32#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_eq_int32_t $Builtin.x_xxx)
               (cast (-> (Int32#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.eqInt64_curry_xxx $Builtin.int64#_xxx $Builtin.int64#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Int64# Int64#))
               $Builtin.int64#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Int64# Int64#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Int64# Int64#))
                     $Builtin.int64#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Int64# Int64#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call eqInt64# $Builtin.p_xxx)
                              (cast (-> (Int64#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call isTrue# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.eqInt64#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Int64# Int64#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_eq_int64_t $Builtin.x_xxx)
               (cast (-> (Int64#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.eqString_curry_xxx $Builtin.string#_xxx $Builtin.string#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.String# String#))
               $Builtin.string#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.String# String#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.String# String#))
                     $Builtin.string#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.String# String#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call eqString# $Builtin.p_xxx)
                              (cast (-> (String#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call isTrue# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.eqString#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (String# String#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_eq_string $Builtin.x_xxx)
               (cast (-> (String#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.geChar_curry_xxx $Builtin.char#_xxx $Builtin.char#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Char# Char#))
               $Builtin.char#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Char# Char#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Char# Char#))
                     $Builtin.char#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Char# Char#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call geChar# $Builtin.p_xxx)
                              (cast (-> (Char#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call isTrue# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.geChar#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Char# Char#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_ge_char $Builtin.x_xxx)
               (cast (-> (Char#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.geDouble_curry_xxx $Builtin.double#_xxx $Builtin.double#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Double# Double#))
               $Builtin.double#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Double# Double#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Double# Double#))
                     $Builtin.double#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Double# Double#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call geDouble# $Builtin.p_xxx)
                              (cast (-> (Double#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call isTrue# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.geDouble#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Double# Double#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_ge_double $Builtin.x_xxx)
               (cast (-> (Double#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.geFloat_curry_xxx $Builtin.float#_xxx $Builtin.float#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Float# Float#))
               $Builtin.float#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Float# Float#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Float# Float#))
                     $Builtin.float#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Float# Float#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call geFloat# $Builtin.p_xxx)
                              (cast (-> (Float#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call isTrue# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.geFloat#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Float# Float#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_ge_float $Builtin.x_xxx)
               (cast (-> (Float#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.geInt32_curry_xxx $Builtin.int32#_xxx $Builtin.int32#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Int32# Int32#))
               $Builtin.int32#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Int32# Int32#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Int32# Int32#))
                     $Builtin.int32#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Int32# Int32#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call geInt32# $Builtin.p_xxx)
                              (cast (-> (Int32#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call isTrue# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.geInt32#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Int32# Int32#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_ge_int32_t $Builtin.x_xxx)
               (cast (-> (Int32#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.geInt64_curry_xxx $Builtin.int64#_xxx $Builtin.int64#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Int64# Int64#))
               $Builtin.int64#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Int64# Int64#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Int64# Int64#))
                     $Builtin.int64#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Int64# Int64#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call geInt64# $Builtin.p_xxx)
                              (cast (-> (Int64#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call isTrue# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.geInt64#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Int64# Int64#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_ge_int64_t $Builtin.x_xxx)
               (cast (-> (Int64#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.geString_curry_xxx $Builtin.string#_xxx $Builtin.string#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.String# String#))
               $Builtin.string#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.String# String#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.String# String#))
                     $Builtin.string#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.String# String#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call geString# $Builtin.p_xxx)
                              (cast (-> (String#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call isTrue# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.geString#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (String# String#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_ge_string $Builtin.x_xxx)
               (cast (-> (String#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.gtChar_curry_xxx $Builtin.char#_xxx $Builtin.char#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Char# Char#))
               $Builtin.char#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Char# Char#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Char# Char#))
                     $Builtin.char#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Char# Char#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call gtChar# $Builtin.p_xxx)
                              (cast (-> (Char#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call isTrue# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.gtChar#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Char# Char#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_gt_char $Builtin.x_xxx)
               (cast (-> (Char#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.gtDouble_curry_xxx $Builtin.double#_xxx $Builtin.double#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Double# Double#))
               $Builtin.double#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Double# Double#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Double# Double#))
                     $Builtin.double#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Double# Double#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call gtDouble# $Builtin.p_xxx)
                              (cast (-> (Double#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call isTrue# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.gtDouble#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Double# Double#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_gt_double $Builtin.x_xxx)
               (cast (-> (Double#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.gtFloat_curry_xxx $Builtin.float#_xxx $Builtin.float#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Float# Float#))
               $Builtin.float#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Float# Float#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Float# Float#))
                     $Builtin.float#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Float# Float#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call gtFloat# $Builtin.p_xxx)
                              (cast (-> (Float#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call isTrue# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.gtFloat#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Float# Float#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_gt_float $Builtin.x_xxx)
               (cast (-> (Float#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.gtInt32_curry_xxx $Builtin.int32#_xxx $Builtin.int32#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Int32# Int32#))
               $Builtin.int32#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Int32# Int32#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Int32# Int32#))
                     $Builtin.int32#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Int32# Int32#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call gtInt32# $Builtin.p_xxx)
                              (cast (-> (Int32#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call isTrue# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.gtInt32#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Int32# Int32#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_gt_int32_t $Builtin.x_xxx)
               (cast (-> (Int32#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.gtInt64_curry_xxx $Builtin.int64#_xxx $Builtin.int64#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Int64# Int64#))
               $Builtin.int64#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Int64# Int64#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Int64# Int64#))
                     $Builtin.int64#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Int64# Int64#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call gtInt64# $Builtin.p_xxx)
                              (cast (-> (Int64#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call isTrue# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.gtInt64#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Int64# Int64#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_gt_int64_t $Builtin.x_xxx)
               (cast (-> (Int64#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.gtString_curry_xxx $Builtin.string#_xxx $Builtin.string#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.String# String#))
               $Builtin.string#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.String# String#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.String# String#))
                     $Builtin.string#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.String# String#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call gtString# $Builtin.p_xxx)
                              (cast (-> (String#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call isTrue# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.gtString#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (String# String#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_gt_string $Builtin.x_xxx)
               (cast (-> (String#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.neString_curry_xxx $Builtin.string#_xxx $Builtin.string#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.String# String#))
               $Builtin.string#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.String# String#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.String# String#))
                     $Builtin.string#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.String# String#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call neString# $Builtin.p_xxx)
                              (cast (-> (String#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call isTrue# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.neInt64_curry_xxx $Builtin.int64#_xxx $Builtin.int64#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Int64# Int64#))
               $Builtin.int64#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Int64# Int64#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Int64# Int64#))
                     $Builtin.int64#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Int64# Int64#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call neInt64# $Builtin.p_xxx)
                              (cast (-> (Int64#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call isTrue# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.neInt32_curry_xxx $Builtin.int32#_xxx $Builtin.int32#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Int32# Int32#))
               $Builtin.int32#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Int32# Int32#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Int32# Int32#))
                     $Builtin.int32#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Int32# Int32#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call neInt32# $Builtin.p_xxx)
                              (cast (-> (Int32#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call isTrue# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.neFloat_curry_xxx $Builtin.float#_xxx $Builtin.float#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Float# Float#))
               $Builtin.float#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Float# Float#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Float# Float#))
                     $Builtin.float#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Float# Float#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call neFloat# $Builtin.p_xxx)
                              (cast (-> (Float#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call isTrue# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.neDouble_curry_xxx $Builtin.double#_xxx $Builtin.double#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Double# Double#))
               $Builtin.double#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Double# Double#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Double# Double#))
                     $Builtin.double#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Double# Double#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call neDouble# $Builtin.p_xxx)
                              (cast (-> (Double#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call isTrue# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.neChar_curry_xxx $Builtin.char#_xxx $Builtin.char#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Char# Char#))
               $Builtin.char#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Char# Char#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Char# Char#))
                     $Builtin.char#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Char# Char#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call neChar# $Builtin.p_xxx)
                              (cast (-> (Char#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call isTrue# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.ltString_curry_xxx $Builtin.string#_xxx $Builtin.string#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.String# String#))
               $Builtin.string#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.String# String#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.String# String#))
                     $Builtin.string#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.String# String#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call ltString# $Builtin.p_xxx)
                              (cast (-> (String#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call isTrue# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.ltInt64_curry_xxx $Builtin.int64#_xxx $Builtin.int64#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Int64# Int64#))
               $Builtin.int64#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Int64# Int64#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Int64# Int64#))
                     $Builtin.int64#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Int64# Int64#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call ltInt64# $Builtin.p_xxx)
                              (cast (-> (Int64#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call isTrue# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.ltInt32_curry_xxx $Builtin.int32#_xxx $Builtin.int32#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Int32# Int32#))
               $Builtin.int32#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Int32# Int32#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Int32# Int32#))
                     $Builtin.int32#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Int32# Int32#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call ltInt32# $Builtin.p_xxx)
                              (cast (-> (Int32#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call isTrue# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.ltFloat_curry_xxx $Builtin.float#_xxx $Builtin.float#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Float# Float#))
               $Builtin.float#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Float# Float#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Float# Float#))
                     $Builtin.float#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Float# Float#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call ltFloat# $Builtin.p_xxx)
                              (cast (-> (Float#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call isTrue# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.ltDouble_curry_xxx $Builtin.double#_xxx $Builtin.double#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Double# Double#))
               $Builtin.double#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Double# Double#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Double# Double#))
                     $Builtin.double#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Double# Double#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call ltDouble# $Builtin.p_xxx)
                              (cast (-> (Double#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call isTrue# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.ltChar_curry_xxx $Builtin.char#_xxx $Builtin.char#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Char# Char#))
               $Builtin.char#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Char# Char#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Char# Char#))
                     $Builtin.char#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Char# Char#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call ltChar# $Builtin.p_xxx)
                              (cast (-> (Char#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call isTrue# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.leString_curry_xxx $Builtin.string#_xxx $Builtin.string#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.String# String#))
               $Builtin.string#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.String# String#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.String# String#))
                     $Builtin.string#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.String# String#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call leString# $Builtin.p_xxx)
                              (cast (-> (String#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call isTrue# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.leInt64_curry_xxx $Builtin.int64#_xxx $Builtin.int64#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Int64# Int64#))
               $Builtin.int64#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Int64# Int64#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Int64# Int64#))
                     $Builtin.int64#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Int64# Int64#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call leInt64# $Builtin.p_xxx)
                              (cast (-> (Int64#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call isTrue# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.leInt32_curry_xxx $Builtin.int32#_xxx $Builtin.int32#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Int32# Int32#))
               $Builtin.int32#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Int32# Int32#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Int32# Int32#))
                     $Builtin.int32#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Int32# Int32#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call leInt32# $Builtin.p_xxx)
                              (cast (-> (Int32#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call isTrue# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.leFloat_curry_xxx $Builtin.float#_xxx $Builtin.float#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Float# Float#))
               $Builtin.float#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Float# Float#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Float# Float#))
                     $Builtin.float#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Float# Float#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call leFloat# $Builtin.p_xxx)
                              (cast (-> (Float#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call isTrue# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.leDouble_curry_xxx $Builtin.double#_xxx $Builtin.double#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Double# Double#))
               $Builtin.double#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Double# Double#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Double# Double#))
                     $Builtin.double#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Double# Double#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call leDouble# $Builtin.p_xxx)
                              (cast (-> (Double#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call isTrue# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.leChar_curry_xxx $Builtin.char#_xxx $Builtin.char#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Char# Char#))
               $Builtin.char#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Char# Char#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Char# Char#))
                     $Builtin.char#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Char# Char#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call leChar# $Builtin.p_xxx)
                              (cast (-> (Char#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call isTrue# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.leChar#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Char# Char#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_le_char $Builtin.x_xxx)
               (cast (-> (Char#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.leDouble#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Double# Double#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_le_double $Builtin.x_xxx)
               (cast (-> (Double#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.leFloat#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Float# Float#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_le_float $Builtin.x_xxx)
               (cast (-> (Float#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.leInt32#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Int32# Int32#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_le_int32_t $Builtin.x_xxx)
               (cast (-> (Int32#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.leInt64#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Int64# Int64#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_le_int64_t $Builtin.x_xxx)
               (cast (-> (Int64#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.leString#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (String# String#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_le_string $Builtin.x_xxx)
               (cast (-> (String#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.ltChar#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Char# Char#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_lt_char $Builtin.x_xxx)
               (cast (-> (Char#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.ltDouble#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Double# Double#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_lt_double $Builtin.x_xxx)
               (cast (-> (Double#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.ltFloat#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Float# Float#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_lt_float $Builtin.x_xxx)
               (cast (-> (Float#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.ltInt32#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Int32# Int32#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_lt_int32_t $Builtin.x_xxx)
               (cast (-> (Int32#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.ltInt64#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Int64# Int64#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_lt_int64_t $Builtin.x_xxx)
               (cast (-> (Int64#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.ltString#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (String# String#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_lt_string $Builtin.x_xxx)
               (cast (-> (String#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.mulDouble_curry_xxx $Builtin.double#_xxx $Builtin.double#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Double# Double#))
               $Builtin.double#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Double# Double#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Double# Double#))
                     $Builtin.double#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Double# Double#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call mulDouble# $Builtin.p_xxx)
                              (cast (-> (Double#) Double#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Double# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call Double# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.mulDouble#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Double# Double#) Double#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_mul_double $Builtin.x_xxx)
               (cast (-> (Double#) Double#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Double# $Builtin.d_xxx))))
      (define
         ($Builtin.mulFloat_curry_xxx $Builtin.float#_xxx $Builtin.float#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Float# Float#))
               $Builtin.float#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Float# Float#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Float# Float#))
                     $Builtin.float#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Float# Float#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call mulFloat# $Builtin.p_xxx)
                              (cast (-> (Float#) Float#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Float# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call Float# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.mulFloat#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Float# Float#) Float#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_mul_float $Builtin.x_xxx)
               (cast (-> (Float#) Float#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Float# $Builtin.d_xxx))))
      (define
         ($Builtin.mulInt32_curry_xxx $Builtin.int32#_xxx $Builtin.int32#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Int32# Int32#))
               $Builtin.int32#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Int32# Int32#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Int32# Int32#))
                     $Builtin.int32#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Int32# Int32#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call mulInt32# $Builtin.p_xxx)
                              (cast (-> (Int32#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call Int32# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.mulInt32#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Int32# Int32#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_mul_int32_t $Builtin.x_xxx)
               (cast (-> (Int32#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.mulInt64_curry_xxx $Builtin.int64#_xxx $Builtin.int64#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Int64# Int64#))
               $Builtin.int64#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Int64# Int64#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Int64# Int64#))
                     $Builtin.int64#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Int64# Int64#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call mulInt64# $Builtin.p_xxx)
                              (cast (-> (Int64#) Int64#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int64# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call Int64# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.mulInt64#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Int64# Int64#) Int64#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_mul_int64_t $Builtin.x_xxx)
               (cast (-> (Int64#) Int64#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int64# $Builtin.d_xxx))))
      (define
         ($Builtin.neChar#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Char# Char#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_ne_char $Builtin.x_xxx)
               (cast (-> (Char#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.neDouble#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Double# Double#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_ne_double $Builtin.x_xxx)
               (cast (-> (Double#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.neFloat#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Float# Float#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_ne_float $Builtin.x_xxx)
               (cast (-> (Float#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.neInt32#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Int32# Int32#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_ne_int32_t $Builtin.x_xxx)
               (cast (-> (Int32#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.neInt64#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Int64# Int64#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_ne_int64_t $Builtin.x_xxx)
               (cast (-> (Int64#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.neString#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (String# String#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_ne_string $Builtin.x_xxx)
               (cast (-> (String#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.subDouble_curry_xxx $Builtin.double#_xxx $Builtin.double#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Double# Double#))
               $Builtin.double#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Double# Double#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Double# Double#))
                     $Builtin.double#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Double# Double#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call subDouble# $Builtin.p_xxx)
                              (cast (-> (Double#) Double#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Double# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call Double# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.subDouble#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Double# Double#) Double#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_sub_double $Builtin.x_xxx)
               (cast (-> (Double#) Double#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Double# $Builtin.d_xxx))))
      (define
         ($Builtin.subFloat_curry_xxx $Builtin.float#_xxx $Builtin.float#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Float# Float#))
               $Builtin.float#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Float# Float#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Float# Float#))
                     $Builtin.float#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Float# Float#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call subFloat# $Builtin.p_xxx)
                              (cast (-> (Float#) Float#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Float# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call Float# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.subFloat#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Float# Float#) Float#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_sub_float $Builtin.x_xxx)
               (cast (-> (Float#) Float#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Float# $Builtin.d_xxx))))
      (define
         ($Builtin.subInt32_curry_xxx $Builtin.int32#_xxx $Builtin.int32#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Int32# Int32#))
               $Builtin.int32#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Int32# Int32#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Int32# Int32#))
                     $Builtin.int32#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Int32# Int32#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call subInt32# $Builtin.p_xxx)
                              (cast (-> (Int32#) Int32#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int32# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call Int32# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.subInt32#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Int32# Int32#) Int32#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_sub_int32_t $Builtin.x_xxx)
               (cast (-> (Int32#) Int32#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int32# $Builtin.d_xxx))))
      (define
         ($Builtin.subInt64_curry_xxx $Builtin.int64#_xxx $Builtin.int64#_xxx)
         (-> (Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Int64# Int64#))
               $Builtin.int64#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Int64# Int64#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Int64# Int64#))
                     $Builtin.int64#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Int64# Int64#)
                     ($Builtin.p_xxx)
                     (=
                        $Builtin.d_xxx
                        (=
                           $Builtin.d_xxx
                           (=
                              $Builtin.d_xxx
                              (call subInt64# $Builtin.p_xxx)
                              (cast (-> (Int64#) Int64#) $Builtin.d_xxx))
                           (=
                              $Builtin.d_xxx
                              (call $Builtin.d_xxx $Builtin.p_xxx)
                              (cast Int64# $Builtin.d_xxx)))
                        (=
                           $Builtin.d_xxx
                           (call Int64# $Builtin.d_xxx)
                           (cast Any# $Builtin.d_xxx))))))))
      (define
         ($Builtin.subInt64#_curry_xxx $Builtin.x_xxx $Builtin.y_xxx)
         (-> (Int64# Int64#) Int64#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (call malgo_sub_int64_t $Builtin.x_xxx)
               (cast (-> (Int64#) Int64#) $Builtin.d_xxx))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.y_xxx)
               (cast Int64# $Builtin.d_xxx))))
      (define
         ($Builtin.substring_curry_xxx
            $Builtin.string#_xxx
            $Builtin.int64#_xxx
            $Builtin.int64#_xxx)
         (-> (Any# Any# Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.String# String#))
               $Builtin.string#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.String# String#)
               ($Builtin.p_xxx)
               (match
                  (cast
                     (sum (con runtime/malgo/Builtin.mlg.Int64# Int64#))
                     $Builtin.int64#_xxx)
                  (unpack
                     (con runtime/malgo/Builtin.mlg.Int64# Int64#)
                     ($Builtin.p_xxx)
                     (match
                        (cast
                           (sum (con runtime/malgo/Builtin.mlg.Int64# Int64#))
                           $Builtin.int64#_xxx)
                        (unpack
                           (con runtime/malgo/Builtin.mlg.Int64# Int64#)
                           ($Builtin.p_xxx)
                           (=
                              $Builtin.d_xxx
                              (=
                                 $Builtin.d_xxx
                                 (=
                                    $Builtin.d_xxx
                                    (=
                                       $Builtin.d_xxx
                                       (call substring# $Builtin.p_xxx)
                                       (cast
                                          (-> (Int64#) (-> (Int64#) String#))
                                          $Builtin.d_xxx))
                                    (=
                                       $Builtin.d_xxx
                                       (call $Builtin.d_xxx $Builtin.p_xxx)
                                       (cast (-> (Int64#) String#) $Builtin.d_xxx)))
                                 (=
                                    $Builtin.d_xxx
                                    (call $Builtin.d_xxx $Builtin.p_xxx)
                                    (cast String# $Builtin.d_xxx)))
                              (=
                                 $Builtin.d_xxx
                                 (call String# $Builtin.d_xxx)
                                 (cast Any# $Builtin.d_xxx))))))))))
      (define
         ($Builtin.substring#_curry_xxx
            $Builtin.str_xxx
            $Builtin.start_xxx
            $Builtin.end_xxx)
         (-> (String# Int64# Int64#) String#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (=
                  $Builtin.d_xxx
                  (call malgo_substring $Builtin.str_xxx)
                  (cast (-> (Int64#) (-> (Int64#) String#)) $Builtin.d_xxx))
               (=
                  $Builtin.d_xxx
                  (call $Builtin.d_xxx $Builtin.start_xxx)
                  (cast (-> (Int64#) String#) $Builtin.d_xxx)))
            (=
               $Builtin.d_xxx
               (call $Builtin.d_xxx $Builtin.end_xxx)
               (cast String# $Builtin.d_xxx))))
      (define
         ($Builtin.malgo_substring_curry_xxx
            $Builtin.p_xxx
            $Builtin.p_xxx
            $Builtin.p_xxx)
         (-> (String# Int64# Int64#) String#)
         (raw
            malgo_substring
            (-> (String# Int64# Int64#) String#)
            $Builtin.p_xxx
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_string_append_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (String# String#) String#)
         (raw
            malgo_string_append
            (-> (String# String#) String#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_string_cons_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Char# String#) String#)
         (raw
            malgo_string_cons
            (-> (Char# String#) String#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_string_at_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Int64# String#) Char#)
         (raw
            malgo_string_at
            (-> (Int64# String#) Char#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_ge_string_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (String# String#) Int32#)
         (raw
            malgo_ge_string
            (-> (String# String#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_le_string_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (String# String#) Int32#)
         (raw
            malgo_le_string
            (-> (String# String#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_gt_string_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (String# String#) Int32#)
         (raw
            malgo_gt_string
            (-> (String# String#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_lt_string_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (String# String#) Int32#)
         (raw
            malgo_lt_string
            (-> (String# String#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_ne_string_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (String# String#) Int32#)
         (raw
            malgo_ne_string
            (-> (String# String#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_eq_string_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (String# String#) Int32#)
         (raw
            malgo_eq_string
            (-> (String# String#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_ge_char_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Char# Char#) Int32#)
         (raw
            malgo_ge_char
            (-> (Char# Char#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_le_char_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Char# Char#) Int32#)
         (raw
            malgo_le_char
            (-> (Char# Char#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_gt_char_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Char# Char#) Int32#)
         (raw
            malgo_gt_char
            (-> (Char# Char#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_lt_char_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Char# Char#) Int32#)
         (raw
            malgo_lt_char
            (-> (Char# Char#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_ne_char_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Char# Char#) Int32#)
         (raw
            malgo_ne_char
            (-> (Char# Char#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_eq_char_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Char# Char#) Int32#)
         (raw
            malgo_eq_char
            (-> (Char# Char#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_ge_double_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Double# Double#) Int32#)
         (raw
            malgo_ge_double
            (-> (Double# Double#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_le_double_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Double# Double#) Int32#)
         (raw
            malgo_le_double
            (-> (Double# Double#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_gt_double_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Double# Double#) Int32#)
         (raw
            malgo_gt_double
            (-> (Double# Double#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_lt_double_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Double# Double#) Int32#)
         (raw
            malgo_lt_double
            (-> (Double# Double#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_ne_double_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Double# Double#) Int32#)
         (raw
            malgo_ne_double
            (-> (Double# Double#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_eq_double_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Double# Double#) Int32#)
         (raw
            malgo_eq_double
            (-> (Double# Double#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_ge_float_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Float# Float#) Int32#)
         (raw
            malgo_ge_float
            (-> (Float# Float#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_le_float_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Float# Float#) Int32#)
         (raw
            malgo_le_float
            (-> (Float# Float#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_gt_float_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Float# Float#) Int32#)
         (raw
            malgo_gt_float
            (-> (Float# Float#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_lt_float_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Float# Float#) Int32#)
         (raw
            malgo_lt_float
            (-> (Float# Float#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_ne_float_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Float# Float#) Int32#)
         (raw
            malgo_ne_float
            (-> (Float# Float#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_eq_float_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Float# Float#) Int32#)
         (raw
            malgo_eq_float
            (-> (Float# Float#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_ge_int64_t_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Int64# Int64#) Int32#)
         (raw
            malgo_ge_int64_t
            (-> (Int64# Int64#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_le_int64_t_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Int64# Int64#) Int32#)
         (raw
            malgo_le_int64_t
            (-> (Int64# Int64#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_gt_int64_t_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Int64# Int64#) Int32#)
         (raw
            malgo_gt_int64_t
            (-> (Int64# Int64#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_lt_int64_t_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Int64# Int64#) Int32#)
         (raw
            malgo_lt_int64_t
            (-> (Int64# Int64#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_ne_int64_t_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Int64# Int64#) Int32#)
         (raw
            malgo_ne_int64_t
            (-> (Int64# Int64#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_eq_int64_t_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Int64# Int64#) Int32#)
         (raw
            malgo_eq_int64_t
            (-> (Int64# Int64#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_ge_int32_t_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Int32# Int32#) Int32#)
         (raw
            malgo_ge_int32_t
            (-> (Int32# Int32#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_le_int32_t_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Int32# Int32#) Int32#)
         (raw
            malgo_le_int32_t
            (-> (Int32# Int32#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_gt_int32_t_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Int32# Int32#) Int32#)
         (raw
            malgo_gt_int32_t
            (-> (Int32# Int32#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_lt_int32_t_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Int32# Int32#) Int32#)
         (raw
            malgo_lt_int32_t
            (-> (Int32# Int32#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_ne_int32_t_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Int32# Int32#) Int32#)
         (raw
            malgo_ne_int32_t
            (-> (Int32# Int32#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_eq_int32_t_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Int32# Int32#) Int32#)
         (raw
            malgo_eq_int32_t
            (-> (Int32# Int32#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_div_double_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Double# Double#) Double#)
         (raw
            malgo_div_double
            (-> (Double# Double#) Double#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_mul_double_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Double# Double#) Double#)
         (raw
            malgo_mul_double
            (-> (Double# Double#) Double#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_sub_double_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Double# Double#) Double#)
         (raw
            malgo_sub_double
            (-> (Double# Double#) Double#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_add_double_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Double# Double#) Double#)
         (raw
            malgo_add_double
            (-> (Double# Double#) Double#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_div_float_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Float# Float#) Float#)
         (raw
            malgo_div_float
            (-> (Float# Float#) Float#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_mul_float_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Float# Float#) Float#)
         (raw
            malgo_mul_float
            (-> (Float# Float#) Float#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_sub_float_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Float# Float#) Float#)
         (raw
            malgo_sub_float
            (-> (Float# Float#) Float#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_add_float_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Float# Float#) Float#)
         (raw
            malgo_add_float
            (-> (Float# Float#) Float#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_div_int64_t_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Int64# Int64#) Int64#)
         (raw
            malgo_div_int64_t
            (-> (Int64# Int64#) Int64#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_mul_int64_t_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Int64# Int64#) Int64#)
         (raw
            malgo_mul_int64_t
            (-> (Int64# Int64#) Int64#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_sub_int64_t_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Int64# Int64#) Int64#)
         (raw
            malgo_sub_int64_t
            (-> (Int64# Int64#) Int64#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_add_int64_t_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Int64# Int64#) Int64#)
         (raw
            malgo_add_int64_t
            (-> (Int64# Int64#) Int64#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_div_int32_t_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Int32# Int32#) Int32#)
         (raw
            malgo_div_int32_t
            (-> (Int32# Int32#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_mul_int32_t_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Int32# Int32#) Int32#)
         (raw
            malgo_mul_int32_t
            (-> (Int32# Int32#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_sub_int32_t_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Int32# Int32#) Int32#)
         (raw
            malgo_sub_int32_t
            (-> (Int32# Int32#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         ($Builtin.malgo_add_int32_t_curry_xxx $Builtin.p_xxx $Builtin.p_xxx)
         (-> (Int32# Int32#) Int32#)
         (raw
            malgo_add_int32_t
            (-> (Int32# Int32#) Int32#)
            $Builtin.p_xxx
            $Builtin.p_xxx))
      (define
         (Int32# $Builtin.p_xxx)
         (-> (Int32#) Any#)
         (let
            (($Builtin.let_xxx
                (sum (con runtime/malgo/Builtin.mlg.Int32# Int32#))
                (pack
                   (sum (con runtime/malgo/Builtin.mlg.Int32# Int32#))
                   (con runtime/malgo/Builtin.mlg.Int32# Int32#)
                   $Builtin.p_xxx)))
            (cast Any# $Builtin.let_xxx)))
      (define
         (Int64# $Builtin.p_xxx)
         (-> (Int64#) Any#)
         (let
            (($Builtin.let_xxx
                (sum (con runtime/malgo/Builtin.mlg.Int64# Int64#))
                (pack
                   (sum (con runtime/malgo/Builtin.mlg.Int64# Int64#))
                   (con runtime/malgo/Builtin.mlg.Int64# Int64#)
                   $Builtin.p_xxx)))
            (cast Any# $Builtin.let_xxx)))
      (define
         (Float# $Builtin.p_xxx)
         (-> (Float#) Any#)
         (let
            (($Builtin.let_xxx
                (sum (con runtime/malgo/Builtin.mlg.Float# Float#))
                (pack
                   (sum (con runtime/malgo/Builtin.mlg.Float# Float#))
                   (con runtime/malgo/Builtin.mlg.Float# Float#)
                   $Builtin.p_xxx)))
            (cast Any# $Builtin.let_xxx)))
      (define
         (Double# $Builtin.p_xxx)
         (-> (Double#) Any#)
         (let
            (($Builtin.let_xxx
                (sum (con runtime/malgo/Builtin.mlg.Double# Double#))
                (pack
                   (sum (con runtime/malgo/Builtin.mlg.Double# Double#))
                   (con runtime/malgo/Builtin.mlg.Double# Double#)
                   $Builtin.p_xxx)))
            (cast Any# $Builtin.let_xxx)))
      (define
         (Char# $Builtin.p_xxx)
         (-> (Char#) Any#)
         (let
            (($Builtin.let_xxx
                (sum (con runtime/malgo/Builtin.mlg.Char# Char#))
                (pack
                   (sum (con runtime/malgo/Builtin.mlg.Char# Char#))
                   (con runtime/malgo/Builtin.mlg.Char# Char#)
                   $Builtin.p_xxx)))
            (cast Any# $Builtin.let_xxx)))
      (define
         (String# $Builtin.p_xxx)
         (-> (String#) Any#)
         (let
            (($Builtin.let_xxx
                (sum (con runtime/malgo/Builtin.mlg.String# String#))
                (pack
                   (sum (con runtime/malgo/Builtin.mlg.String# String#))
                   (con runtime/malgo/Builtin.mlg.String# String#)
                   $Builtin.p_xxx)))
            (cast Any# $Builtin.let_xxx)))
      (define
         (False)
         (-> () Any#)
         (let
            (($Builtin.let_xxx
                (sum
                   (con runtime/malgo/Builtin.mlg.False)
                   (con runtime/malgo/Builtin.mlg.True))
                (pack
                   (sum
                      (con runtime/malgo/Builtin.mlg.False)
                      (con runtime/malgo/Builtin.mlg.True))
                   (con runtime/malgo/Builtin.mlg.False))))
            (cast Any# $Builtin.let_xxx)))
      (define
         (True)
         (-> () Any#)
         (let
            (($Builtin.let_xxx
                (sum
                   (con runtime/malgo/Builtin.mlg.False)
                   (con runtime/malgo/Builtin.mlg.True))
                (pack
                   (sum
                      (con runtime/malgo/Builtin.mlg.False)
                      (con runtime/malgo/Builtin.mlg.True))
                   (con runtime/malgo/Builtin.mlg.True))))
            (cast Any# $Builtin.let_xxx)))
      (define
         (malgo_panic $Builtin.p_xxx)
         (-> (String#) Any#)
         (raw malgo_panic (-> (String#) Any#) $Builtin.p_xxx))
      (define
         (malgo_unsafe_cast $Builtin.p_xxx)
         (-> (Any#) Any#)
         (raw malgo_unsafe_cast (-> (Any#) Any#) $Builtin.p_xxx))
      (define
         (malgo_add_int32_t $Builtin.p_xxx)
         (-> (Int32#) (-> (Int32#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Int32#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_add_int32_t_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_sub_int32_t $Builtin.p_xxx)
         (-> (Int32#) (-> (Int32#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Int32#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_sub_int32_t_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_mul_int32_t $Builtin.p_xxx)
         (-> (Int32#) (-> (Int32#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Int32#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_mul_int32_t_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_div_int32_t $Builtin.p_xxx)
         (-> (Int32#) (-> (Int32#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Int32#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_div_int32_t_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_add_int64_t $Builtin.p_xxx)
         (-> (Int64#) (-> (Int64#) Int64#))
         (let
            (($Builtin.let_xxx
                (-> (Int64#) Int64#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_add_int64_t_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_sub_int64_t $Builtin.p_xxx)
         (-> (Int64#) (-> (Int64#) Int64#))
         (let
            (($Builtin.let_xxx
                (-> (Int64#) Int64#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_sub_int64_t_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_mul_int64_t $Builtin.p_xxx)
         (-> (Int64#) (-> (Int64#) Int64#))
         (let
            (($Builtin.let_xxx
                (-> (Int64#) Int64#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_mul_int64_t_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_div_int64_t $Builtin.p_xxx)
         (-> (Int64#) (-> (Int64#) Int64#))
         (let
            (($Builtin.let_xxx
                (-> (Int64#) Int64#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_div_int64_t_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_add_float $Builtin.p_xxx)
         (-> (Float#) (-> (Float#) Float#))
         (let
            (($Builtin.let_xxx
                (-> (Float#) Float#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_add_float_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_sub_float $Builtin.p_xxx)
         (-> (Float#) (-> (Float#) Float#))
         (let
            (($Builtin.let_xxx
                (-> (Float#) Float#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_sub_float_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_mul_float $Builtin.p_xxx)
         (-> (Float#) (-> (Float#) Float#))
         (let
            (($Builtin.let_xxx
                (-> (Float#) Float#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_mul_float_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_div_float $Builtin.p_xxx)
         (-> (Float#) (-> (Float#) Float#))
         (let
            (($Builtin.let_xxx
                (-> (Float#) Float#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_div_float_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_add_double $Builtin.p_xxx)
         (-> (Double#) (-> (Double#) Double#))
         (let
            (($Builtin.let_xxx
                (-> (Double#) Double#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_add_double_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_sub_double $Builtin.p_xxx)
         (-> (Double#) (-> (Double#) Double#))
         (let
            (($Builtin.let_xxx
                (-> (Double#) Double#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_sub_double_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_mul_double $Builtin.p_xxx)
         (-> (Double#) (-> (Double#) Double#))
         (let
            (($Builtin.let_xxx
                (-> (Double#) Double#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_mul_double_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_div_double $Builtin.p_xxx)
         (-> (Double#) (-> (Double#) Double#))
         (let
            (($Builtin.let_xxx
                (-> (Double#) Double#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_div_double_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (sqrtf $Builtin.p_xxx)
         (-> (Float#) Float#)
         (raw sqrtf (-> (Float#) Float#) $Builtin.p_xxx))
      (define
         (sqrt $Builtin.p_xxx)
         (-> (Double#) Double#)
         (raw sqrt (-> (Double#) Double#) $Builtin.p_xxx))
      (define
         (malgo_eq_int32_t $Builtin.p_xxx)
         (-> (Int32#) (-> (Int32#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Int32#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_eq_int32_t_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_ne_int32_t $Builtin.p_xxx)
         (-> (Int32#) (-> (Int32#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Int32#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_ne_int32_t_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_lt_int32_t $Builtin.p_xxx)
         (-> (Int32#) (-> (Int32#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Int32#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_lt_int32_t_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_gt_int32_t $Builtin.p_xxx)
         (-> (Int32#) (-> (Int32#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Int32#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_gt_int32_t_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_le_int32_t $Builtin.p_xxx)
         (-> (Int32#) (-> (Int32#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Int32#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_le_int32_t_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_ge_int32_t $Builtin.p_xxx)
         (-> (Int32#) (-> (Int32#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Int32#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_ge_int32_t_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_eq_int64_t $Builtin.p_xxx)
         (-> (Int64#) (-> (Int64#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Int64#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_eq_int64_t_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_ne_int64_t $Builtin.p_xxx)
         (-> (Int64#) (-> (Int64#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Int64#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_ne_int64_t_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_lt_int64_t $Builtin.p_xxx)
         (-> (Int64#) (-> (Int64#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Int64#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_lt_int64_t_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_gt_int64_t $Builtin.p_xxx)
         (-> (Int64#) (-> (Int64#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Int64#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_gt_int64_t_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_le_int64_t $Builtin.p_xxx)
         (-> (Int64#) (-> (Int64#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Int64#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_le_int64_t_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_ge_int64_t $Builtin.p_xxx)
         (-> (Int64#) (-> (Int64#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Int64#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_ge_int64_t_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_eq_float $Builtin.p_xxx)
         (-> (Float#) (-> (Float#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Float#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_eq_float_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_ne_float $Builtin.p_xxx)
         (-> (Float#) (-> (Float#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Float#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_ne_float_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_lt_float $Builtin.p_xxx)
         (-> (Float#) (-> (Float#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Float#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_lt_float_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_gt_float $Builtin.p_xxx)
         (-> (Float#) (-> (Float#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Float#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_gt_float_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_le_float $Builtin.p_xxx)
         (-> (Float#) (-> (Float#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Float#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_le_float_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_ge_float $Builtin.p_xxx)
         (-> (Float#) (-> (Float#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Float#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_ge_float_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_eq_double $Builtin.p_xxx)
         (-> (Double#) (-> (Double#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Double#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_eq_double_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_ne_double $Builtin.p_xxx)
         (-> (Double#) (-> (Double#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Double#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_ne_double_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_lt_double $Builtin.p_xxx)
         (-> (Double#) (-> (Double#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Double#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_lt_double_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_gt_double $Builtin.p_xxx)
         (-> (Double#) (-> (Double#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Double#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_gt_double_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_le_double $Builtin.p_xxx)
         (-> (Double#) (-> (Double#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Double#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_le_double_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_ge_double $Builtin.p_xxx)
         (-> (Double#) (-> (Double#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Double#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_ge_double_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_eq_char $Builtin.p_xxx)
         (-> (Char#) (-> (Char#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Char#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_eq_char_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_ne_char $Builtin.p_xxx)
         (-> (Char#) (-> (Char#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Char#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_ne_char_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_lt_char $Builtin.p_xxx)
         (-> (Char#) (-> (Char#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Char#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_lt_char_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_gt_char $Builtin.p_xxx)
         (-> (Char#) (-> (Char#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Char#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_gt_char_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_le_char $Builtin.p_xxx)
         (-> (Char#) (-> (Char#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Char#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_le_char_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_ge_char $Builtin.p_xxx)
         (-> (Char#) (-> (Char#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Char#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_ge_char_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_eq_string $Builtin.p_xxx)
         (-> (String#) (-> (String#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (String#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_eq_string_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_ne_string $Builtin.p_xxx)
         (-> (String#) (-> (String#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (String#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_ne_string_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_lt_string $Builtin.p_xxx)
         (-> (String#) (-> (String#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (String#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_lt_string_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_gt_string $Builtin.p_xxx)
         (-> (String#) (-> (String#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (String#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_gt_string_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_le_string $Builtin.p_xxx)
         (-> (String#) (-> (String#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (String#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_le_string_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_ge_string $Builtin.p_xxx)
         (-> (String#) (-> (String#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (String#) Int32#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_ge_string_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_char_ord $Builtin.p_xxx)
         (-> (Char#) Int32#)
         (raw malgo_char_ord (-> (Char#) Int32#) $Builtin.p_xxx))
      (define
         (malgo_is_digit $Builtin.p_xxx)
         (-> (Char#) Int32#)
         (raw malgo_is_digit (-> (Char#) Int32#) $Builtin.p_xxx))
      (define
         (malgo_is_lower $Builtin.p_xxx)
         (-> (Char#) Int32#)
         (raw malgo_is_lower (-> (Char#) Int32#) $Builtin.p_xxx))
      (define
         (malgo_is_upper $Builtin.p_xxx)
         (-> (Char#) Int32#)
         (raw malgo_is_upper (-> (Char#) Int32#) $Builtin.p_xxx))
      (define
         (malgo_is_alphanum $Builtin.p_xxx)
         (-> (Char#) Int32#)
         (raw malgo_is_alphanum (-> (Char#) Int32#) $Builtin.p_xxx))
      (define
         (malgo_string_length $Builtin.p_xxx)
         (-> (String#) Int64#)
         (raw malgo_string_length (-> (String#) Int64#) $Builtin.p_xxx))
      (define
         (malgo_string_at $Builtin.p_xxx)
         (-> (Int64#) (-> (String#) Char#))
         (let
            (($Builtin.let_xxx
                (-> (String#) Char#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_string_at_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_string_cons $Builtin.p_xxx)
         (-> (Char#) (-> (String#) String#))
         (let
            (($Builtin.let_xxx
                (-> (String#) String#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_string_cons_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_string_append $Builtin.p_xxx)
         (-> (String#) (-> (String#) String#))
         (let
            (($Builtin.let_xxx
                (-> (String#) String#)
                (fun
                   ($Builtin.p_xxx)
                   (direct
                      $Builtin.malgo_string_append_curry_xxx
                      $Builtin.p_xxx
                      $Builtin.p_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_substring $Builtin.p_xxx)
         (-> (String#) (-> (Int64#) (-> (Int64#) String#)))
         (let
            (($Builtin.let_xxx
                (-> (Int64#) (-> (Int64#) String#))
                (fun
                   ($Builtin.p_xxx)
                   (let
                      (($Builtin.let_xxx
                          (-> (Int64#) String#)
                          (fun
                             ($Builtin.p_xxx)
                             (direct
                                $Builtin.malgo_substring_curry_xxx
                                $Builtin.p_xxx
                                $Builtin.p_xxx
                                $Builtin.p_xxx))))
                      $Builtin.let_xxx))))
            $Builtin.let_xxx))
      (define
         (malgo_int32_t_to_string $Builtin.p_xxx)
         (-> (Int32#) String#)
         (raw malgo_int32_t_to_string (-> (Int32#) String#) $Builtin.p_xxx))
      (define
         (malgo_int64_t_to_string $Builtin.p_xxx)
         (-> (Int64#) String#)
         (raw malgo_int64_t_to_string (-> (Int64#) String#) $Builtin.p_xxx))
      (define
         (malgo_float_to_string $Builtin.p_xxx)
         (-> (Float#) String#)
         (raw malgo_float_to_string (-> (Float#) String#) $Builtin.p_xxx))
      (define
         (malgo_double_to_string $Builtin.p_xxx)
         (-> (Double#) String#)
         (raw malgo_double_to_string (-> (Double#) String#) $Builtin.p_xxx))
      (define
         (malgo_char_to_string $Builtin.p_xxx)
         (-> (Char#) String#)
         (raw malgo_char_to_string (-> (Char#) String#) $Builtin.p_xxx))
      (define
         (malgo_exit_failure $Builtin.p_xxx)
         (-> ((sum (con Tuple#))) Any#)
         (raw malgo_exit_failure (-> ((sum (con Tuple#))) Any#) $Builtin.p_xxx))
      (define
         (malgo_newline $Builtin.p_xxx)
         (-> ((sum (con Tuple#))) (sum (con Tuple#)))
         (raw
            malgo_newline
            (-> ((sum (con Tuple#))) (sum (con Tuple#)))
            $Builtin.p_xxx))
      (define
         (malgo_print_char $Builtin.p_xxx)
         (-> (Char#) (sum (con Tuple#)))
         (raw malgo_print_char (-> (Char#) (sum (con Tuple#))) $Builtin.p_xxx))
      (define
         (malgo_print_string $Builtin.p_xxx)
         (-> (String#) (sum (con Tuple#)))
         (raw malgo_print_string (-> (String#) (sum (con Tuple#))) $Builtin.p_xxx))
      (define
         (malgo_flush $Builtin.p_xxx)
         (-> ((sum (con Tuple#))) (sum (con Tuple#)))
         (raw
            malgo_flush
            (-> ((sum (con Tuple#))) (sum (con Tuple#)))
            $Builtin.p_xxx))
      (define
         (malgo_get_char $Builtin.p_xxx)
         (-> ((sum (con Tuple#))) Char#)
         (raw malgo_get_char (-> ((sum (con Tuple#))) Char#) $Builtin.p_xxx))
      (define
         (malgo_get_contents $Builtin.p_xxx)
         (-> ((sum (con Tuple#))) String#)
         (raw malgo_get_contents (-> ((sum (con Tuple#))) String#) $Builtin.p_xxx))
      (define
         (toStringInt64# $Builtin.x_xxx)
         (-> (Int64#) String#)
         (=
            $Builtin.d_xxx
            (call malgo_int64_t_to_string $Builtin.x_xxx)
            (cast String# $Builtin.d_xxx)))
      (define
         (toStringInt64 $Builtin.int64#_xxx)
         (-> (Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Int64# Int64#))
               $Builtin.int64#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Int64# Int64#)
               ($Builtin.p_xxx)
               (=
                  $Builtin.d_xxx
                  (=
                     $Builtin.d_xxx
                     (call toStringInt64# $Builtin.p_xxx)
                     (cast String# $Builtin.d_xxx))
                  (=
                     $Builtin.d_xxx
                     (call String# $Builtin.d_xxx)
                     (cast Any# $Builtin.d_xxx))))))
      (define
         (toStringInt32# $Builtin.x_xxx)
         (-> (Int32#) String#)
         (=
            $Builtin.d_xxx
            (call malgo_int32_t_to_string $Builtin.x_xxx)
            (cast String# $Builtin.d_xxx)))
      (define
         (toStringInt32 $Builtin.int32#_xxx)
         (-> (Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Int32# Int32#))
               $Builtin.int32#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Int32# Int32#)
               ($Builtin.p_xxx)
               (=
                  $Builtin.d_xxx
                  (=
                     $Builtin.d_xxx
                     (call toStringInt32# $Builtin.p_xxx)
                     (cast String# $Builtin.d_xxx))
                  (=
                     $Builtin.d_xxx
                     (call String# $Builtin.d_xxx)
                     (cast Any# $Builtin.d_xxx))))))
      (define
         (toStringFloat# $Builtin.x_xxx)
         (-> (Float#) String#)
         (=
            $Builtin.d_xxx
            (call malgo_float_to_string $Builtin.x_xxx)
            (cast String# $Builtin.d_xxx)))
      (define
         (toStringFloat $Builtin.float#_xxx)
         (-> (Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Float# Float#))
               $Builtin.float#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Float# Float#)
               ($Builtin.p_xxx)
               (=
                  $Builtin.d_xxx
                  (=
                     $Builtin.d_xxx
                     (call toStringFloat# $Builtin.p_xxx)
                     (cast String# $Builtin.d_xxx))
                  (=
                     $Builtin.d_xxx
                     (call String# $Builtin.d_xxx)
                     (cast Any# $Builtin.d_xxx))))))
      (define
         (toStringDouble# $Builtin.x_xxx)
         (-> (Double#) String#)
         (=
            $Builtin.d_xxx
            (call malgo_double_to_string $Builtin.x_xxx)
            (cast String# $Builtin.d_xxx)))
      (define
         (toStringDouble $Builtin.double#_xxx)
         (-> (Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Double# Double#))
               $Builtin.double#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Double# Double#)
               ($Builtin.p_xxx)
               (=
                  $Builtin.d_xxx
                  (=
                     $Builtin.d_xxx
                     (call toStringDouble# $Builtin.p_xxx)
                     (cast String# $Builtin.d_xxx))
                  (=
                     $Builtin.d_xxx
                     (call String# $Builtin.d_xxx)
                     (cast Any# $Builtin.d_xxx))))))
      (define
         (toStringChar# $Builtin.x_xxx)
         (-> (Char#) String#)
         (=
            $Builtin.d_xxx
            (call malgo_char_to_string $Builtin.x_xxx)
            (cast String# $Builtin.d_xxx)))
      (define
         (toStringChar $Builtin.char#_xxx)
         (-> (Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Char# Char#))
               $Builtin.char#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Char# Char#)
               ($Builtin.p_xxx)
               (=
                  $Builtin.d_xxx
                  (=
                     $Builtin.d_xxx
                     (call toStringChar# $Builtin.p_xxx)
                     (cast String# $Builtin.d_xxx))
                  (=
                     $Builtin.d_xxx
                     (call String# $Builtin.d_xxx)
                     (cast Any# $Builtin.d_xxx))))))
      (define
         (substring# $Builtin.str_xxx)
         (-> (String#) (-> (Int64#) (-> (Int64#) String#)))
         (let
            (($Builtin.let_xxx
                (-> (Int64#) (-> (Int64#) String#))
                (fun
                   ($Builtin.start_xxx)
                   (let
                      (($Builtin.let_xxx
                          (-> (Int64#) String#)
                          (fun
                             ($Builtin.end_xxx)
                             (direct
                                $Builtin.substring#_curry_xxx
                                $Builtin.str_xxx
                                $Builtin.start_xxx
                                $Builtin.end_xxx))))
                      $Builtin.let_xxx))))
            $Builtin.let_xxx))
      (define
         (substring $Builtin.string#_xxx)
         (-> (Any#) (-> (Any#) (-> (Any#) Any#)))
         (let
            (($Builtin.let_xxx
                (-> (Any#) (-> (Any#) Any#))
                (fun
                   ($Builtin.int64#_xxx)
                   (let
                      (($Builtin.let_xxx
                          (-> (Any#) Any#)
                          (fun
                             ($Builtin.int64#_xxx)
                             (direct
                                $Builtin.substring_curry_xxx
                                $Builtin.string#_xxx
                                $Builtin.int64#_xxx
                                $Builtin.int64#_xxx))))
                      $Builtin.let_xxx))))
            $Builtin.let_xxx))
      (define
         (subInt64# $Builtin.x_xxx)
         (-> (Int64#) (-> (Int64#) Int64#))
         (let
            (($Builtin.let_xxx
                (-> (Int64#) Int64#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.subInt64#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (subInt64 $Builtin.int64#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.int64#_xxx)
                   (direct
                      $Builtin.subInt64_curry_xxx
                      $Builtin.int64#_xxx
                      $Builtin.int64#_xxx))))
            $Builtin.let_xxx))
      (define
         (subInt32# $Builtin.x_xxx)
         (-> (Int32#) (-> (Int32#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Int32#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.subInt32#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (subInt32 $Builtin.int32#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.int32#_xxx)
                   (direct
                      $Builtin.subInt32_curry_xxx
                      $Builtin.int32#_xxx
                      $Builtin.int32#_xxx))))
            $Builtin.let_xxx))
      (define
         (subFloat# $Builtin.x_xxx)
         (-> (Float#) (-> (Float#) Float#))
         (let
            (($Builtin.let_xxx
                (-> (Float#) Float#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.subFloat#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (subFloat $Builtin.float#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.float#_xxx)
                   (direct
                      $Builtin.subFloat_curry_xxx
                      $Builtin.float#_xxx
                      $Builtin.float#_xxx))))
            $Builtin.let_xxx))
      (define
         (subDouble# $Builtin.x_xxx)
         (-> (Double#) (-> (Double#) Double#))
         (let
            (($Builtin.let_xxx
                (-> (Double#) Double#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.subDouble#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (subDouble $Builtin.double#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.double#_xxx)
                   (direct
                      $Builtin.subDouble_curry_xxx
                      $Builtin.double#_xxx
                      $Builtin.double#_xxx))))
            $Builtin.let_xxx))
      (define
         (string# $Builtin.x_xxx)
         (-> (String#) Any#)
         (=
            $Builtin.d_xxx
            (call String# $Builtin.x_xxx)
            (cast Any# $Builtin.d_xxx)))
      (define
         (sqrtFloat# $Builtin.x_xxx)
         (-> (Float#) Float#)
         (=
            $Builtin.d_xxx
            (call sqrtf $Builtin.x_xxx)
            (cast Float# $Builtin.d_xxx)))
      (define
         (sqrtFloat $Builtin.float#_xxx)
         (-> (Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Float# Float#))
               $Builtin.float#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Float# Float#)
               ($Builtin.p_xxx)
               (=
                  $Builtin.d_xxx
                  (=
                     $Builtin.d_xxx
                     (call sqrtFloat# $Builtin.p_xxx)
                     (cast Float# $Builtin.d_xxx))
                  (=
                     $Builtin.d_xxx
                     (call Float# $Builtin.d_xxx)
                     (cast Any# $Builtin.d_xxx))))))
      (define
         (sqrtDouble# $Builtin.x_xxx)
         (-> (Double#) Double#)
         (=
            $Builtin.d_xxx
            (call sqrt $Builtin.x_xxx)
            (cast Double# $Builtin.d_xxx)))
      (define
         (sqrtDouble $Builtin.double#_xxx)
         (-> (Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Double# Double#))
               $Builtin.double#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Double# Double#)
               ($Builtin.p_xxx)
               (=
                  $Builtin.d_xxx
                  (=
                     $Builtin.d_xxx
                     (call sqrtDouble# $Builtin.p_xxx)
                     (cast Double# $Builtin.d_xxx))
                  (=
                     $Builtin.d_xxx
                     (call Double# $Builtin.d_xxx)
                     (cast Any# $Builtin.d_xxx))))))
      (define
         (printString# $Builtin.x_xxx)
         (-> (String#) (sum (con Tuple#)))
         (=
            $Builtin.d_xxx
            (call malgo_print_string $Builtin.x_xxx)
            (cast (sum (con Tuple#)) $Builtin.d_xxx)))
      (define
         (printString $Builtin.string#_xxx)
         (-> (Any#) (sum (con Tuple#)))
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.String# String#))
               $Builtin.string#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.String# String#)
               ($Builtin.p_xxx)
               (=
                  $Builtin.d_xxx
                  (call printString# $Builtin.p_xxx)
                  (cast (sum (con Tuple#)) $Builtin.d_xxx)))))
      (define
         (printChar# $Builtin.x_xxx)
         (-> (Char#) (sum (con Tuple#)))
         (=
            $Builtin.d_xxx
            (call malgo_print_char $Builtin.x_xxx)
            (cast (sum (con Tuple#)) $Builtin.d_xxx)))
      (define
         (printChar $Builtin.char#_xxx)
         (-> (Any#) (sum (con Tuple#)))
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Char# Char#))
               $Builtin.char#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Char# Char#)
               ($Builtin.p_xxx)
               (=
                  $Builtin.d_xxx
                  (call printChar# $Builtin.p_xxx)
                  (cast (sum (con Tuple#)) $Builtin.d_xxx)))))
      (define
         (panic $Builtin.string#_xxx)
         (-> (Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.String# String#))
               $Builtin.string#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.String# String#)
               ($Builtin.p_xxx)
               (=
                  $Builtin.d_xxx
                  (call malgo_panic $Builtin.p_xxx)
                  (cast Any# $Builtin.d_xxx)))))
      (define
         (ordChar# $Builtin.x_xxx)
         (-> (Char#) Int32#)
         (=
            $Builtin.d_xxx
            (call malgo_char_ord $Builtin.x_xxx)
            (cast Int32# $Builtin.d_xxx)))
      (define
         (ordChar $Builtin.char#_xxx)
         (-> (Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Char# Char#))
               $Builtin.char#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Char# Char#)
               ($Builtin.p_xxx)
               (=
                  $Builtin.d_xxx
                  (=
                     $Builtin.d_xxx
                     (call ordChar# $Builtin.p_xxx)
                     (cast Int32# $Builtin.d_xxx))
                  (=
                     $Builtin.d_xxx
                     (call Int32# $Builtin.d_xxx)
                     (cast Any# $Builtin.d_xxx))))))
      (define
         (not $Builtin.true_xxx)
         (-> (Any#) Any#)
         (match
            (cast
               (sum
                  (con runtime/malgo/Builtin.mlg.False)
                  (con runtime/malgo/Builtin.mlg.True))
               $Builtin.true_xxx)
            (unpack (con runtime/malgo/Builtin.mlg.False) () (direct True))
            (unpack (con runtime/malgo/Builtin.mlg.True) () (direct False))))
      (define
         (newline $Builtin.__xxx)
         (-> (Any#) (sum (con Tuple#)))
         (=
            $Builtin.d_xxx
            (let
               (($Builtin.let_xxx
                   (sum (con Tuple#))
                   (pack (sum (con Tuple#)) (con Tuple#))))
               $Builtin.let_xxx)
            (=
               $Builtin.d_xxx
               (call malgo_newline $Builtin.d_xxx)
               (cast (sum (con Tuple#)) $Builtin.d_xxx))))
      (define
         (neString# $Builtin.x_xxx)
         (-> (String#) (-> (String#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (String#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.neString#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (neInt64# $Builtin.x_xxx)
         (-> (Int64#) (-> (Int64#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Int64#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.neInt64#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (neInt32# $Builtin.x_xxx)
         (-> (Int32#) (-> (Int32#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Int32#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.neInt32#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (neFloat# $Builtin.x_xxx)
         (-> (Float#) (-> (Float#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Float#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.neFloat#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (neDouble# $Builtin.x_xxx)
         (-> (Double#) (-> (Double#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Double#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.neDouble#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (neChar# $Builtin.x_xxx)
         (-> (Char#) (-> (Char#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Char#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.neChar#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (mulInt64# $Builtin.x_xxx)
         (-> (Int64#) (-> (Int64#) Int64#))
         (let
            (($Builtin.let_xxx
                (-> (Int64#) Int64#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.mulInt64#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (mulInt64 $Builtin.int64#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.int64#_xxx)
                   (direct
                      $Builtin.mulInt64_curry_xxx
                      $Builtin.int64#_xxx
                      $Builtin.int64#_xxx))))
            $Builtin.let_xxx))
      (define
         (mulInt32# $Builtin.x_xxx)
         (-> (Int32#) (-> (Int32#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Int32#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.mulInt32#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (mulInt32 $Builtin.int32#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.int32#_xxx)
                   (direct
                      $Builtin.mulInt32_curry_xxx
                      $Builtin.int32#_xxx
                      $Builtin.int32#_xxx))))
            $Builtin.let_xxx))
      (define
         (mulFloat# $Builtin.x_xxx)
         (-> (Float#) (-> (Float#) Float#))
         (let
            (($Builtin.let_xxx
                (-> (Float#) Float#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.mulFloat#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (mulFloat $Builtin.float#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.float#_xxx)
                   (direct
                      $Builtin.mulFloat_curry_xxx
                      $Builtin.float#_xxx
                      $Builtin.float#_xxx))))
            $Builtin.let_xxx))
      (define
         (mulDouble# $Builtin.x_xxx)
         (-> (Double#) (-> (Double#) Double#))
         (let
            (($Builtin.let_xxx
                (-> (Double#) Double#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.mulDouble#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (mulDouble $Builtin.double#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.double#_xxx)
                   (direct
                      $Builtin.mulDouble_curry_xxx
                      $Builtin.double#_xxx
                      $Builtin.double#_xxx))))
            $Builtin.let_xxx))
      (define
         (ltString# $Builtin.x_xxx)
         (-> (String#) (-> (String#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (String#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.ltString#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (ltInt64# $Builtin.x_xxx)
         (-> (Int64#) (-> (Int64#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Int64#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.ltInt64#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (ltInt32# $Builtin.x_xxx)
         (-> (Int32#) (-> (Int32#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Int32#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.ltInt32#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (ltFloat# $Builtin.x_xxx)
         (-> (Float#) (-> (Float#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Float#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.ltFloat#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (ltDouble# $Builtin.x_xxx)
         (-> (Double#) (-> (Double#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Double#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.ltDouble#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (ltChar# $Builtin.x_xxx)
         (-> (Char#) (-> (Char#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Char#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.ltChar#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (lengthString# $Builtin.x_xxx)
         (-> (String#) Int64#)
         (=
            $Builtin.d_xxx
            (call malgo_string_length $Builtin.x_xxx)
            (cast Int64# $Builtin.d_xxx)))
      (define
         (lengthString $Builtin.string#_xxx)
         (-> (Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.String# String#))
               $Builtin.string#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.String# String#)
               ($Builtin.p_xxx)
               (=
                  $Builtin.d_xxx
                  (=
                     $Builtin.d_xxx
                     (call lengthString# $Builtin.p_xxx)
                     (cast Int64# $Builtin.d_xxx))
                  (=
                     $Builtin.d_xxx
                     (call Int64# $Builtin.d_xxx)
                     (cast Any# $Builtin.d_xxx))))))
      (define
         (leString# $Builtin.x_xxx)
         (-> (String#) (-> (String#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (String#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.leString#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (leInt64# $Builtin.x_xxx)
         (-> (Int64#) (-> (Int64#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Int64#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.leInt64#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (leInt32# $Builtin.x_xxx)
         (-> (Int32#) (-> (Int32#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Int32#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.leInt32#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (leFloat# $Builtin.x_xxx)
         (-> (Float#) (-> (Float#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Float#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.leFloat#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (leDouble# $Builtin.x_xxx)
         (-> (Double#) (-> (Double#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Double#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.leDouble#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (leChar# $Builtin.x_xxx)
         (-> (Char#) (-> (Char#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Char#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.leChar#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (isUpper# $Builtin.x_xxx)
         (-> (Char#) Int32#)
         (=
            $Builtin.d_xxx
            (call malgo_is_upper $Builtin.x_xxx)
            (cast Int32# $Builtin.d_xxx)))
      (define
         (isTrue# $Builtin.unboxed_xxx)
         (-> (Int32#) Any#)
         (match
            $Builtin.unboxed_xxx
            (exact 1_i32 (direct True))
            (bind $Builtin.__xxx Int32# (direct False))))
      (define
         (isUpper $Builtin.char#_xxx)
         (-> (Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Char# Char#))
               $Builtin.char#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Char# Char#)
               ($Builtin.p_xxx)
               (=
                  $Builtin.d_xxx
                  (=
                     $Builtin.d_xxx
                     (call isUpper# $Builtin.p_xxx)
                     (cast Int32# $Builtin.d_xxx))
                  (=
                     $Builtin.d_xxx
                     (call isTrue# $Builtin.d_xxx)
                     (cast Any# $Builtin.d_xxx))))))
      (define
         (leChar $Builtin.char#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.char#_xxx)
                   (direct
                      $Builtin.leChar_curry_xxx
                      $Builtin.char#_xxx
                      $Builtin.char#_xxx))))
            $Builtin.let_xxx))
      (define
         (leDouble $Builtin.double#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.double#_xxx)
                   (direct
                      $Builtin.leDouble_curry_xxx
                      $Builtin.double#_xxx
                      $Builtin.double#_xxx))))
            $Builtin.let_xxx))
      (define
         (leFloat $Builtin.float#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.float#_xxx)
                   (direct
                      $Builtin.leFloat_curry_xxx
                      $Builtin.float#_xxx
                      $Builtin.float#_xxx))))
            $Builtin.let_xxx))
      (define
         (leInt32 $Builtin.int32#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.int32#_xxx)
                   (direct
                      $Builtin.leInt32_curry_xxx
                      $Builtin.int32#_xxx
                      $Builtin.int32#_xxx))))
            $Builtin.let_xxx))
      (define
         (leInt64 $Builtin.int64#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.int64#_xxx)
                   (direct
                      $Builtin.leInt64_curry_xxx
                      $Builtin.int64#_xxx
                      $Builtin.int64#_xxx))))
            $Builtin.let_xxx))
      (define
         (leString $Builtin.string#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.string#_xxx)
                   (direct
                      $Builtin.leString_curry_xxx
                      $Builtin.string#_xxx
                      $Builtin.string#_xxx))))
            $Builtin.let_xxx))
      (define
         (ltChar $Builtin.char#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.char#_xxx)
                   (direct
                      $Builtin.ltChar_curry_xxx
                      $Builtin.char#_xxx
                      $Builtin.char#_xxx))))
            $Builtin.let_xxx))
      (define
         (ltDouble $Builtin.double#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.double#_xxx)
                   (direct
                      $Builtin.ltDouble_curry_xxx
                      $Builtin.double#_xxx
                      $Builtin.double#_xxx))))
            $Builtin.let_xxx))
      (define
         (ltFloat $Builtin.float#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.float#_xxx)
                   (direct
                      $Builtin.ltFloat_curry_xxx
                      $Builtin.float#_xxx
                      $Builtin.float#_xxx))))
            $Builtin.let_xxx))
      (define
         (ltInt32 $Builtin.int32#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.int32#_xxx)
                   (direct
                      $Builtin.ltInt32_curry_xxx
                      $Builtin.int32#_xxx
                      $Builtin.int32#_xxx))))
            $Builtin.let_xxx))
      (define
         (ltInt64 $Builtin.int64#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.int64#_xxx)
                   (direct
                      $Builtin.ltInt64_curry_xxx
                      $Builtin.int64#_xxx
                      $Builtin.int64#_xxx))))
            $Builtin.let_xxx))
      (define
         (ltString $Builtin.string#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.string#_xxx)
                   (direct
                      $Builtin.ltString_curry_xxx
                      $Builtin.string#_xxx
                      $Builtin.string#_xxx))))
            $Builtin.let_xxx))
      (define
         (neChar $Builtin.char#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.char#_xxx)
                   (direct
                      $Builtin.neChar_curry_xxx
                      $Builtin.char#_xxx
                      $Builtin.char#_xxx))))
            $Builtin.let_xxx))
      (define
         (neDouble $Builtin.double#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.double#_xxx)
                   (direct
                      $Builtin.neDouble_curry_xxx
                      $Builtin.double#_xxx
                      $Builtin.double#_xxx))))
            $Builtin.let_xxx))
      (define
         (neFloat $Builtin.float#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.float#_xxx)
                   (direct
                      $Builtin.neFloat_curry_xxx
                      $Builtin.float#_xxx
                      $Builtin.float#_xxx))))
            $Builtin.let_xxx))
      (define
         (neInt32 $Builtin.int32#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.int32#_xxx)
                   (direct
                      $Builtin.neInt32_curry_xxx
                      $Builtin.int32#_xxx
                      $Builtin.int32#_xxx))))
            $Builtin.let_xxx))
      (define
         (neInt64 $Builtin.int64#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.int64#_xxx)
                   (direct
                      $Builtin.neInt64_curry_xxx
                      $Builtin.int64#_xxx
                      $Builtin.int64#_xxx))))
            $Builtin.let_xxx))
      (define
         (neString $Builtin.string#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.string#_xxx)
                   (direct
                      $Builtin.neString_curry_xxx
                      $Builtin.string#_xxx
                      $Builtin.string#_xxx))))
            $Builtin.let_xxx))
      (define
         (isLower# $Builtin.x_xxx)
         (-> (Char#) Int32#)
         (=
            $Builtin.d_xxx
            (call malgo_is_lower $Builtin.x_xxx)
            (cast Int32# $Builtin.d_xxx)))
      (define
         (isLower $Builtin.char#_xxx)
         (-> (Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Char# Char#))
               $Builtin.char#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Char# Char#)
               ($Builtin.p_xxx)
               (=
                  $Builtin.d_xxx
                  (=
                     $Builtin.d_xxx
                     (call isLower# $Builtin.p_xxx)
                     (cast Int32# $Builtin.d_xxx))
                  (=
                     $Builtin.d_xxx
                     (call isTrue# $Builtin.d_xxx)
                     (cast Any# $Builtin.d_xxx))))))
      (define
         (isDigit# $Builtin.x_xxx)
         (-> (Char#) Int32#)
         (=
            $Builtin.d_xxx
            (call malgo_is_digit $Builtin.x_xxx)
            (cast Int32# $Builtin.d_xxx)))
      (define
         (isDigit $Builtin.char#_xxx)
         (-> (Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Char# Char#))
               $Builtin.char#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Char# Char#)
               ($Builtin.p_xxx)
               (=
                  $Builtin.d_xxx
                  (=
                     $Builtin.d_xxx
                     (call isDigit# $Builtin.p_xxx)
                     (cast Int32# $Builtin.d_xxx))
                  (=
                     $Builtin.d_xxx
                     (call isTrue# $Builtin.d_xxx)
                     (cast Any# $Builtin.d_xxx))))))
      (define
         (isAlphanum# $Builtin.x_xxx)
         (-> (Char#) Int32#)
         (=
            $Builtin.d_xxx
            (call malgo_is_alphanum $Builtin.x_xxx)
            (cast Int32# $Builtin.d_xxx)))
      (define
         (isAlphanum $Builtin.char#_xxx)
         (-> (Any#) Any#)
         (match
            (cast
               (sum (con runtime/malgo/Builtin.mlg.Char# Char#))
               $Builtin.char#_xxx)
            (unpack
               (con runtime/malgo/Builtin.mlg.Char# Char#)
               ($Builtin.p_xxx)
               (=
                  $Builtin.d_xxx
                  (=
                     $Builtin.d_xxx
                     (call isAlphanum# $Builtin.p_xxx)
                     (cast Int32# $Builtin.d_xxx))
                  (=
                     $Builtin.d_xxx
                     (call isTrue# $Builtin.d_xxx)
                     (cast Any# $Builtin.d_xxx))))))
      (define
         (int64# $Builtin.x_xxx)
         (-> (Int64#) Any#)
         (=
            $Builtin.d_xxx
            (call Int64# $Builtin.x_xxx)
            (cast Any# $Builtin.d_xxx)))
      (define
         (int32# $Builtin.x_xxx)
         (-> (Int32#) Any#)
         (=
            $Builtin.d_xxx
            (call Int32# $Builtin.x_xxx)
            (cast Any# $Builtin.d_xxx)))
      (define
         (gtString# $Builtin.x_xxx)
         (-> (String#) (-> (String#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (String#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.gtString#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (gtString $Builtin.string#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.string#_xxx)
                   (direct
                      $Builtin.gtString_curry_xxx
                      $Builtin.string#_xxx
                      $Builtin.string#_xxx))))
            $Builtin.let_xxx))
      (define
         (gtInt64# $Builtin.x_xxx)
         (-> (Int64#) (-> (Int64#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Int64#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.gtInt64#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (gtInt64 $Builtin.int64#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.int64#_xxx)
                   (direct
                      $Builtin.gtInt64_curry_xxx
                      $Builtin.int64#_xxx
                      $Builtin.int64#_xxx))))
            $Builtin.let_xxx))
      (define
         (gtInt32# $Builtin.x_xxx)
         (-> (Int32#) (-> (Int32#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Int32#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.gtInt32#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (gtInt32 $Builtin.int32#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.int32#_xxx)
                   (direct
                      $Builtin.gtInt32_curry_xxx
                      $Builtin.int32#_xxx
                      $Builtin.int32#_xxx))))
            $Builtin.let_xxx))
      (define
         (gtFloat# $Builtin.x_xxx)
         (-> (Float#) (-> (Float#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Float#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.gtFloat#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (gtFloat $Builtin.float#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.float#_xxx)
                   (direct
                      $Builtin.gtFloat_curry_xxx
                      $Builtin.float#_xxx
                      $Builtin.float#_xxx))))
            $Builtin.let_xxx))
      (define
         (gtDouble# $Builtin.x_xxx)
         (-> (Double#) (-> (Double#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Double#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.gtDouble#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (gtDouble $Builtin.double#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.double#_xxx)
                   (direct
                      $Builtin.gtDouble_curry_xxx
                      $Builtin.double#_xxx
                      $Builtin.double#_xxx))))
            $Builtin.let_xxx))
      (define
         (gtChar# $Builtin.x_xxx)
         (-> (Char#) (-> (Char#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Char#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.gtChar#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (gtChar $Builtin.char#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.char#_xxx)
                   (direct
                      $Builtin.gtChar_curry_xxx
                      $Builtin.char#_xxx
                      $Builtin.char#_xxx))))
            $Builtin.let_xxx))
      (define
         (getContents $Builtin.__xxx)
         (-> (Any#) Any#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (let
                  (($Builtin.let_xxx
                      (sum (con Tuple#))
                      (pack (sum (con Tuple#)) (con Tuple#))))
                  $Builtin.let_xxx)
               (=
                  $Builtin.d_xxx
                  (call malgo_get_contents $Builtin.d_xxx)
                  (cast String# $Builtin.d_xxx)))
            (=
               $Builtin.d_xxx
               (call String# $Builtin.d_xxx)
               (cast Any# $Builtin.d_xxx))))
      (define
         (getChar $Builtin.__xxx)
         (-> (Any#) Any#)
         (=
            $Builtin.d_xxx
            (=
               $Builtin.d_xxx
               (let
                  (($Builtin.let_xxx
                      (sum (con Tuple#))
                      (pack (sum (con Tuple#)) (con Tuple#))))
                  $Builtin.let_xxx)
               (=
                  $Builtin.d_xxx
                  (call malgo_get_char $Builtin.d_xxx)
                  (cast Char# $Builtin.d_xxx)))
            (=
               $Builtin.d_xxx
               (call Char# $Builtin.d_xxx)
               (cast Any# $Builtin.d_xxx))))
      (define
         (geString# $Builtin.x_xxx)
         (-> (String#) (-> (String#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (String#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.geString#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (geString $Builtin.string#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.string#_xxx)
                   (direct
                      $Builtin.geString_curry_xxx
                      $Builtin.string#_xxx
                      $Builtin.string#_xxx))))
            $Builtin.let_xxx))
      (define
         (geInt64# $Builtin.x_xxx)
         (-> (Int64#) (-> (Int64#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Int64#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.geInt64#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (geInt64 $Builtin.int64#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.int64#_xxx)
                   (direct
                      $Builtin.geInt64_curry_xxx
                      $Builtin.int64#_xxx
                      $Builtin.int64#_xxx))))
            $Builtin.let_xxx))
      (define
         (geInt32# $Builtin.x_xxx)
         (-> (Int32#) (-> (Int32#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Int32#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.geInt32#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (geInt32 $Builtin.int32#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.int32#_xxx)
                   (direct
                      $Builtin.geInt32_curry_xxx
                      $Builtin.int32#_xxx
                      $Builtin.int32#_xxx))))
            $Builtin.let_xxx))
      (define
         (geFloat# $Builtin.x_xxx)
         (-> (Float#) (-> (Float#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Float#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.geFloat#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (geFloat $Builtin.float#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.float#_xxx)
                   (direct
                      $Builtin.geFloat_curry_xxx
                      $Builtin.float#_xxx
                      $Builtin.float#_xxx))))
            $Builtin.let_xxx))
      (define
         (geDouble# $Builtin.x_xxx)
         (-> (Double#) (-> (Double#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Double#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.geDouble#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (geDouble $Builtin.double#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.double#_xxx)
                   (direct
                      $Builtin.geDouble_curry_xxx
                      $Builtin.double#_xxx
                      $Builtin.double#_xxx))))
            $Builtin.let_xxx))
      (define
         (geChar# $Builtin.x_xxx)
         (-> (Char#) (-> (Char#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Char#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.geChar#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (geChar $Builtin.char#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.char#_xxx)
                   (direct
                      $Builtin.geChar_curry_xxx
                      $Builtin.char#_xxx
                      $Builtin.char#_xxx))))
            $Builtin.let_xxx))
      (define
         (flush $Builtin.__xxx)
         (-> (Any#) (sum (con Tuple#)))
         (=
            $Builtin.d_xxx
            (let
               (($Builtin.let_xxx
                   (sum (con Tuple#))
                   (pack (sum (con Tuple#)) (con Tuple#))))
               $Builtin.let_xxx)
            (=
               $Builtin.d_xxx
               (call malgo_flush $Builtin.d_xxx)
               (cast (sum (con Tuple#)) $Builtin.d_xxx))))
      (define
         (float# $Builtin.x_xxx)
         (-> (Float#) Any#)
         (=
            $Builtin.d_xxx
            (call Float# $Builtin.x_xxx)
            (cast Any# $Builtin.d_xxx)))
      (define
         (exitFailure $Builtin.__xxx)
         (-> ((sum (con Tuple#))) Any#)
         (=
            $Builtin.d_xxx
            (let
               (($Builtin.let_xxx
                   (sum (con Tuple#))
                   (pack (sum (con Tuple#)) (con Tuple#))))
               $Builtin.let_xxx)
            (=
               $Builtin.d_xxx
               (call malgo_exit_failure $Builtin.d_xxx)
               (cast Any# $Builtin.d_xxx))))
      (define
         (eqString# $Builtin.x_xxx)
         (-> (String#) (-> (String#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (String#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.eqString#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (eqString $Builtin.string#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.string#_xxx)
                   (direct
                      $Builtin.eqString_curry_xxx
                      $Builtin.string#_xxx
                      $Builtin.string#_xxx))))
            $Builtin.let_xxx))
      (define
         (eqInt64# $Builtin.x_xxx)
         (-> (Int64#) (-> (Int64#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Int64#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.eqInt64#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (eqInt64 $Builtin.int64#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.int64#_xxx)
                   (direct
                      $Builtin.eqInt64_curry_xxx
                      $Builtin.int64#_xxx
                      $Builtin.int64#_xxx))))
            $Builtin.let_xxx))
      (define
         (eqInt32# $Builtin.x_xxx)
         (-> (Int32#) (-> (Int32#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Int32#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.eqInt32#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (eqInt32 $Builtin.int32#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.int32#_xxx)
                   (direct
                      $Builtin.eqInt32_curry_xxx
                      $Builtin.int32#_xxx
                      $Builtin.int32#_xxx))))
            $Builtin.let_xxx))
      (define
         (eqFloat# $Builtin.x_xxx)
         (-> (Float#) (-> (Float#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Float#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.eqFloat#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (eqFloat $Builtin.float#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.float#_xxx)
                   (direct
                      $Builtin.eqFloat_curry_xxx
                      $Builtin.float#_xxx
                      $Builtin.float#_xxx))))
            $Builtin.let_xxx))
      (define
         (eqDouble# $Builtin.x_xxx)
         (-> (Double#) (-> (Double#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Double#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.eqDouble#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (eqDouble $Builtin.double#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.double#_xxx)
                   (direct
                      $Builtin.eqDouble_curry_xxx
                      $Builtin.double#_xxx
                      $Builtin.double#_xxx))))
            $Builtin.let_xxx))
      (define
         (eqChar# $Builtin.x_xxx)
         (-> (Char#) (-> (Char#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Char#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.eqChar#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (eqChar $Builtin.char#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.char#_xxx)
                   (direct
                      $Builtin.eqChar_curry_xxx
                      $Builtin.char#_xxx
                      $Builtin.char#_xxx))))
            $Builtin.let_xxx))
      (define
         (double# $Builtin.x_xxx)
         (-> (Double#) Any#)
         (=
            $Builtin.d_xxx
            (call Double# $Builtin.x_xxx)
            (cast Any# $Builtin.d_xxx)))
      (define
         (divInt64# $Builtin.x_xxx)
         (-> (Int64#) (-> (Int64#) Int64#))
         (let
            (($Builtin.let_xxx
                (-> (Int64#) Int64#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.divInt64#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (divInt64 $Builtin.int64#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.int64#_xxx)
                   (direct
                      $Builtin.divInt64_curry_xxx
                      $Builtin.int64#_xxx
                      $Builtin.int64#_xxx))))
            $Builtin.let_xxx))
      (define
         (divInt32# $Builtin.x_xxx)
         (-> (Int32#) (-> (Int32#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Int32#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.divInt32#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (divInt32 $Builtin.int32#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.int32#_xxx)
                   (direct
                      $Builtin.divInt32_curry_xxx
                      $Builtin.int32#_xxx
                      $Builtin.int32#_xxx))))
            $Builtin.let_xxx))
      (define
         (divFloat# $Builtin.x_xxx)
         (-> (Float#) (-> (Float#) Float#))
         (let
            (($Builtin.let_xxx
                (-> (Float#) Float#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.divFloat#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (divFloat $Builtin.float#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.float#_xxx)
                   (direct
                      $Builtin.divFloat_curry_xxx
                      $Builtin.float#_xxx
                      $Builtin.float#_xxx))))
            $Builtin.let_xxx))
      (define
         (divDouble# $Builtin.x_xxx)
         (-> (Double#) (-> (Double#) Double#))
         (let
            (($Builtin.let_xxx
                (-> (Double#) Double#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.divDouble#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (divDouble $Builtin.double#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.double#_xxx)
                   (direct
                      $Builtin.divDouble_curry_xxx
                      $Builtin.double#_xxx
                      $Builtin.double#_xxx))))
            $Builtin.let_xxx))
      (define
         (consString# $Builtin.c_xxx)
         (-> (Char#) (-> (String#) String#))
         (let
            (($Builtin.let_xxx
                (-> (String#) String#)
                (fun
                   ($Builtin.cs_xxx)
                   (direct
                      $Builtin.consString#_curry_xxx
                      $Builtin.c_xxx
                      $Builtin.cs_xxx))))
            $Builtin.let_xxx))
      (define
         (consString $Builtin.char#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.string#_xxx)
                   (direct
                      $Builtin.consString_curry_xxx
                      $Builtin.char#_xxx
                      $Builtin.string#_xxx))))
            $Builtin.let_xxx))
      (define
         (char# $Builtin.x_xxx)
         (-> (Char#) Any#)
         (= $Builtin.d_xxx (call Char# $Builtin.x_xxx) (cast Any# $Builtin.d_xxx)))
      (define
         (atString# $Builtin.i_xxx)
         (-> (Int64#) (-> (String#) Char#))
         (let
            (($Builtin.let_xxx
                (-> (String#) Char#)
                (fun
                   ($Builtin.x_xxx)
                   (direct
                      $Builtin.atString#_curry_xxx
                      $Builtin.i_xxx
                      $Builtin.x_xxx))))
            $Builtin.let_xxx))
      (define
         (atString $Builtin.int64#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.string#_xxx)
                   (direct
                      $Builtin.atString_curry_xxx
                      $Builtin.int64#_xxx
                      $Builtin.string#_xxx))))
            $Builtin.let_xxx))
      (define
         (appendString# $Builtin.x_xxx)
         (-> (String#) (-> (String#) String#))
         (let
            (($Builtin.let_xxx
                (-> (String#) String#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.appendString#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (appendString $Builtin.string#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.string#_xxx)
                   (direct
                      $Builtin.appendString_curry_xxx
                      $Builtin.string#_xxx
                      $Builtin.string#_xxx))))
            $Builtin.let_xxx))
      (define
         (addInt64# $Builtin.x_xxx)
         (-> (Int64#) (-> (Int64#) Int64#))
         (let
            (($Builtin.let_xxx
                (-> (Int64#) Int64#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.addInt64#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (addInt64 $Builtin.int64#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.int64#_xxx)
                   (direct
                      $Builtin.addInt64_curry_xxx
                      $Builtin.int64#_xxx
                      $Builtin.int64#_xxx))))
            $Builtin.let_xxx))
      (define
         (addInt32# $Builtin.x_xxx)
         (-> (Int32#) (-> (Int32#) Int32#))
         (let
            (($Builtin.let_xxx
                (-> (Int32#) Int32#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.addInt32#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (addInt32 $Builtin.int32#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.int32#_xxx)
                   (direct
                      $Builtin.addInt32_curry_xxx
                      $Builtin.int32#_xxx
                      $Builtin.int32#_xxx))))
            $Builtin.let_xxx))
      (define
         (addFloat# $Builtin.x_xxx)
         (-> (Float#) (-> (Float#) Float#))
         (let
            (($Builtin.let_xxx
                (-> (Float#) Float#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.addFloat#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (addFloat $Builtin.float#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.float#_xxx)
                   (direct
                      $Builtin.addFloat_curry_xxx
                      $Builtin.float#_xxx
                      $Builtin.float#_xxx))))
            $Builtin.let_xxx))
      (define
         (addDouble# $Builtin.x_xxx)
         (-> (Double#) (-> (Double#) Double#))
         (let
            (($Builtin.let_xxx
                (-> (Double#) Double#)
                (fun
                   ($Builtin.y_xxx)
                   (direct
                      $Builtin.addDouble#_curry_xxx
                      $Builtin.x_xxx
                      $Builtin.y_xxx))))
            $Builtin.let_xxx))
      (define
         (addDouble $Builtin.double#_xxx)
         (-> (Any#) (-> (Any#) Any#))
         (let
            (($Builtin.let_xxx
                (-> (Any#) Any#)
                (fun
                   ($Builtin.double#_xxx)
                   (direct
                      $Builtin.addDouble_curry_xxx
                      $Builtin.double#_xxx
                      $Builtin.double#_xxx))))
            $Builtin.let_xxx)))
   ((extern malgo_panic (-> (String#) Any#))
      (extern malgo_unsafe_cast (-> (Any#) Any#))
      (extern malgo_add_int32_t (-> (Int32# Int32#) Int32#))
      (extern malgo_sub_int32_t (-> (Int32# Int32#) Int32#))
      (extern malgo_mul_int32_t (-> (Int32# Int32#) Int32#))
      (extern malgo_div_int32_t (-> (Int32# Int32#) Int32#))
      (extern malgo_add_int64_t (-> (Int64# Int64#) Int64#))
      (extern malgo_sub_int64_t (-> (Int64# Int64#) Int64#))
      (extern malgo_mul_int64_t (-> (Int64# Int64#) Int64#))
      (extern malgo_div_int64_t (-> (Int64# Int64#) Int64#))
      (extern malgo_add_float (-> (Float# Float#) Float#))
      (extern malgo_sub_float (-> (Float# Float#) Float#))
      (extern malgo_mul_float (-> (Float# Float#) Float#))
      (extern malgo_div_float (-> (Float# Float#) Float#))
      (extern malgo_add_double (-> (Double# Double#) Double#))
      (extern malgo_sub_double (-> (Double# Double#) Double#))
      (extern malgo_mul_double (-> (Double# Double#) Double#))
      (extern malgo_div_double (-> (Double# Double#) Double#))
      (extern sqrtf (-> (Float#) Float#))
      (extern sqrt (-> (Double#) Double#))
      (extern malgo_eq_int32_t (-> (Int32# Int32#) Int32#))
      (extern malgo_ne_int32_t (-> (Int32# Int32#) Int32#))
      (extern malgo_lt_int32_t (-> (Int32# Int32#) Int32#))
      (extern malgo_gt_int32_t (-> (Int32# Int32#) Int32#))
      (extern malgo_le_int32_t (-> (Int32# Int32#) Int32#))
      (extern malgo_ge_int32_t (-> (Int32# Int32#) Int32#))
      (extern malgo_eq_int64_t (-> (Int64# Int64#) Int32#))
      (extern malgo_ne_int64_t (-> (Int64# Int64#) Int32#))
      (extern malgo_lt_int64_t (-> (Int64# Int64#) Int32#))
      (extern malgo_gt_int64_t (-> (Int64# Int64#) Int32#))
      (extern malgo_le_int64_t (-> (Int64# Int64#) Int32#))
      (extern malgo_ge_int64_t (-> (Int64# Int64#) Int32#))
      (extern malgo_eq_float (-> (Float# Float#) Int32#))
      (extern malgo_ne_float (-> (Float# Float#) Int32#))
      (extern malgo_lt_float (-> (Float# Float#) Int32#))
      (extern malgo_gt_float (-> (Float# Float#) Int32#))
      (extern malgo_le_float (-> (Float# Float#) Int32#))
      (extern malgo_ge_float (-> (Float# Float#) Int32#))
      (extern malgo_eq_double (-> (Double# Double#) Int32#))
      (extern malgo_ne_double (-> (Double# Double#) Int32#))
      (extern malgo_lt_double (-> (Double# Double#) Int32#))
      (extern malgo_gt_double (-> (Double# Double#) Int32#))
      (extern malgo_le_double (-> (Double# Double#) Int32#))
      (extern malgo_ge_double (-> (Double# Double#) Int32#))
      (extern malgo_eq_char (-> (Char# Char#) Int32#))
      (extern malgo_ne_char (-> (Char# Char#) Int32#))
      (extern malgo_lt_char (-> (Char# Char#) Int32#))
      (extern malgo_gt_char (-> (Char# Char#) Int32#))
      (extern malgo_le_char (-> (Char# Char#) Int32#))
      (extern malgo_ge_char (-> (Char# Char#) Int32#))
      (extern malgo_eq_string (-> (String# String#) Int32#))
      (extern malgo_ne_string (-> (String# String#) Int32#))
      (extern malgo_lt_string (-> (String# String#) Int32#))
      (extern malgo_gt_string (-> (String# String#) Int32#))
      (extern malgo_le_string (-> (String# String#) Int32#))
      (extern malgo_ge_string (-> (String# String#) Int32#))
      (extern malgo_char_ord (-> (Char#) Int32#))
      (extern malgo_is_digit (-> (Char#) Int32#))
      (extern malgo_is_lower (-> (Char#) Int32#))
      (extern malgo_is_upper (-> (Char#) Int32#))
      (extern malgo_is_alphanum (-> (Char#) Int32#))
      (extern malgo_string_length (-> (String#) Int64#))
      (extern malgo_string_at (-> (Int64# String#) Char#))
      (extern malgo_string_cons (-> (Char# String#) String#))
      (extern malgo_string_append (-> (String# String#) String#))
      (extern malgo_substring (-> (String# Int64# Int64#) String#))
      (extern malgo_int32_t_to_string (-> (Int32#) String#))
      (extern malgo_int64_t_to_string (-> (Int64#) String#))
      (extern malgo_float_to_string (-> (Float#) String#))
      (extern malgo_double_to_string (-> (Double#) String#))
      (extern malgo_char_to_string (-> (Char#) String#))
      (extern malgo_exit_failure (-> ((sum (con Tuple#))) Any#))
      (extern malgo_newline (-> ((sum (con Tuple#))) (sum (con Tuple#))))
      (extern malgo_print_char (-> (Char#) (sum (con Tuple#))))
      (extern malgo_print_string (-> (String#) (sum (con Tuple#))))
      (extern malgo_flush (-> ((sum (con Tuple#))) (sum (con Tuple#))))
      (extern malgo_get_char (-> ((sum (con Tuple#))) Char#))
      (extern malgo_get_contents (-> ((sum (con Tuple#))) String#))))