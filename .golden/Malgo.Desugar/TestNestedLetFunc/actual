(()
   ((define
       (malgo_print_string $TestNestedLetFunc.p_xxx)
       (-> (String#) (sum (con Tuple#)))
       (raw
          malgo_print_string
          (-> (String#) (sum (con Tuple#)))
          $TestNestedLetFunc.p_xxx))
      (define
         (main $TestNestedLetFunc.$__xxx)
         (-> ((sum (con Tuple#))) (sum (con Tuple#)))
         (match
            (let
               (($TestNestedLetFunc.fun_xxx
                   (-> ((sum (con Tuple#))) (sum (con Tuple#)))
                   (fun
                      ($TestNestedLetFunc.$__xxx)
                      (=
                         $TestNestedLetFunc.d_xxx
                         (let
                            (($TestNestedLetFunc.fun_xxx
                                (-> ((sum (con Tuple#))) (sum (con Tuple#)))
                                (fun
                                   ($TestNestedLetFunc.a_xxx)
                                   (let
                                      (($TestNestedLetFunc.let_xxx
                                          (sum (con Tuple#))
                                          (pack (sum (con Tuple#)) (con Tuple#))))
                                      $TestNestedLetFunc.let_xxx))))
                            $TestNestedLetFunc.fun_xxx)
                         (=
                            $TestNestedLetFunc.d_xxx
                            (let
                               (($TestNestedLetFunc.let_xxx
                                   (sum (con Tuple#))
                                   (pack (sum (con Tuple#)) (con Tuple#))))
                               $TestNestedLetFunc.let_xxx)
                            (=
                               $TestNestedLetFunc.d_xxx
                               (call
                                  $TestNestedLetFunc.d_xxx
                                  $TestNestedLetFunc.d_xxx)
                               (cast (sum (con Tuple#)) $TestNestedLetFunc.d_xxx)))))))
               $TestNestedLetFunc.fun_xxx)
            (bind
               $TestNestedLetFunc.let_test/testcases/malgo/TestNestedLetFunc.mlg.#f_2_xxx
               (-> ((sum (con Tuple#))) (sum (con Tuple#)))
               (=
                  $TestNestedLetFunc.d_xxx
                  (call malgo_print_string "PASS")
                  (cast (sum (con Tuple#)) $TestNestedLetFunc.d_xxx))))))
   ((extern malgo_print_string (-> (String#) (sum (con Tuple#))))))