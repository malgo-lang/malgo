Module
 { moduleName = Artifact
  ( ArtifactPath "test/testcases/malgo/TestNestedLetFunc.mlg" ), moduleDefinition = BindGroup
  { _scDefs =
   [
    [
     ( Typed
      { annotated = TyArr
       ( TyTuple 0 )
       ( TyTuple 0 ), value = Range
       { _start = SourcePos
        { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 2, sourceColumn = Pos 1 }, _end = SourcePos
        { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 5, sourceColumn = Pos 2 } } }, Id
      { name = "main", moduleName = Artifact
       ( ArtifactPath "test/testcases/malgo/TestNestedLetFunc.mlg" ), sort = External }, Fn
      ( Typed
       { annotated = TyArr
        ( TyTuple 0 )
        ( TyTuple 0 ), value = Range
        { _start = SourcePos
         { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 3, sourceColumn = Pos 3 }, _end = SourcePos
         { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 5, sourceColumn = Pos 1 } } } )
      ( Clause
       ( Typed
        { annotated = TyArr
         ( TyTuple 0 )
         ( TyTuple 0 ), value = Range
         { _start = SourcePos
          { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 3, sourceColumn = Pos 3 }, _end = SourcePos
          { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 5, sourceColumn = Pos 1 } } } )
       [ VarP
        ( Typed
         { annotated = TyTuple 0, value = Range
          { _start = SourcePos
           { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 3, sourceColumn = Pos 3 }, _end = SourcePos
           { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 5, sourceColumn = Pos 1 } } } )
        ( Id
         { name = "$_", moduleName = Artifact
          ( ArtifactPath "test/testcases/malgo/TestNestedLetFunc.mlg" ), sort = Internal } ) ]
       ( Seq
        ( Typed
         { annotated = TyTuple 0, value = Range
          { _start = SourcePos
           { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 3, sourceColumn = Pos 3 }, _end = SourcePos
           { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 5, sourceColumn = Pos 1 } } } )
        ( Let
         ( Range
          { _start = SourcePos
           { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 3, sourceColumn = Pos 3 }, _end = SourcePos
           { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 3, sourceColumn = Pos 33 } } )
         ( Id
          { name = "f", moduleName = Artifact
           ( ArtifactPath "test/testcases/malgo/TestNestedLetFunc.mlg" ), sort = Internal } )
         ( Fn
          ( Typed
           { annotated = TyArr
            ( TyTuple 0 )
            ( TyTuple 0 ), value = Range
            { _start = SourcePos
             { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 3, sourceColumn = Pos 12 }, _end = SourcePos
             { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 3, sourceColumn = Pos 32 } } } )
          ( Clause
           ( Typed
            { annotated = TyArr
             ( TyTuple 0 )
             ( TyTuple 0 ), value = Range
             { _start = SourcePos
              { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 3, sourceColumn = Pos 12 }, _end = SourcePos
              { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 3, sourceColumn = Pos 32 } } } )
           [ VarP
            ( Typed
             { annotated = TyTuple 0, value = Range
              { _start = SourcePos
               { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 3, sourceColumn = Pos 12 }, _end = SourcePos
               { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 3, sourceColumn = Pos 32 } } } )
            ( Id
             { name = "$_", moduleName = Artifact
              ( ArtifactPath "test/testcases/malgo/TestNestedLetFunc.mlg" ), sort = Internal } ) ]
           ( Seq
            ( Typed
             { annotated = TyTuple 0, value = Range
              { _start = SourcePos
               { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 3, sourceColumn = Pos 12 }, _end = SourcePos
               { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 3, sourceColumn = Pos 32 } } } )
            ( Let
             ( Range
              { _start = SourcePos
               { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 3, sourceColumn = Pos 12 }, _end = SourcePos
               { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 3, sourceColumn = Pos 32 } } )
             ( Id
              { name = "y", moduleName = Artifact
               ( ArtifactPath "test/testcases/malgo/TestNestedLetFunc.mlg" ), sort = Internal } )
             ( Apply
              ( Typed
               { annotated = TyTuple 0, value = Range
                { _start = SourcePos
                 { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 3, sourceColumn = Pos 20 }, _end = SourcePos
                 { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 3, sourceColumn = Pos 32 } } } )
              ( Fn
               ( Typed
                { annotated = TyArr
                 ( TyTuple 0 )
                 ( TyTuple 0 ), value = Range
                 { _start = SourcePos
                  { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 3, sourceColumn = Pos 21 }, _end = SourcePos
                  { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 3, sourceColumn = Pos 28 } } } )
               ( Clause
                ( Typed
                 { annotated = TyArr
                  ( TyTuple 0 )
                  ( TyTuple 0 ), value = Range
                  { _start = SourcePos
                   { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 3, sourceColumn = Pos 21 }, _end = SourcePos
                   { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 3, sourceColumn = Pos 28 } } } )
                [ VarP
                 ( Typed
                  { annotated = TyTuple 0, value = Range
                   { _start = SourcePos
                    { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 3, sourceColumn = Pos 21 }, _end = SourcePos
                    { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 3, sourceColumn = Pos 23 } } } )
                 ( Id
                  { name = "a", moduleName = Artifact
                   ( ArtifactPath "test/testcases/malgo/TestNestedLetFunc.mlg" ), sort = Internal } ) ]
                ( Seq
                 ( Typed
                  { annotated = TyTuple 0, value = Range
                   { _start = SourcePos
                    { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 3, sourceColumn = Pos 26 }, _end = SourcePos
                    { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 3, sourceColumn = Pos 28 } } } )
                 ( NoBind
                  ( Range
                   { _start = SourcePos
                    { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 3, sourceColumn = Pos 26 }, _end = SourcePos
                    { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 3, sourceColumn = Pos 28 } } )
                  ( Tuple
                   ( Typed
                    { annotated = TyTuple 0, value = Range
                     { _start = SourcePos
                      { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 3, sourceColumn = Pos 26 }, _end = SourcePos
                      { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 3, sourceColumn = Pos 28 } } } ) [] ) :| [] ) ) :| [] ) )
              ( Tuple
               ( Typed
                { annotated = TyTuple 0, value = Range
                 { _start = SourcePos
                  { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 3, sourceColumn = Pos 30 }, _end = SourcePos
                  { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 3, sourceColumn = Pos 32 } } } ) [] ) ) :| [] ) ) :| [] ) ) :|
         [ NoBind
          ( Range
           { _start = SourcePos
            { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 4, sourceColumn = Pos 3 }, _end = SourcePos
            { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 5, sourceColumn = Pos 1 } } )
          ( Apply
           ( Typed
            { annotated = TyTuple 0, value = Range
             { _start = SourcePos
              { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 4, sourceColumn = Pos 3 }, _end = SourcePos
              { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 5, sourceColumn = Pos 1 } } } )
           ( Var
            ( Typed
             { annotated = TyArr ( TyPrim StringT )
              ( TyTuple 0 ), value = Range
              { _start = SourcePos
               { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 4, sourceColumn = Pos 3 }, _end = SourcePos
               { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 4, sourceColumn = Pos 22 } } } )
            ( Id
             { name = "malgo_print_string", moduleName = Artifact
              ( ArtifactPath "test/testcases/malgo/TestNestedLetFunc.mlg" ), sort = External } ) )
           ( Unboxed
            ( Typed
             { annotated = TyPrim StringT, value = Range
              { _start = SourcePos
               { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 4, sourceColumn = Pos 22 }, _end = SourcePos
               { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 5, sourceColumn = Pos 1 } } } )
            ( String "PASS" ) ) ) ] ) ) :| [] ) ) ] ], _scSigs = [], _dataDefs = [], _typeSynonyms = [], _foreigns =
   [
    ( Typed
     { annotated = TyArr ( TyPrim StringT )
      ( TyTuple 0 ), value =
      ( Range
       { _start = SourcePos
        { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 1, sourceColumn = Pos 1 }, _end = SourcePos
        { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 2, sourceColumn = Pos 1 } }, "malgo_print_string" ) }, Id
     { name = "malgo_print_string", moduleName = Artifact
      ( ArtifactPath "test/testcases/malgo/TestNestedLetFunc.mlg" ), sort = External }, TyArr
     ( Range
      { _start = SourcePos
       { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 1, sourceColumn = Pos 45 }, _end = SourcePos
       { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 1, sourceColumn = Pos 48 } } )
     ( TyCon
      ( Range
       { _start = SourcePos
        { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 1, sourceColumn = Pos 37 }, _end = SourcePos
        { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 1, sourceColumn = Pos 45 } } )
      ( Id
       { name = "String#", moduleName = ModuleName "Builtin", sort = External } ) )
     ( TyTuple
      ( Range
       { _start = SourcePos
        { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 1, sourceColumn = Pos 48 }, _end = SourcePos
        { sourceName = "./test/testcases/malgo/TestNestedLetFunc.mlg", sourceLine = Pos 2, sourceColumn = Pos 1 } } ) [] ) ) ], _imports = [] } }
TcEnv
 { _signatureMap = fromList
  [
   ( Id
    { name = "malgo_print_string", moduleName = Artifact
     ( ArtifactPath "test/testcases/malgo/TestNestedLetFunc.mlg" ), sort = External }, Forall []
    ( TyArr ( TyPrim StringT ) ( TyTuple 0 ) ) ),
   ( Id
    { name = "a", moduleName = Artifact
     ( ArtifactPath "test/testcases/malgo/TestNestedLetFunc.mlg" ), sort = Internal }, Forall []
    ( TyTuple 0 ) ),
   ( Id
    { name = "main", moduleName = Artifact
     ( ArtifactPath "test/testcases/malgo/TestNestedLetFunc.mlg" ), sort = External }, Forall []
    ( TyArr ( TyTuple 0 ) ( TyTuple 0 ) ) ),
   ( Id
    { name = "y", moduleName = Artifact
     ( ArtifactPath "test/testcases/malgo/TestNestedLetFunc.mlg" ), sort = Internal }, Forall []
    ( TyTuple 0 ) ),
   ( Id
    { name = "$_", moduleName = Artifact
     ( ArtifactPath "test/testcases/malgo/TestNestedLetFunc.mlg" ), sort = Internal }, Forall []
    ( TyTuple 0 ) ),
   ( Id
    { name = "$_", moduleName = Artifact
     ( ArtifactPath "test/testcases/malgo/TestNestedLetFunc.mlg" ), sort = Internal }, Forall []
    ( TyTuple 0 ) ),
   ( Id
    { name = "f", moduleName = Artifact
     ( ArtifactPath "test/testcases/malgo/TestNestedLetFunc.mlg" ), sort = Internal }, Forall []
    ( TyArr ( TyTuple 0 ) ( TyTuple 0 ) ) ) ], _typeDefMap = fromList
  [
   ( Id
    { name = "Double#", moduleName = ModuleName "Builtin", sort = External }, TypeDef
    { _typeConstructor = TyPrim DoubleT, _typeParameters = [], _valueConstructors = [] } ),
   ( Id
    { name = "Int32#", moduleName = ModuleName "Builtin", sort = External }, TypeDef
    { _typeConstructor = TyPrim Int32T, _typeParameters = [], _valueConstructors = [] } ),
   ( Id
    { name = "Ptr#", moduleName = ModuleName "Builtin", sort = External }, TypeDef
    { _typeConstructor = TyPtr, _typeParameters = [], _valueConstructors = [] } ),
   ( Id
    { name = "Char#", moduleName = ModuleName "Builtin", sort = External }, TypeDef
    { _typeConstructor = TyPrim CharT, _typeParameters = [], _valueConstructors = [] } ),
   ( Id
    { name = "Int64#", moduleName = ModuleName "Builtin", sort = External }, TypeDef
    { _typeConstructor = TyPrim Int64T, _typeParameters = [], _valueConstructors = [] } ),
   ( Id
    { name = "String#", moduleName = ModuleName "Builtin", sort = External }, TypeDef
    { _typeConstructor = TyPrim StringT, _typeParameters = [], _valueConstructors = [] } ),
   ( Id
    { name = "Float#", moduleName = ModuleName "Builtin", sort = External }, TypeDef
    { _typeConstructor = TyPrim FloatT, _typeParameters = [], _valueConstructors = [] } ) ], _typeSynonymMap = fromList [], _resolvedTypeIdentMap = fromList
  [
   ( "String#",
    [ Qualified
     { visibility = Implicit, value = Id
      { name = "String#", moduleName = ModuleName "Builtin", sort = External } } ] ),
   ( "Ptr#",
    [ Qualified
     { visibility = Implicit, value = Id
      { name = "Ptr#", moduleName = ModuleName "Builtin", sort = External } } ] ),
   ( "Char#",
    [ Qualified
     { visibility = Implicit, value = Id
      { name = "Char#", moduleName = ModuleName "Builtin", sort = External } } ] ),
   ( "Float#",
    [ Qualified
     { visibility = Implicit, value = Id
      { name = "Float#", moduleName = ModuleName "Builtin", sort = External } } ] ),
   ( "Int64#",
    [ Qualified
     { visibility = Implicit, value = Id
      { name = "Int64#", moduleName = ModuleName "Builtin", sort = External } } ] ),
   ( "Double#",
    [ Qualified
     { visibility = Implicit, value = Id
      { name = "Double#", moduleName = ModuleName "Builtin", sort = External } } ] ),
   ( "Int32#",
    [ Qualified
     { visibility = Implicit, value = Id
      { name = "Int32#", moduleName = ModuleName "Builtin", sort = External } } ] ) ], _kindCtx = fromList
  [
   ( Id
    { name = "t", moduleName = Artifact
     ( ArtifactPath "test/testcases/malgo/TestNestedLetFunc.mlg" ), sort = Internal }, TyMeta
    ( Id
     { name = "kt", moduleName = Artifact
      ( ArtifactPath "test/testcases/malgo/TestNestedLetFunc.mlg" ), sort = Temporal } ) ),
   ( Id
    { name = "t", moduleName = Artifact
     ( ArtifactPath "test/testcases/malgo/TestNestedLetFunc.mlg" ), sort = Internal }, TyMeta
    ( Id
     { name = "kt", moduleName = Artifact
      ( ArtifactPath "test/testcases/malgo/TestNestedLetFunc.mlg" ), sort = Temporal } ) ),
   ( Id
    { name = "Double#", moduleName = ModuleName "Builtin", sort = External }, TYPE ),
   ( Id
    { name = "Int32#", moduleName = ModuleName "Builtin", sort = External }, TYPE ),
   ( Id
    { name = "t", moduleName = Artifact
     ( ArtifactPath "test/testcases/malgo/TestNestedLetFunc.mlg" ), sort = Internal }, TyMeta
    ( Id
     { name = "kt", moduleName = Artifact
      ( ArtifactPath "test/testcases/malgo/TestNestedLetFunc.mlg" ), sort = Temporal } ) ),
   ( Id
    { name = "t", moduleName = Artifact
     ( ArtifactPath "test/testcases/malgo/TestNestedLetFunc.mlg" ), sort = Internal }, TyMeta
    ( Id
     { name = "kt", moduleName = Artifact
      ( ArtifactPath "test/testcases/malgo/TestNestedLetFunc.mlg" ), sort = Temporal } ) ),
   ( Id
    { name = "Ptr#", moduleName = ModuleName "Builtin", sort = External }, TyArr TYPE TYPE ),
   ( Id
    { name = "Char#", moduleName = ModuleName "Builtin", sort = External }, TYPE ),
   ( Id
    { name = "Int64#", moduleName = ModuleName "Builtin", sort = External }, TYPE ),
   ( Id
    { name = "String#", moduleName = ModuleName "Builtin", sort = External }, TYPE ),
   ( Id
    { name = "Float#", moduleName = ModuleName "Builtin", sort = External }, TYPE ) ] }