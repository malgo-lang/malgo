Program
 { topVars = [], topFuns =
  [
   ( Meta
    { meta =
     [ AnyT, [ AnyT ] :-> AnyT ] :-> AnyT, id = Id
     { name = "|>_curry", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 138 } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath
        { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 139 } }, Meta
     { meta = [ AnyT ] :-> AnyT, id = Id
      { name = "f", moduleName = Artifact
       ( ArtifactPath
        { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 140 } } ],
    [ AnyT, [ AnyT ] :-> AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = AnyT, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath
        { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 141 } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "f", moduleName = Artifact
         ( ArtifactPath
          { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 140 } } ) )
     [ Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath
          { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 139 } } ) ] )
    ( Cast AnyT
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath
          { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 141 } } ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "Cons_curry", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 128 } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath
        { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 129 } }, Meta
     { meta = AnyT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath
        { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 130 } } ],
    [ AnyT, AnyT ] :-> AnyT, Let
    [ LocalDef
     { _variable = Meta
      { meta = SumT
       [ Con
        ( Data "test/testcases/malgo/Null.mlg.Nil" ) [], Con
        ( Data "test/testcases/malgo/Null.mlg.Cons" )
        [ AnyT, AnyT ] ], id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath
         { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 131 } }, typ = SumT
      [ Con
       ( Data "test/testcases/malgo/Null.mlg.Nil" ) [], Con
       ( Data "test/testcases/malgo/Null.mlg.Cons" )
       [ AnyT, AnyT ] ], _object = Pack
      ( SumT
       [ Con
        ( Data "test/testcases/malgo/Null.mlg.Nil" ) [], Con
        ( Data "test/testcases/malgo/Null.mlg.Cons" )
        [ AnyT, AnyT ] ] )
      ( Con ( Data "test/testcases/malgo/Null.mlg.Cons" ) [ AnyT, AnyT ] )
      [ Var
       ( Meta
        { meta = AnyT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath
           { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 129 } } ), Var
       ( Meta
        { meta = AnyT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath
           { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 130 } } ) ] } ]
    ( Cast AnyT
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "test/testcases/malgo/Null.mlg.Nil" ) [], Con
         ( Data "test/testcases/malgo/Null.mlg.Cons" )
         [ AnyT, AnyT ] ], id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath
          { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 131 } } ) ) ) ),
   ( Meta
    { meta = [] :-> AnyT, id = Id
     { name = "Nothing", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = External } }, [], [] :-> AnyT, Let
    [ LocalDef
     { _variable = Meta
      { meta = SumT
       [ Con
        ( Data "test/testcases/malgo/Null.mlg.Nothing" ) [], Con
        ( Data "test/testcases/malgo/Null.mlg.Just" ) [ AnyT ] ], id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath
         { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 119 } }, typ = SumT
      [ Con
       ( Data "test/testcases/malgo/Null.mlg.Nothing" ) [], Con
       ( Data "test/testcases/malgo/Null.mlg.Just" ) [ AnyT ] ], _object = Pack
      ( SumT
       [ Con
        ( Data "test/testcases/malgo/Null.mlg.Nothing" ) [], Con
        ( Data "test/testcases/malgo/Null.mlg.Just" ) [ AnyT ] ] )
      ( Con ( Data "test/testcases/malgo/Null.mlg.Nothing" ) [] ) [] } ]
    ( Cast AnyT
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "test/testcases/malgo/Null.mlg.Nothing" ) [], Con
         ( Data "test/testcases/malgo/Null.mlg.Just" ) [ AnyT ] ], id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath
          { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 119 } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :-> AnyT, id = Id
     { name = "Just", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath
        { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 120 } } ], [ AnyT ] :-> AnyT, Let
    [ LocalDef
     { _variable = Meta
      { meta = SumT
       [ Con
        ( Data "test/testcases/malgo/Null.mlg.Nothing" ) [], Con
        ( Data "test/testcases/malgo/Null.mlg.Just" ) [ AnyT ] ], id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath
         { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 121 } }, typ = SumT
      [ Con
       ( Data "test/testcases/malgo/Null.mlg.Nothing" ) [], Con
       ( Data "test/testcases/malgo/Null.mlg.Just" ) [ AnyT ] ], _object = Pack
      ( SumT
       [ Con
        ( Data "test/testcases/malgo/Null.mlg.Nothing" ) [], Con
        ( Data "test/testcases/malgo/Null.mlg.Just" ) [ AnyT ] ] )
      ( Con ( Data "test/testcases/malgo/Null.mlg.Just" ) [ AnyT ] )
      [ Var
       ( Meta
        { meta = AnyT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath
           { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 120 } } ) ] } ]
    ( Cast AnyT
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "test/testcases/malgo/Null.mlg.Nothing" ) [], Con
         ( Data "test/testcases/malgo/Null.mlg.Just" ) [ AnyT ] ], id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath
          { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 121 } } ) ) ) ),
   ( Meta
    { meta = [] :-> AnyT, id = Id
     { name = "False", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = External } }, [], [] :-> AnyT, Let
    [ LocalDef
     { _variable = Meta
      { meta = SumT
       [ Con
        ( Data "test/testcases/malgo/Null.mlg.False" ) [], Con
        ( Data "test/testcases/malgo/Null.mlg.True" ) [] ], id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath
         { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 122 } }, typ = SumT
      [ Con
       ( Data "test/testcases/malgo/Null.mlg.False" ) [], Con
       ( Data "test/testcases/malgo/Null.mlg.True" ) [] ], _object = Pack
      ( SumT
       [ Con
        ( Data "test/testcases/malgo/Null.mlg.False" ) [], Con
        ( Data "test/testcases/malgo/Null.mlg.True" ) [] ] )
      ( Con ( Data "test/testcases/malgo/Null.mlg.False" ) [] ) [] } ]
    ( Cast AnyT
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "test/testcases/malgo/Null.mlg.False" ) [], Con
         ( Data "test/testcases/malgo/Null.mlg.True" ) [] ], id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath
          { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 122 } } ) ) ) ),
   ( Meta
    { meta = [] :-> AnyT, id = Id
     { name = "True", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = External } }, [], [] :-> AnyT, Let
    [ LocalDef
     { _variable = Meta
      { meta = SumT
       [ Con
        ( Data "test/testcases/malgo/Null.mlg.False" ) [], Con
        ( Data "test/testcases/malgo/Null.mlg.True" ) [] ], id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath
         { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 123 } }, typ = SumT
      [ Con
       ( Data "test/testcases/malgo/Null.mlg.False" ) [], Con
       ( Data "test/testcases/malgo/Null.mlg.True" ) [] ], _object = Pack
      ( SumT
       [ Con
        ( Data "test/testcases/malgo/Null.mlg.False" ) [], Con
        ( Data "test/testcases/malgo/Null.mlg.True" ) [] ] )
      ( Con ( Data "test/testcases/malgo/Null.mlg.True" ) [] ) [] } ]
    ( Cast AnyT
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "test/testcases/malgo/Null.mlg.False" ) [], Con
         ( Data "test/testcases/malgo/Null.mlg.True" ) [] ], id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath
          { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 123 } } ) ) ) ),
   ( Meta
    { meta = [] :-> AnyT, id = Id
     { name = "Nil", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = External } }, [], [] :-> AnyT, Let
    [ LocalDef
     { _variable = Meta
      { meta = SumT
       [ Con
        ( Data "test/testcases/malgo/Null.mlg.Nil" ) [], Con
        ( Data "test/testcases/malgo/Null.mlg.Cons" )
        [ AnyT, AnyT ] ], id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath
         { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 124 } }, typ = SumT
      [ Con
       ( Data "test/testcases/malgo/Null.mlg.Nil" ) [], Con
       ( Data "test/testcases/malgo/Null.mlg.Cons" )
       [ AnyT, AnyT ] ], _object = Pack
      ( SumT
       [ Con
        ( Data "test/testcases/malgo/Null.mlg.Nil" ) [], Con
        ( Data "test/testcases/malgo/Null.mlg.Cons" )
        [ AnyT, AnyT ] ] )
      ( Con ( Data "test/testcases/malgo/Null.mlg.Nil" ) [] ) [] } ]
    ( Cast AnyT
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "test/testcases/malgo/Null.mlg.Nil" ) [], Con
         ( Data "test/testcases/malgo/Null.mlg.Cons" )
         [ AnyT, AnyT ] ], id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath
          { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 124 } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "Cons", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath
        { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 125 } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath
         { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 132 } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath
          { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 126 } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "Cons_curry", moduleName = Artifact
          ( ArtifactPath
           { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 128 } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath
            { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 125 } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath
            { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 126 } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath
          { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 132 } } ) ) ) ),
   ( Meta
    { meta = [ StringT ] :-> SumT
     [ Con Tuple [] ], id = Id
     { name = "malgo_print_string", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = External } },
    [ Meta
     { meta = StringT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath
        { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 133 } } ], [ StringT ] :-> SumT
    [ Con Tuple [] ], RawCall "malgo_print_string"
    ( [ StringT ] :-> SumT [ Con Tuple [] ] )
    [ Var
     ( Meta
      { meta = StringT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath
         { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 133 } } ) ] ),
   ( Meta
    { meta =
     [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
     { name = "malgo_exit_failure", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = External } },
    [ Meta
     { meta = SumT
      [ Con Tuple [] ], id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath
        { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 134 } } ],
    [ SumT [ Con Tuple [] ] ] :-> AnyT, RawCall "malgo_exit_failure"
    ( [ SumT [ Con Tuple [] ] ] :-> AnyT )
    [ Var
     ( Meta
      { meta = SumT
       [ Con Tuple [] ], id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath
         { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 134 } } ) ] ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ [ AnyT ] :-> AnyT ] :-> AnyT ), id = Id
     { name = "|>", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath
        { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 135 } } ], [ AnyT ] :->
    ( [ [ AnyT ] :-> AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta =
       [ [ AnyT ] :-> AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath
         { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 142 } }, typ =
      [ [ AnyT ] :-> AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "f", moduleName = Artifact
         ( ArtifactPath
          { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 136 } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, [ AnyT ] :-> AnyT ] :-> AnyT, id = Id
         { name = "|>_curry", moduleName = Artifact
          ( ArtifactPath
           { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 138 } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath
            { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 135 } } ), Var
        ( Meta
         { meta = [ AnyT ] :-> AnyT, id = Id
          { name = "f", moduleName = Artifact
           ( ArtifactPath
            { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 136 } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta =
        [ [ AnyT ] :-> AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath
          { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 142 } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :-> AnyT, id = Id
     { name = "mHead", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "nil", moduleName = Artifact
       ( ArtifactPath
        { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 143 } } ], [ AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con
       ( Data "test/testcases/malgo/Null.mlg.Nil" ) [], Con
       ( Data "test/testcases/malgo/Null.mlg.Cons" )
       [ AnyT, AnyT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath
        { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 177 } } )
    ( Cast
     ( SumT
      [ Con
       ( Data "test/testcases/malgo/Null.mlg.Nil" ) [], Con
       ( Data "test/testcases/malgo/Null.mlg.Cons" )
       [ AnyT, AnyT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "nil", moduleName = Artifact
         ( ArtifactPath
          { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 143 } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "test/testcases/malgo/Null.mlg.Nil" ) [], Con
         ( Data "test/testcases/malgo/Null.mlg.Cons" )
         [ AnyT, AnyT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath
          { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 177 } } ) )
     [
      ( Data "test/testcases/malgo/Null.mlg.Nil", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "test/testcases/malgo/Null.mlg.Nil" ) [], Con
           ( Data "test/testcases/malgo/Null.mlg.Cons" )
           [ AnyT, AnyT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath
            { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 177 } } ) )
       ( Con ( Data "test/testcases/malgo/Null.mlg.Nil" ) [] ) []
       ( CallDirect
        ( Meta
         { meta = [] :-> AnyT, id = Id
          { name = "Nothing", moduleName = Artifact
           ( ArtifactPath
            { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = External } } ) [] ) ),
      ( Data "test/testcases/malgo/Null.mlg.Cons", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "test/testcases/malgo/Null.mlg.Nil" ) [], Con
           ( Data "test/testcases/malgo/Null.mlg.Cons" )
           [ AnyT, AnyT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath
            { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 177 } } ) )
       ( Con ( Data "test/testcases/malgo/Null.mlg.Cons" ) [ AnyT, AnyT ] )
       [ Meta
        { meta = AnyT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath
           { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 144 } }, Meta
        { meta = AnyT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath
           { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 145 } } ]
       ( Assign
        ( Meta
         { meta = AnyT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath
            { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 146 } } )
        ( Call
         ( Var
          ( Meta
           { meta = [ AnyT ] :-> AnyT, id = Id
            { name = "Just", moduleName = Artifact
             ( ArtifactPath
              { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = External } } ) )
         [ Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "p", moduleName = Artifact
             ( ArtifactPath
              { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 144 } } ) ] )
        ( Cast AnyT
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath
              { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 146 } } ) ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta = [ AnyT ] :-> AnyT, id = Id
     { name = "isNothing", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "nothing", moduleName = Artifact
       ( ArtifactPath
        { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 147 } } ], [ AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con
       ( Data "test/testcases/malgo/Null.mlg.Nothing" ) [], Con
       ( Data "test/testcases/malgo/Null.mlg.Just" ) [ AnyT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath
        { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 178 } } )
    ( Cast
     ( SumT
      [ Con
       ( Data "test/testcases/malgo/Null.mlg.Nothing" ) [], Con
       ( Data "test/testcases/malgo/Null.mlg.Just" ) [ AnyT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "nothing", moduleName = Artifact
         ( ArtifactPath
          { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 147 } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "test/testcases/malgo/Null.mlg.Nothing" ) [], Con
         ( Data "test/testcases/malgo/Null.mlg.Just" ) [ AnyT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath
          { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 178 } } ) )
     [
      ( Data "test/testcases/malgo/Null.mlg.Nothing", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "test/testcases/malgo/Null.mlg.Nothing" ) [], Con
           ( Data "test/testcases/malgo/Null.mlg.Just" ) [ AnyT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath
            { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 178 } } ) )
       ( Con ( Data "test/testcases/malgo/Null.mlg.Nothing" ) [] ) []
       ( CallDirect
        ( Meta
         { meta = [] :-> AnyT, id = Id
          { name = "True", moduleName = Artifact
           ( ArtifactPath
            { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = External } } ) [] ) ),
      ( Data "test/testcases/malgo/Null.mlg.Just", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "test/testcases/malgo/Null.mlg.Nothing" ) [], Con
           ( Data "test/testcases/malgo/Null.mlg.Just" ) [ AnyT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath
            { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 178 } } ) )
       ( Con ( Data "test/testcases/malgo/Null.mlg.Just" ) [ AnyT ] )
       [ Meta
        { meta = AnyT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath
           { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 148 } } ]
       ( CallDirect
        ( Meta
         { meta = [] :-> AnyT, id = Id
          { name = "False", moduleName = Artifact
           ( ArtifactPath
            { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = External } } ) [] ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta = [ AnyT ] :-> AnyT, id = Id
     { name = "null", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "as", moduleName = Artifact
       ( ArtifactPath
        { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 149 } } ], [ AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = AnyT, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath
        { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 150 } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "mHead", moduleName = Artifact
         ( ArtifactPath
          { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "as", moduleName = Artifact
         ( ArtifactPath
          { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 149 } } ) ] )
    ( Assign
     ( Meta
      { meta = AnyT, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath
         { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 151 } } )
     ( Cast AnyT
      ( Var
       ( Meta
        { meta = AnyT, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath
           { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 150 } } ) ) )
     ( Assign
      ( Meta
       { meta = AnyT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath
          { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 152 } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ AnyT ] :-> AnyT, id = Id
          { name = "isNothing", moduleName = Artifact
           ( ArtifactPath
            { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = External } } ) )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath
            { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 151 } } ) ] )
      ( Cast AnyT
       ( Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath
            { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 152 } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ SumT [ Con Tuple [] ] ] :-> SumT
     [ Con Tuple [] ], id = Id
     { name = "main", moduleName = Artifact
      ( ArtifactPath
       { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = External } },
    [ Meta
     { meta = SumT
      [ Con Tuple [] ], id = Id
      { name = "$_", moduleName = Artifact
       ( ArtifactPath
        { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 153 } } ],
    [ SumT [ Con Tuple [] ] ] :-> SumT
    [ Con Tuple [] ], Assign
    ( Meta
     { meta = AnyT, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath
        { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 154 } } )
    ( CallDirect
     ( Meta
      { meta = [] :-> AnyT, id = Id
       { name = "True", moduleName = Artifact
        ( ArtifactPath
         { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = External } } ) [] )
    ( Assign
     ( Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath
         { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 155 } } )
     ( Call
      ( Var
       ( Meta
        { meta = [ AnyT ] :->
         ( [ AnyT ] :-> AnyT ), id = Id
         { name = "Cons", moduleName = Artifact
          ( ArtifactPath
           { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = External } } ) )
      [ Var
       ( Meta
        { meta = AnyT, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath
           { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 154 } } ) ] )
     ( Assign
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath
          { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 156 } } )
      ( Cast
       ( [ AnyT ] :-> AnyT )
       ( Var
        ( Meta
         { meta = [ AnyT ] :-> AnyT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath
            { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 155 } } ) ) )
      ( Assign
       ( Meta
        { meta = AnyT, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath
           { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 157 } } )
       ( CallDirect
        ( Meta
         { meta = [] :-> AnyT, id = Id
          { name = "True", moduleName = Artifact
           ( ArtifactPath
            { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = External } } ) [] )
       ( Assign
        ( Meta
         { meta = [ AnyT ] :-> AnyT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath
            { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 158 } } )
        ( Call
         ( Var
          ( Meta
           { meta = [ AnyT ] :->
            ( [ AnyT ] :-> AnyT ), id = Id
            { name = "Cons", moduleName = Artifact
             ( ArtifactPath
              { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = External } } ) )
         [ Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath
              { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 157 } } ) ] )
        ( Assign
         ( Meta
          { meta = [ AnyT ] :-> AnyT, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath
             { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 159 } } )
         ( Cast
          ( [ AnyT ] :-> AnyT )
          ( Var
           ( Meta
            { meta = [ AnyT ] :-> AnyT, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath
               { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 158 } } ) ) )
         ( Assign
          ( Meta
           { meta = AnyT, id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath
              { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 160 } } )
          ( CallDirect
           ( Meta
            { meta = [] :-> AnyT, id = Id
             { name = "Nil", moduleName = Artifact
              ( ArtifactPath
               { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = External } } ) [] )
          ( Assign
           ( Meta
            { meta = AnyT, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath
               { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 161 } } )
           ( Call
            ( Var
             ( Meta
              { meta = [ AnyT ] :-> AnyT, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath
                 { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 159 } } ) )
            [ Var
             ( Meta
              { meta = AnyT, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath
                 { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 160 } } ) ] )
           ( Assign
            ( Meta
             { meta = AnyT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath
                { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 162 } } )
            ( Cast AnyT
             ( Var
              ( Meta
               { meta = AnyT, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath
                  { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 161 } } ) ) )
            ( Assign
             ( Meta
              { meta = AnyT, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath
                 { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 163 } } )
             ( Call
              ( Var
               ( Meta
                { meta = [ AnyT ] :-> AnyT, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath
                   { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 156 } } ) )
              [ Var
               ( Meta
                { meta = AnyT, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath
                   { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 162 } } ) ] )
             ( Assign
              ( Meta
               { meta = AnyT, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath
                  { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 164 } } )
              ( Cast AnyT
               ( Var
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath
                    { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 163 } } ) ) )
              ( Assign
               ( Meta
                { meta = AnyT, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath
                   { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 165 } } )
               ( Call
                ( Var
                 ( Meta
                  { meta = [ AnyT ] :-> AnyT, id = Id
                   { name = "null", moduleName = Artifact
                    ( ArtifactPath
                     { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = External } } ) )
                [ Var
                 ( Meta
                  { meta = AnyT, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath
                     { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 164 } } ) ] )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath
                    { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 166 } } )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath
                      { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 165 } } ) ) )
                ( Assign
                 ( Meta
                  { meta =
                   [ [ AnyT ] :-> AnyT ] :-> AnyT, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath
                     { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 167 } } )
                 ( Call
                  ( Var
                   ( Meta
                    { meta = [ AnyT ] :->
                     ( [ [ AnyT ] :-> AnyT ] :-> AnyT ), id = Id
                     { name = "|>", moduleName = Artifact
                      ( ArtifactPath
                       { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = External } } ) )
                  [ Var
                   ( Meta
                    { meta = AnyT, id = Id
                     { name = "d", moduleName = Artifact
                      ( ArtifactPath
                       { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 166 } } ) ] )
                 ( Assign
                  ( Meta
                   { meta =
                    [ [ AnyT ] :-> SumT [ Con Tuple [] ] ] :-> SumT
                    [ Con Tuple [] ], id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath
                      { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 168 } } )
                  ( Cast
                   (
                    [ [ AnyT ] :-> SumT [ Con Tuple [] ] ] :-> SumT
                    [ Con Tuple [] ] )
                   ( Var
                    ( Meta
                     { meta =
                      [ [ AnyT ] :-> AnyT ] :-> AnyT, id = Id
                      { name = "d", moduleName = Artifact
                       ( ArtifactPath
                        { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 167 } } ) ) )
                  ( Let
                   [ LocalDef
                    { _variable = Meta
                     { meta = [ AnyT ] :-> SumT
                      [ Con Tuple [] ], id = Id
                      { name = "fun", moduleName = Artifact
                       ( ArtifactPath
                        { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 174 } }, typ = [ AnyT ] :-> SumT
                     [ Con Tuple [] ], _object = Fun
                     [ Meta
                      { meta = AnyT, id = Id
                       { name = "false", moduleName = Artifact
                        ( ArtifactPath
                         { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 169 } } ]
                     ( Assign
                      ( Meta
                       { meta = SumT
                        [ Con
                         ( Data "test/testcases/malgo/Null.mlg.False" ) [], Con
                         ( Data "test/testcases/malgo/Null.mlg.True" ) [] ], id = Id
                        { name = "scrutinee", moduleName = Artifact
                         ( ArtifactPath
                          { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 179 } } )
                      ( Cast
                       ( SumT
                        [ Con
                         ( Data "test/testcases/malgo/Null.mlg.False" ) [], Con
                         ( Data "test/testcases/malgo/Null.mlg.True" ) [] ] )
                       ( Var
                        ( Meta
                         { meta = AnyT, id = Id
                          { name = "false", moduleName = Artifact
                           ( ArtifactPath
                            { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 169 } } ) ) )
                      ( Switch
                       ( Var
                        ( Meta
                         { meta = SumT
                          [ Con
                           ( Data "test/testcases/malgo/Null.mlg.False" ) [], Con
                           ( Data "test/testcases/malgo/Null.mlg.True" ) [] ], id = Id
                          { name = "scrutinee", moduleName = Artifact
                           ( ArtifactPath
                            { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 179 } } ) )
                       [
                        ( Data "test/testcases/malgo/Null.mlg.False", Destruct
                         ( Var
                          ( Meta
                           { meta = SumT
                            [ Con
                             ( Data "test/testcases/malgo/Null.mlg.False" ) [], Con
                             ( Data "test/testcases/malgo/Null.mlg.True" ) [] ], id = Id
                            { name = "scrutinee", moduleName = Artifact
                             ( ArtifactPath
                              { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 179 } } ) )
                         ( Con
                          ( Data "test/testcases/malgo/Null.mlg.False" ) [] ) []
                         ( Assign
                          ( Meta
                           { meta = SumT
                            [ Con Tuple [] ], id = Id
                            { name = "d", moduleName = Artifact
                             ( ArtifactPath
                              { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 170 } } )
                          ( Call
                           ( Var
                            ( Meta
                             { meta = [ StringT ] :-> SumT
                              [ Con Tuple [] ], id = Id
                              { name = "malgo_print_string", moduleName = Artifact
                               ( ArtifactPath
                                { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = External } } ) )
                           [ Unboxed ( String "OK" ) ] )
                          ( Cast
                           ( SumT [ Con Tuple [] ] )
                           ( Var
                            ( Meta
                             { meta = SumT
                              [ Con Tuple [] ], id = Id
                              { name = "d", moduleName = Artifact
                               ( ArtifactPath
                                { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 170 } } ) ) ) ) ),
                        ( Data "test/testcases/malgo/Null.mlg.True", Destruct
                         ( Var
                          ( Meta
                           { meta = SumT
                            [ Con
                             ( Data "test/testcases/malgo/Null.mlg.False" ) [], Con
                             ( Data "test/testcases/malgo/Null.mlg.True" ) [] ], id = Id
                            { name = "scrutinee", moduleName = Artifact
                             ( ArtifactPath
                              { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 179 } } ) )
                         ( Con
                          ( Data "test/testcases/malgo/Null.mlg.True" ) [] ) []
                         ( Let
                          [ LocalDef
                           { _variable = Meta
                            { meta = SumT
                             [ Con Tuple [] ], id = Id
                             { name = "let", moduleName = Artifact
                              ( ArtifactPath
                               { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 171 } }, typ = SumT
                            [ Con Tuple [] ], _object = Pack
                            ( SumT [ Con Tuple [] ] )
                            ( Con Tuple [] ) [] } ]
                          ( Assign
                           ( Meta
                            { meta = AnyT, id = Id
                             { name = "d", moduleName = Artifact
                              ( ArtifactPath
                               { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 173 } } )
                           ( Call
                            ( Var
                             ( Meta
                              { meta =
                               [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
                               { name = "malgo_exit_failure", moduleName = Artifact
                                ( ArtifactPath
                                 { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = External } } ) )
                            [ Var
                             ( Meta
                              { meta = SumT
                               [ Con Tuple [] ], id = Id
                               { name = "let", moduleName = Artifact
                                ( ArtifactPath
                                 { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 171 } } ) ] )
                           ( Cast
                            ( SumT [ Con Tuple [] ] )
                            ( Var
                             ( Meta
                              { meta = AnyT, id = Id
                               { name = "d", moduleName = Artifact
                                ( ArtifactPath
                                 { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 173 } } ) ) ) ) ) ) ]
                       ( Error ( SumT [ Con Tuple [] ] ) ) ) ) } ]
                   ( Assign
                    ( Meta
                     { meta = SumT
                      [ Con Tuple [] ], id = Id
                      { name = "d", moduleName = Artifact
                       ( ArtifactPath
                        { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 176 } } )
                    ( Call
                     ( Var
                      ( Meta
                       { meta =
                        [ [ AnyT ] :-> SumT [ Con Tuple [] ] ] :-> SumT
                        [ Con Tuple [] ], id = Id
                        { name = "d", moduleName = Artifact
                         ( ArtifactPath
                          { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 168 } } ) )
                     [ Var
                      ( Meta
                       { meta = [ AnyT ] :-> SumT
                        [ Con Tuple [] ], id = Id
                        { name = "fun", moduleName = Artifact
                         ( ArtifactPath
                          { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 174 } } ) ] )
                    ( Cast
                     ( SumT [ Con Tuple [] ] )
                     ( Var
                      ( Meta
                       { meta = SumT
                        [ Con Tuple [] ], id = Id
                        { name = "d", moduleName = Artifact
                         ( ArtifactPath
                          { rawPath = "./test/testcases/malgo/Null.mlg", originPath = "/workspaces/malgo/test/testcases/malgo/Null.mlg", relPath = "test/testcases/malgo/Null.mlg", targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Null.mlg" } ), sort = Temporal 176 } } ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ], extFuns =
  [
   ( "malgo_print_string", [ StringT ] :-> SumT [ Con Tuple [] ] ),
   ( "malgo_exit_failure", [ SumT [ Con Tuple [] ] ] :-> AnyT ) ] }