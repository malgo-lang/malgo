; ModuleID = 'test/testcases/malgo/TestEither.mlg'
source_filename = "test/testcases/malgo/TestEither.mlg"

@str5040 = unnamed_addr constant [12 x i8] c"unreachable\00"
@str5097 = unnamed_addr constant [6 x i8] c"error\00"

declare void @GC_init()

declare ptr @malgo_panic(ptr)

declare ptr @malgo_unsafe_cast(ptr)

declare i32 @malgo_add_int32_t(i32, i32)

declare i32 @malgo_sub_int32_t(i32, i32)

declare i32 @malgo_mul_int32_t(i32, i32)

declare i32 @malgo_div_int32_t(i32, i32)

declare i64 @malgo_add_int64_t(i64, i64)

declare i64 @malgo_sub_int64_t(i64, i64)

declare i64 @malgo_mul_int64_t(i64, i64)

declare i64 @malgo_div_int64_t(i64, i64)

declare float @malgo_add_float(float, float)

declare float @malgo_sub_float(float, float)

declare float @malgo_mul_float(float, float)

declare float @malgo_div_float(float, float)

declare double @malgo_add_double(double, double)

declare double @malgo_sub_double(double, double)

declare double @malgo_mul_double(double, double)

declare double @malgo_div_double(double, double)

declare float @sqrtf(float)

declare double @sqrt(double)

declare i32 @malgo_eq_int32_t(i32, i32)

declare i32 @malgo_ne_int32_t(i32, i32)

declare i32 @malgo_lt_int32_t(i32, i32)

declare i32 @malgo_gt_int32_t(i32, i32)

declare i32 @malgo_le_int32_t(i32, i32)

declare i32 @malgo_ge_int32_t(i32, i32)

declare i32 @malgo_eq_int64_t(i64, i64)

declare i32 @malgo_ne_int64_t(i64, i64)

declare i32 @malgo_lt_int64_t(i64, i64)

declare i32 @malgo_gt_int64_t(i64, i64)

declare i32 @malgo_le_int64_t(i64, i64)

declare i32 @malgo_ge_int64_t(i64, i64)

declare i32 @malgo_eq_float(float, float)

declare i32 @malgo_ne_float(float, float)

declare i32 @malgo_lt_float(float, float)

declare i32 @malgo_gt_float(float, float)

declare i32 @malgo_le_float(float, float)

declare i32 @malgo_ge_float(float, float)

declare i32 @malgo_eq_double(double, double)

declare i32 @malgo_ne_double(double, double)

declare i32 @malgo_lt_double(double, double)

declare i32 @malgo_gt_double(double, double)

declare i32 @malgo_le_double(double, double)

declare i32 @malgo_ge_double(double, double)

declare i32 @malgo_eq_char(i8, i8)

declare i32 @malgo_ne_char(i8, i8)

declare i32 @malgo_lt_char(i8, i8)

declare i32 @malgo_gt_char(i8, i8)

declare i32 @malgo_le_char(i8, i8)

declare i32 @malgo_ge_char(i8, i8)

declare i32 @malgo_eq_string(ptr, ptr)

declare i32 @malgo_ne_string(ptr, ptr)

declare i32 @malgo_lt_string(ptr, ptr)

declare i32 @malgo_gt_string(ptr, ptr)

declare i32 @malgo_le_string(ptr, ptr)

declare i32 @malgo_ge_string(ptr, ptr)

declare i32 @malgo_char_ord(i8)

declare i32 @malgo_is_digit(i8)

declare i32 @malgo_is_lower(i8)

declare i32 @malgo_is_upper(i8)

declare i32 @malgo_is_alphanum(i8)

declare i64 @malgo_string_length(ptr)

declare i8 @malgo_string_at(i64, ptr)

declare ptr @malgo_string_cons(i8, ptr)

declare ptr @malgo_string_append(ptr, ptr)

declare ptr @malgo_substring(ptr, i64, i64)

declare ptr @malgo_int32_t_to_string(i32)

declare ptr @malgo_int64_t_to_string(i64)

declare ptr @malgo_float_to_string(float)

declare ptr @malgo_double_to_string(double)

declare ptr @malgo_char_to_string(i8)

declare ptr @malgo_exit_failure(ptr)

declare ptr @malgo_newline(ptr)

declare ptr @malgo_print_char(i8)

declare ptr @malgo_print_string(ptr)

declare ptr @malgo_flush(ptr)

declare i8 @malgo_get_char(ptr)

declare ptr @malgo_get_contents(ptr)

declare ptr @malgo_malloc(i64)

define internal ptr @"TestEither.#let_closure_4898"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4883"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4898", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4899"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4755"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4899", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4900"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4787"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4900", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4901"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4819"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4901", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4902"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4851"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4902", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4903"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4691"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4903", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4904"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4723"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4904", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4905"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4882"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4905", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4906"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4754"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4906", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4907"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4786"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4907", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4908"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4818"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4908", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4909"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4850"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4909", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4910"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4690"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4910", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4911"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4722"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4911", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @Builtin.toStringInt32(ptr %0, ptr %"Builtin.$int32#_2181_0") {
  %2 = getelementptr { i8, <4 x i8> }, ptr %"Builtin.$int32#_2181_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %1
  %4 = getelementptr { i8, { i32 } }, ptr %"Builtin.$int32#_2181_0", i32 0, i32 1
  %5 = getelementptr { i32 }, ptr %4, i32 0, i32 0
  %6 = load i32, ptr %5, align 4
  %7 = call ptr @malgo_int32_t_to_string(i32 %6)
  %8 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %9 = getelementptr { i8, { ptr } }, ptr %8, i32 0, i32 0
  store i8 0, ptr %9, align 1
  %10 = getelementptr { i8, { ptr } }, ptr %8, i32 0, i32 1, i32 0
  store ptr %7, ptr %10, align 8
  ret ptr %8

switch_default_0:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4912"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4881"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4912", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4913"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4753"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4913", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4914"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4785"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4914", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4915"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4817"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4915", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4916"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4849"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4916", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4917"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4689"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4917", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4918"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4721"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4918", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.$raw_let_4446"(ptr %0, ptr %"TestEither.$__254_0", ptr %"TestEither.$left_255_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_255_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_0 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_255_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %8 = getelementptr { i8, { ptr } }, ptr %7, i32 0, i32 0
  store i8 0, ptr %8, align 1
  %9 = getelementptr { i8, { ptr } }, ptr %7, i32 0, i32 1, i32 0
  store ptr %6, ptr %9, align 8
  ret ptr %7

switch_branch_TestEither.Right_0:                 ; preds = %1
  %10 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_255_0", i32 0, i32 1
  %11 = getelementptr { ptr }, ptr %10, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr { ptr, ptr }, ptr %"TestEither.$__254_0", i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr { ptr, ptr }, ptr %"TestEither.$__254_0", i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = call ptr %16(ptr %14, ptr %12)
  ret ptr %17

switch_default_0:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4919"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4880"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4919", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4920"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4752"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4920", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4921"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4784"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4921", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4922"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4816"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4922", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4923"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4848"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4923", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4924"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4688"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4924", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4925"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4720"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4925", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @TestEither.id(ptr %0, ptr %"TestEither.$x_253_0") {
  ret ptr %"TestEither.$x_253_0"
}

define internal ptr @"TestEither.#let_closure_4926"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4887"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4926", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4927"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4759"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4927", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4928"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4791"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4928", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4929"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4823"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4929", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4930"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4855"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4930", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4931"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4695"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4931", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4932"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4727"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4932", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4933"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4886"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4933", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4934"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4758"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4934", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4935"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4790"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4935", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4936"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4822"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4936", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4937"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4854"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4937", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4938"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4694"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4938", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4939"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4726"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4939", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @Prelude.putStr(ptr %0, ptr %"Prelude.$str_723_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"Prelude.$str_723_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"Prelude.$str_723_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @malgo_print_string(ptr %6)
  ret ptr %7

switch_default_0:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4940"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4885"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4940", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4941"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4757"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4941", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4942"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4789"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4942", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4943"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4821"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4943", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4944"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4853"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4944", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4945"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4693"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4945", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4946"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4725"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4946", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4947"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4884"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4947", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4948"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4756"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4948", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4949"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4788"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4949", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4950"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4820"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4950", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4951"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4852"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4951", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4952"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4692"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4952", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4953"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4724"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4953", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4954"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4891"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4954", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4955"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4763"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4955", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4956"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4795"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4956", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4957"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4827"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4957", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4958"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4859"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4958", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4959"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4699"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4959", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4960"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4731"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4960", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4961"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4890"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4961", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4962"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4762"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4962", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4963"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4794"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4963", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4964"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4826"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4964", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4965"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4858"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4965", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4966"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4698"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4966", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4967"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4730"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4967", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @Prelude.putStrLn(ptr %0, ptr %"Prelude.$str_716_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"Prelude.$str_716_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"Prelude.$str_716_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @malgo_print_string(ptr %6)
  %8 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %9 = getelementptr { i8, {} }, ptr %8, i32 0, i32 0
  store i8 0, ptr %9, align 1
  %10 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %11 = getelementptr { i8, {} }, ptr %10, i32 0, i32 0
  store i8 0, ptr %11, align 1
  %12 = call ptr @malgo_newline(ptr %10)
  ret ptr %12

switch_default_0:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4968"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4889"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4968", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4969"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4761"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4969", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4970"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4793"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4970", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4971"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4825"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4971", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4972"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4857"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4972", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4973"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4697"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4973", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4974"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4729"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4974", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4975"(ptr %0, ptr %1) {
  %__addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %__0 = load ptr, ptr %__addr_0, align 8
  %3 = call ptr @"TestEither.$raw_let_4446"(ptr null, ptr %__0, ptr %1)
  ret ptr %3
}

define internal ptr @TestEither.andThen(ptr %0, ptr %"TestEither.$__254_0") {
  %2 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %__0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %"TestEither.$__254_0", ptr %__0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %2, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %2, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4975", ptr %let_func_0, align 8
  ret ptr %2
}

define internal ptr @"TestEither.#let_closure_4976"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4888"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4976", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4977"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4760"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4977", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4978"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4792"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4978", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4979"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4824"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4979", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4980"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4856"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4980", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4981"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4696"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4981", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4982"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4728"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4982", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4983"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4895"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4983", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4984"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4767"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4984", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4985"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4799"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4985", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4986"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4831"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4986", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4987"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4863"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4987", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4988"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4703"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4988", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4989"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4735"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4989", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4990"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4894"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4990", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4991"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4766"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4991", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4992"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4798"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4992", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4993"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4830"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4993", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4994"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4862"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4994", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4995"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4702"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4995", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4996"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4734"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4996", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4997"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4893"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4997", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4998"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4765"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4998", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_4999"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4797"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_4999", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5000"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4829"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5000", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5001"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4861"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5001", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5002"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4701"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5002", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5003"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4733"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5003", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5004"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4892"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5004", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5005"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4764"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5005", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5006"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4796"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5006", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5007"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4828"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5007", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5008"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4860"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5008", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5009"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4700"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5009", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5010"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4732"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5010", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5011"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4867"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5011", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5012"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4739"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5012", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5013"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4771"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5013", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5014"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4803"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5014", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5015"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4835"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5015", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5016"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4675"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5016", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5017"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4707"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5017", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5018"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4866"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5018", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5019"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4738"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5019", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5020"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4770"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5020", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5021"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4802"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5021", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5022"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4834"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5022", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5023"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4674"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5023", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5024"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4706"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5024", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5025"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4865"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5025", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5026"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4897"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5026", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5027"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4737"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5027", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5028"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4769"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5028", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5029"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4801"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5029", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5030"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4833"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5030", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5031"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4673"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5031", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5032"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4705"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5032", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal i32 @"TestEither.#let_closure_5033"(ptr %0, i32 %1) {
  %x_addr_0 = getelementptr { i32 }, ptr %0, i32 0, i32 0
  %x_0 = load i32, ptr %x_addr_0, align 4
  %3 = call i32 @malgo_add_int32_t(i32 %x_0, i32 %1)
  ret i32 %3
}

define internal ptr @"Builtin.addInt32#"(ptr %0, i32 %"Builtin.$x_4027_0") {
  %2 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i32 }, ptr null, i32 1) to i64))
  %x_0 = getelementptr { i32 }, ptr %let_capture_0, i32 0, i32 0
  store i32 %"Builtin.$x_4027_0", ptr %x_0, align 4
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %2, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %2, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5033", ptr %let_func_0, align 8
  ret ptr %2
}

define internal ptr @"TestEither.#let_closure_5034"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4864"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5034", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5035"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4896"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5035", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5036"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4736"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5036", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5037"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4768"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5037", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5038"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4800"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5038", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5039"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4832"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5039", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.$raw_fun_4672"(ptr %0, ptr %"TestEither.$right_275_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$right_275_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_3 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$right_275_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %8 = getelementptr { i8, { ptr } }, ptr %7, i32 0, i32 0
  store i8 0, ptr %8, align 1
  %9 = getelementptr { i8, { ptr } }, ptr %7, i32 0, i32 1, i32 0
  store ptr @str5040, ptr %9, align 8
  %10 = getelementptr { i8, <8 x i8> }, ptr %7, i32 0, i32 0
  %11 = load i8, ptr %10, align 1
  switch i8 %11, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %12 = getelementptr { i8, { ptr } }, ptr %7, i32 0, i32 1
  %13 = getelementptr { ptr }, ptr %12, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @malgo_print_string(ptr %14)
  %16 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %17 = getelementptr { i8, {} }, ptr %16, i32 0, i32 0
  store i8 0, ptr %17, align 1
  %18 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %19 = getelementptr { i8, {} }, ptr %18, i32 0, i32 0
  store i8 0, ptr %19, align 1
  %20 = call ptr @malgo_newline(ptr %18)
  ret ptr %20

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %21 = getelementptr { i8, { ptr } }, ptr %"TestEither.$right_275_0", i32 0, i32 1
  %22 = getelementptr { ptr }, ptr %21, i32 0, i32 0
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr { i8, <4 x i8> }, ptr %23, i32 0, i32 0
  %25 = load i8, ptr %24, align 1
  switch i8 %25, label %switch_default_2 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %26 = getelementptr { i8, { i32 } }, ptr %23, i32 0, i32 1
  %27 = getelementptr { i32 }, ptr %26, i32 0, i32 0
  %28 = load i32, ptr %27, align 4
  %29 = call ptr @malgo_int32_t_to_string(i32 %28)
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %31 = getelementptr { i8, { ptr } }, ptr %30, i32 0, i32 0
  store i8 0, ptr %31, align 1
  %32 = getelementptr { i8, { ptr } }, ptr %30, i32 0, i32 1, i32 0
  store ptr %29, ptr %32, align 8
  %33 = getelementptr { i8, <8 x i8> }, ptr %30, i32 0, i32 0
  %34 = load i8, ptr %33, align 1
  switch i8 %34, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.String#_1"
  ]

"switch_branch_Builtin.String#_1":                ; preds = %"switch_branch_Builtin.Int32#_0"
  %35 = getelementptr { i8, { ptr } }, ptr %30, i32 0, i32 1
  %36 = getelementptr { ptr }, ptr %35, i32 0, i32 0
  %37 = load ptr, ptr %36, align 8
  %38 = call ptr @malgo_print_string(ptr %37)
  ret ptr %38

switch_default_1:                                 ; preds = %"switch_branch_Builtin.Int32#_0"
  unreachable

switch_default_2:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_3:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5041"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4704"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5041", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5042"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4871"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5042", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5043"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4743"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5043", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5044"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4775"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5044", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5045"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4807"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5045", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5046"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4839"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5046", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5047"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4679"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5047", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5048"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4711"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5048", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @Builtin.malgo_int32_t_to_string(ptr %0, i32 %"Builtin.$p_2155_0") {
  %2 = call ptr @malgo_int32_t_to_string(i32 %"Builtin.$p_2155_0")
  ret ptr %2
}

define internal ptr @"TestEither.#let_closure_5049"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4870"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5049", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5050"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4742"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5050", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"Builtin.Int32#"(ptr %0, i32 %"Builtin.$p_1792_0") {
  %2 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { i32 } }, ptr null, i32 1) to i64))
  %3 = getelementptr { i8, { i32 } }, ptr %2, i32 0, i32 0
  store i8 0, ptr %3, align 1
  %4 = getelementptr { i8, { i32 } }, ptr %2, i32 0, i32 1, i32 0
  store i32 %"Builtin.$p_1792_0", ptr %4, align 4
  ret ptr %2
}

define internal ptr @"TestEither.#let_closure_5051"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4774"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5051", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5052"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4806"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5052", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5053"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4838"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5053", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5054"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4678"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5054", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5055"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4710"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5055", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5056"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4869"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5056", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5057"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4741"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5057", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5058"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4773"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5058", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5059"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4805"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5059", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5060"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4837"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5060", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5061"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4677"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5061", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5062"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4709"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5062", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @TestEither.Left(ptr %0, ptr %"TestEither.$p_249_0") {
  %2 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %3 = getelementptr { i8, { ptr } }, ptr %2, i32 0, i32 0
  store i8 0, ptr %3, align 1
  %4 = getelementptr { i8, { ptr } }, ptr %2, i32 0, i32 1, i32 0
  store ptr %"TestEither.$p_249_0", ptr %4, align 8
  ret ptr %2
}

define internal ptr @"TestEither.#let_closure_5063"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4868"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5063", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5064"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4740"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5064", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5065"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4772"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5065", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5066"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4804"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5066", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5067"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4836"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5067", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5068"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4676"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5068", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5069"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4708"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5069", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5070"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4875"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5070", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5071"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4747"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5071", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5072"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4779"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5072", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5073"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4811"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5073", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5074"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4843"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5074", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5075"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4683"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5075", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5076"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4715"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5076", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5077"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4874"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5077", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5078"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4746"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5078", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5079"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4778"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5079", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5080"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4810"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5080", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5081"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4842"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5081", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5082"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4682"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5082", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5083"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4714"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5083", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5084"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4873"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5084", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5085"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4745"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5085", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5086"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4777"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5086", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5087"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4809"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5087", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5088"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4841"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5088", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5089"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4681"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5089", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5090"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4713"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5090", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5091"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.#fun_closure_5092"(ptr %0, ptr %1) {
  %3 = call ptr @"TestEither.$raw_fun_4672"(ptr null, ptr %1)
  ret ptr %3
}

define internal ptr @"TestEither.#let_closure_5093"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.#fun_closure_5094"(ptr %0, ptr %1) {
  %3 = call ptr @"TestEither.$raw_fun_4673"(ptr null, ptr %1)
  ret ptr %3
}

define internal ptr @"TestEither.#let_closure_5095"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.#fun_closure_5096"(ptr %0, ptr %1) {
  %3 = call ptr @"TestEither.$raw_fun_4674"(ptr null, ptr %1)
  ret ptr %3
}

define internal ptr @"TestEither.#let_closure_5098"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.#fun_closure_5099"(ptr %0, ptr %1) {
  %3 = call ptr @"TestEither.$raw_fun_4678"(ptr null, ptr %1)
  ret ptr %3
}

define internal ptr @"TestEither.#let_closure_5100"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.#fun_closure_5101"(ptr %0, ptr %1) {
  %3 = call ptr @"TestEither.$raw_fun_4679"(ptr null, ptr %1)
  ret ptr %3
}

define internal ptr @"TestEither.#let_closure_5102"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.#let_closure_5103"(ptr %0, ptr %1) {
  %cast_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %cast_0 = load ptr, ptr %cast_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %cast_0)
  ret ptr %7
}

define internal ptr @"TestEither.#let_closure_5104"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.#fun_closure_5105"(ptr %0, ptr %1) {
  %3 = call ptr @"TestEither.$raw_fun_4688"(ptr null, ptr %1)
  ret ptr %3
}

define internal ptr @"TestEither.#let_closure_5106"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.#fun_closure_5107"(ptr %0, ptr %1) {
  %3 = call ptr @"TestEither.$raw_fun_4689"(ptr null, ptr %1)
  ret ptr %3
}

define internal ptr @"TestEither.#let_closure_5108"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.#fun_closure_5109"(ptr %0, ptr %1) {
  %3 = call ptr @"TestEither.$raw_fun_4693"(ptr null, ptr %1)
  ret ptr %3
}

define internal ptr @"TestEither.#let_closure_5110"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.#fun_closure_5111"(ptr %0, ptr %1) {
  %3 = call ptr @"TestEither.$raw_fun_4694"(ptr null, ptr %1)
  ret ptr %3
}

define internal ptr @"TestEither.#let_closure_5112"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.#fun_closure_5113"(ptr %0, ptr %1) {
  %3 = call ptr @"TestEither.$raw_fun_4718"(ptr null, ptr %1)
  ret ptr %3
}

define internal ptr @"TestEither.#let_closure_5114"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.#fun_closure_5115"(ptr %0, ptr %1) {
  %3 = call ptr @"TestEither.$raw_fun_4719"(ptr null, ptr %1)
  ret ptr %3
}

define internal ptr @"TestEither.#let_closure_5116"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.#fun_closure_5117"(ptr %0, ptr %1) {
  %3 = call ptr @"TestEither.$raw_fun_4723"(ptr null, ptr %1)
  ret ptr %3
}

define internal ptr @"TestEither.#let_closure_5118"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.#fun_closure_5119"(ptr %0, ptr %1) {
  %3 = call ptr @"TestEither.$raw_fun_4724"(ptr null, ptr %1)
  ret ptr %3
}

define internal ptr @"TestEither.#let_closure_5120"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.#let_closure_5121"(ptr %0, ptr %1) {
  %cast_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %cast_0 = load ptr, ptr %cast_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %cast_0)
  ret ptr %7
}

define internal ptr @"TestEither.#let_closure_5122"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.#fun_closure_5123"(ptr %0, ptr %1) {
  %3 = call ptr @"TestEither.$raw_fun_4733"(ptr null, ptr %1)
  ret ptr %3
}

define internal ptr @"TestEither.#let_closure_5124"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.#fun_closure_5125"(ptr %0, ptr %1) {
  %3 = call ptr @"TestEither.$raw_fun_4734"(ptr null, ptr %1)
  ret ptr %3
}

define internal ptr @"TestEither.#let_closure_5126"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.#fun_closure_5127"(ptr %0, ptr %1) {
  %3 = call ptr @"TestEither.$raw_fun_4738"(ptr null, ptr %1)
  ret ptr %3
}

define internal ptr @"TestEither.#let_closure_5128"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.#fun_closure_5129"(ptr %0, ptr %1) {
  %3 = call ptr @"TestEither.$raw_fun_4739"(ptr null, ptr %1)
  ret ptr %3
}

define internal ptr @TestEither.main(ptr %0, ptr %"TestEither.$$__268_0") {
  %2 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { i32 } }, ptr null, i32 1) to i64))
  %3 = getelementptr { i8, { i32 } }, ptr %2, i32 0, i32 0
  store i8 0, ptr %3, align 1
  %4 = getelementptr { i8, { i32 } }, ptr %2, i32 0, i32 1, i32 0
  store i32 1, ptr %4, align 4
  %5 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %6 = getelementptr { i8, { ptr } }, ptr %5, i32 0, i32 0
  store i8 1, ptr %6, align 1
  %7 = getelementptr { i8, { ptr } }, ptr %5, i32 0, i32 1, i32 0
  store ptr %2, ptr %7, align 8
  %8 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %5, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %8, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %8, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5091", ptr %let_func_0, align 8
  %9 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %fun_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({}, ptr null, i32 1) to i64))
  %fun_capture_1 = getelementptr { ptr, ptr }, ptr %9, i32 0, i32 0
  store ptr %fun_capture_0, ptr %fun_capture_1, align 8
  %fun_func_0 = getelementptr { ptr, ptr }, ptr %9, i32 0, i32 1
  store ptr @"TestEither.#fun_closure_5092", ptr %fun_func_0, align 8
  %10 = getelementptr { ptr, ptr }, ptr %8, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr { ptr, ptr }, ptr %8, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8
  %14 = call ptr %13(ptr %11, ptr %9)
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { i32 } }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, { i32 } }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = getelementptr { i8, { i32 } }, ptr %15, i32 0, i32 1, i32 0
  store i32 1, ptr %17, align 4
  %18 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %19 = getelementptr { i8, { ptr } }, ptr %18, i32 0, i32 0
  store i8 1, ptr %19, align 1
  %20 = getelementptr { i8, { ptr } }, ptr %18, i32 0, i32 1, i32 0
  store ptr %15, ptr %20, align 8
  %21 = getelementptr { i8, <8 x i8> }, ptr %18, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_32 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_7
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %23 = getelementptr { i8, { ptr } }, ptr %18, i32 0, i32 1
  %24 = getelementptr { ptr }, ptr %23, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %27 = getelementptr { i8, { ptr } }, ptr %26, i32 0, i32 0
  store i8 0, ptr %27, align 1
  %28 = getelementptr { i8, { ptr } }, ptr %26, i32 0, i32 1, i32 0
  store ptr %25, ptr %28, align 8
  %29 = getelementptr { i8, <8 x i8> }, ptr %26, i32 0, i32 0
  %30 = load i8, ptr %29, align 1
  switch i8 %30, label %switch_default_14 [
    i8 0, label %switch_branch_TestEither.Left_1
    i8 1, label %switch_branch_TestEither.Right_3
  ]

switch_branch_TestEither.Left_1:                  ; preds = %switch_branch_TestEither.Left_0
  %31 = getelementptr { i8, { ptr } }, ptr %26, i32 0, i32 1
  %32 = getelementptr { ptr }, ptr %31, i32 0, i32 0
  %33 = load ptr, ptr %32, align 8
  %34 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %35 = getelementptr { i8, { ptr } }, ptr %34, i32 0, i32 0
  store i8 0, ptr %35, align 1
  %36 = getelementptr { i8, { ptr } }, ptr %34, i32 0, i32 1, i32 0
  store ptr %33, ptr %36, align 8
  %37 = getelementptr { i8, <8 x i8> }, ptr %18, i32 0, i32 0
  %38 = load i8, ptr %37, align 1
  switch i8 %38, label %switch_default_6 [
    i8 0, label %switch_branch_TestEither.Left_2
    i8 1, label %switch_branch_TestEither.Right_1
  ]

switch_branch_TestEither.Left_2:                  ; preds = %switch_branch_TestEither.Left_1
  %39 = getelementptr { i8, { ptr } }, ptr %18, i32 0, i32 1
  %40 = getelementptr { ptr }, ptr %39, i32 0, i32 0
  %41 = load ptr, ptr %40, align 8
  %42 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %43 = getelementptr { i8, { ptr } }, ptr %42, i32 0, i32 0
  store i8 0, ptr %43, align 1
  %44 = getelementptr { i8, { ptr } }, ptr %42, i32 0, i32 1, i32 0
  store ptr %41, ptr %44, align 8
  %45 = getelementptr { i8, <8 x i8> }, ptr %42, i32 0, i32 0
  %46 = load i8, ptr %45, align 1
  switch i8 %46, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_3
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_3:                  ; preds = %switch_branch_TestEither.Left_2
  %47 = getelementptr { i8, { ptr } }, ptr %42, i32 0, i32 1
  %48 = getelementptr { ptr }, ptr %47, i32 0, i32 0
  %49 = load ptr, ptr %48, align 8
  %50 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %51 = getelementptr { i8, { ptr } }, ptr %50, i32 0, i32 0
  store i8 0, ptr %51, align 1
  %52 = getelementptr { i8, { ptr } }, ptr %50, i32 0, i32 1, i32 0
  store ptr %49, ptr %52, align 8
  %53 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_2 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_1 = getelementptr { ptr }, ptr %let_capture_2, i32 0, i32 0
  store ptr %50, ptr %d_1, align 8
  %let_capture_3 = getelementptr { ptr, ptr }, ptr %53, i32 0, i32 0
  store ptr %let_capture_2, ptr %let_capture_3, align 8
  %let_func_1 = getelementptr { ptr, ptr }, ptr %53, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5093", ptr %let_func_1, align 8
  %54 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %fun_capture_2 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({}, ptr null, i32 1) to i64))
  %fun_capture_3 = getelementptr { ptr, ptr }, ptr %54, i32 0, i32 0
  store ptr %fun_capture_2, ptr %fun_capture_3, align 8
  %fun_func_1 = getelementptr { ptr, ptr }, ptr %54, i32 0, i32 1
  store ptr @"TestEither.#fun_closure_5094", ptr %fun_func_1, align 8
  %55 = getelementptr { ptr, ptr }, ptr %53, i32 0, i32 0
  %56 = load ptr, ptr %55, align 8
  %57 = getelementptr { ptr, ptr }, ptr %53, i32 0, i32 1
  %58 = load ptr, ptr %57, align 8
  %59 = call ptr %58(ptr %56, ptr %54)
  ret ptr %59

switch_branch_TestEither.Right_0:                 ; preds = %switch_branch_TestEither.Left_2
  %60 = getelementptr { i8, { ptr } }, ptr %42, i32 0, i32 1
  %61 = getelementptr { ptr }, ptr %60, i32 0, i32 0
  %62 = load ptr, ptr %61, align 8
  %63 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { i32 } }, ptr null, i32 1) to i64))
  %64 = getelementptr { i8, { i32 } }, ptr %63, i32 0, i32 0
  store i8 0, ptr %64, align 1
  %65 = getelementptr { i8, { i32 } }, ptr %63, i32 0, i32 1, i32 0
  store i32 1, ptr %65, align 4
  %66 = getelementptr { i8, <4 x i8> }, ptr %62, i32 0, i32 0
  %67 = load i8, ptr %66, align 1
  switch i8 %67, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %68 = getelementptr { i8, { i32 } }, ptr %62, i32 0, i32 1
  %69 = getelementptr { i32 }, ptr %68, i32 0, i32 0
  %70 = load i32, ptr %69, align 4
  %71 = getelementptr { i8, <4 x i8> }, ptr %63, i32 0, i32 0
  %72 = load i8, ptr %71, align 1
  switch i8 %72, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.Int32#_1"
  ]

"switch_branch_Builtin.Int32#_1":                 ; preds = %"switch_branch_Builtin.Int32#_0"
  %73 = getelementptr { i8, { i32 } }, ptr %63, i32 0, i32 1
  %74 = getelementptr { i32 }, ptr %73, i32 0, i32 0
  %75 = load i32, ptr %74, align 4
  %76 = call ptr @"Builtin.addInt32#"(ptr null, i32 %70)
  %77 = getelementptr { ptr, ptr }, ptr %76, i32 0, i32 0
  %78 = load ptr, ptr %77, align 8
  %79 = getelementptr { ptr, ptr }, ptr %76, i32 0, i32 1
  %80 = load ptr, ptr %79, align 8
  %81 = call i32 %80(ptr %78, i32 %75)
  %82 = call ptr @"Builtin.Int32#"(ptr null, i32 %81)
  %83 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %84 = getelementptr { i8, { ptr } }, ptr %83, i32 0, i32 0
  store i8 1, ptr %84, align 1
  %85 = getelementptr { i8, { ptr } }, ptr %83, i32 0, i32 1, i32 0
  store ptr %82, ptr %85, align 8
  %86 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_4 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_2 = getelementptr { ptr }, ptr %let_capture_4, i32 0, i32 0
  store ptr %83, ptr %d_2, align 8
  %let_capture_5 = getelementptr { ptr, ptr }, ptr %86, i32 0, i32 0
  store ptr %let_capture_4, ptr %let_capture_5, align 8
  %let_func_2 = getelementptr { ptr, ptr }, ptr %86, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5095", ptr %let_func_2, align 8
  %87 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %fun_capture_4 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({}, ptr null, i32 1) to i64))
  %fun_capture_5 = getelementptr { ptr, ptr }, ptr %87, i32 0, i32 0
  store ptr %fun_capture_4, ptr %fun_capture_5, align 8
  %fun_func_2 = getelementptr { ptr, ptr }, ptr %87, i32 0, i32 1
  store ptr @"TestEither.#fun_closure_5096", ptr %fun_func_2, align 8
  %88 = getelementptr { ptr, ptr }, ptr %86, i32 0, i32 0
  %89 = load ptr, ptr %88, align 8
  %90 = getelementptr { ptr, ptr }, ptr %86, i32 0, i32 1
  %91 = load ptr, ptr %90, align 8
  %92 = call ptr %91(ptr %89, ptr %87)
  ret ptr %92

switch_default_0:                                 ; preds = %"switch_branch_Builtin.Int32#_0"
  unreachable

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %switch_branch_TestEither.Left_2
  unreachable

switch_branch_TestEither.Right_1:                 ; preds = %switch_branch_TestEither.Left_1
  %93 = getelementptr { i8, { ptr } }, ptr %18, i32 0, i32 1
  %94 = getelementptr { ptr }, ptr %93, i32 0, i32 0
  %95 = load ptr, ptr %94, align 8
  %96 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %97 = getelementptr { i8, { ptr } }, ptr %96, i32 0, i32 0
  store i8 0, ptr %97, align 1
  %98 = getelementptr { i8, { ptr } }, ptr %96, i32 0, i32 1, i32 0
  store ptr @str5097, ptr %98, align 8
  %99 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %100 = getelementptr { i8, { ptr } }, ptr %99, i32 0, i32 0
  store i8 0, ptr %100, align 1
  %101 = getelementptr { i8, { ptr } }, ptr %99, i32 0, i32 1, i32 0
  store ptr %96, ptr %101, align 8
  %102 = getelementptr { i8, <8 x i8> }, ptr %99, i32 0, i32 0
  %103 = load i8, ptr %102, align 1
  switch i8 %103, label %switch_default_5 [
    i8 0, label %switch_branch_TestEither.Left_4
    i8 1, label %switch_branch_TestEither.Right_2
  ]

switch_branch_TestEither.Left_4:                  ; preds = %switch_branch_TestEither.Right_1
  %104 = getelementptr { i8, { ptr } }, ptr %99, i32 0, i32 1
  %105 = getelementptr { ptr }, ptr %104, i32 0, i32 0
  %106 = load ptr, ptr %105, align 8
  %107 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %108 = getelementptr { i8, { ptr } }, ptr %107, i32 0, i32 0
  store i8 0, ptr %108, align 1
  %109 = getelementptr { i8, { ptr } }, ptr %107, i32 0, i32 1, i32 0
  store ptr %106, ptr %109, align 8
  %110 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_6 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_3 = getelementptr { ptr }, ptr %let_capture_6, i32 0, i32 0
  store ptr %107, ptr %d_3, align 8
  %let_capture_7 = getelementptr { ptr, ptr }, ptr %110, i32 0, i32 0
  store ptr %let_capture_6, ptr %let_capture_7, align 8
  %let_func_3 = getelementptr { ptr, ptr }, ptr %110, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5098", ptr %let_func_3, align 8
  %111 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %fun_capture_6 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({}, ptr null, i32 1) to i64))
  %fun_capture_7 = getelementptr { ptr, ptr }, ptr %111, i32 0, i32 0
  store ptr %fun_capture_6, ptr %fun_capture_7, align 8
  %fun_func_3 = getelementptr { ptr, ptr }, ptr %111, i32 0, i32 1
  store ptr @"TestEither.#fun_closure_5099", ptr %fun_func_3, align 8
  %112 = getelementptr { ptr, ptr }, ptr %110, i32 0, i32 0
  %113 = load ptr, ptr %112, align 8
  %114 = getelementptr { ptr, ptr }, ptr %110, i32 0, i32 1
  %115 = load ptr, ptr %114, align 8
  %116 = call ptr %115(ptr %113, ptr %111)
  ret ptr %116

switch_branch_TestEither.Right_2:                 ; preds = %switch_branch_TestEither.Right_1
  %117 = getelementptr { i8, { ptr } }, ptr %99, i32 0, i32 1
  %118 = getelementptr { ptr }, ptr %117, i32 0, i32 0
  %119 = load ptr, ptr %118, align 8
  %120 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { i32 } }, ptr null, i32 1) to i64))
  %121 = getelementptr { i8, { i32 } }, ptr %120, i32 0, i32 0
  store i8 0, ptr %121, align 1
  %122 = getelementptr { i8, { i32 } }, ptr %120, i32 0, i32 1, i32 0
  store i32 1, ptr %122, align 4
  %123 = getelementptr { i8, <4 x i8> }, ptr %119, i32 0, i32 0
  %124 = load i8, ptr %123, align 1
  switch i8 %124, label %switch_default_4 [
    i8 0, label %"switch_branch_Builtin.Int32#_2"
  ]

"switch_branch_Builtin.Int32#_2":                 ; preds = %switch_branch_TestEither.Right_2
  %125 = getelementptr { i8, { i32 } }, ptr %119, i32 0, i32 1
  %126 = getelementptr { i32 }, ptr %125, i32 0, i32 0
  %127 = load i32, ptr %126, align 4
  %128 = getelementptr { i8, <4 x i8> }, ptr %120, i32 0, i32 0
  %129 = load i8, ptr %128, align 1
  switch i8 %129, label %switch_default_3 [
    i8 0, label %"switch_branch_Builtin.Int32#_3"
  ]

"switch_branch_Builtin.Int32#_3":                 ; preds = %"switch_branch_Builtin.Int32#_2"
  %130 = getelementptr { i8, { i32 } }, ptr %120, i32 0, i32 1
  %131 = getelementptr { i32 }, ptr %130, i32 0, i32 0
  %132 = load i32, ptr %131, align 4
  %133 = call ptr @"Builtin.addInt32#"(ptr null, i32 %127)
  %134 = getelementptr { ptr, ptr }, ptr %133, i32 0, i32 0
  %135 = load ptr, ptr %134, align 8
  %136 = getelementptr { ptr, ptr }, ptr %133, i32 0, i32 1
  %137 = load ptr, ptr %136, align 8
  %138 = call i32 %137(ptr %135, i32 %132)
  %139 = call ptr @"Builtin.Int32#"(ptr null, i32 %138)
  %140 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %141 = getelementptr { i8, { ptr } }, ptr %140, i32 0, i32 0
  store i8 1, ptr %141, align 1
  %142 = getelementptr { i8, { ptr } }, ptr %140, i32 0, i32 1, i32 0
  store ptr %139, ptr %142, align 8
  %143 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_8 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_4 = getelementptr { ptr }, ptr %let_capture_8, i32 0, i32 0
  store ptr %140, ptr %d_4, align 8
  %let_capture_9 = getelementptr { ptr, ptr }, ptr %143, i32 0, i32 0
  store ptr %let_capture_8, ptr %let_capture_9, align 8
  %let_func_4 = getelementptr { ptr, ptr }, ptr %143, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5100", ptr %let_func_4, align 8
  %144 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %fun_capture_8 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({}, ptr null, i32 1) to i64))
  %fun_capture_9 = getelementptr { ptr, ptr }, ptr %144, i32 0, i32 0
  store ptr %fun_capture_8, ptr %fun_capture_9, align 8
  %fun_func_4 = getelementptr { ptr, ptr }, ptr %144, i32 0, i32 1
  store ptr @"TestEither.#fun_closure_5101", ptr %fun_func_4, align 8
  %145 = getelementptr { ptr, ptr }, ptr %143, i32 0, i32 0
  %146 = load ptr, ptr %145, align 8
  %147 = getelementptr { ptr, ptr }, ptr %143, i32 0, i32 1
  %148 = load ptr, ptr %147, align 8
  %149 = call ptr %148(ptr %146, ptr %144)
  ret ptr %149

switch_default_3:                                 ; preds = %"switch_branch_Builtin.Int32#_2"
  unreachable

switch_default_4:                                 ; preds = %switch_branch_TestEither.Right_2
  unreachable

switch_default_5:                                 ; preds = %switch_branch_TestEither.Right_1
  unreachable

switch_default_6:                                 ; preds = %switch_branch_TestEither.Left_1
  unreachable

switch_branch_TestEither.Right_3:                 ; preds = %switch_branch_TestEither.Left_0
  %150 = getelementptr { i8, { ptr } }, ptr %26, i32 0, i32 1
  %151 = getelementptr { ptr }, ptr %150, i32 0, i32 0
  %152 = load ptr, ptr %151, align 8
  %153 = call ptr @Builtin.toStringInt32(ptr null, ptr %152)
  %154 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_10 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_5 = getelementptr { ptr }, ptr %let_capture_10, i32 0, i32 0
  store ptr %153, ptr %d_5, align 8
  %let_capture_11 = getelementptr { ptr, ptr }, ptr %154, i32 0, i32 0
  store ptr %let_capture_10, ptr %let_capture_11, align 8
  %let_func_5 = getelementptr { ptr, ptr }, ptr %154, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5102", ptr %let_func_5, align 8
  %155 = getelementptr { ptr, ptr }, ptr %154, i32 0, i32 0
  %156 = load ptr, ptr %155, align 8
  %157 = getelementptr { ptr, ptr }, ptr %154, i32 0, i32 1
  %158 = load ptr, ptr %157, align 8
  %159 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStr_capture_0 = getelementptr { ptr, ptr }, ptr %159, i32 0, i32 0
  store ptr null, ptr %putStr_capture_0, align 8
  %putStr_func_0 = getelementptr { ptr, ptr }, ptr %159, i32 0, i32 1
  store ptr @Prelude.putStr, ptr %putStr_func_0, align 8
  %160 = call ptr %158(ptr %156, ptr %159)
  %161 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_12 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %cast_0 = getelementptr { ptr }, ptr %let_capture_12, i32 0, i32 0
  store ptr %160, ptr %cast_0, align 8
  %let_capture_13 = getelementptr { ptr, ptr }, ptr %161, i32 0, i32 0
  store ptr %let_capture_12, ptr %let_capture_13, align 8
  %let_func_6 = getelementptr { ptr, ptr }, ptr %161, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5103", ptr %let_func_6, align 8
  %162 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %Right_capture_0 = getelementptr { ptr, ptr }, ptr %162, i32 0, i32 0
  store ptr null, ptr %Right_capture_0, align 8
  %Right_func_0 = getelementptr { ptr, ptr }, ptr %162, i32 0, i32 1
  store ptr @TestEither.Right, ptr %Right_func_0, align 8
  %163 = getelementptr { ptr, ptr }, ptr %161, i32 0, i32 0
  %164 = load ptr, ptr %163, align 8
  %165 = getelementptr { ptr, ptr }, ptr %161, i32 0, i32 1
  %166 = load ptr, ptr %165, align 8
  %167 = call ptr %166(ptr %164, ptr %162)
  %168 = getelementptr { i8, <8 x i8> }, ptr %18, i32 0, i32 0
  %169 = load i8, ptr %168, align 1
  switch i8 %169, label %switch_default_13 [
    i8 0, label %switch_branch_TestEither.Left_5
    i8 1, label %switch_branch_TestEither.Right_5
  ]

switch_branch_TestEither.Left_5:                  ; preds = %switch_branch_TestEither.Right_3
  %170 = getelementptr { i8, { ptr } }, ptr %18, i32 0, i32 1
  %171 = getelementptr { ptr }, ptr %170, i32 0, i32 0
  %172 = load ptr, ptr %171, align 8
  %173 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %174 = getelementptr { i8, { ptr } }, ptr %173, i32 0, i32 0
  store i8 0, ptr %174, align 1
  %175 = getelementptr { i8, { ptr } }, ptr %173, i32 0, i32 1, i32 0
  store ptr %172, ptr %175, align 8
  %176 = getelementptr { i8, <8 x i8> }, ptr %173, i32 0, i32 0
  %177 = load i8, ptr %176, align 1
  switch i8 %177, label %switch_default_9 [
    i8 0, label %switch_branch_TestEither.Left_6
    i8 1, label %switch_branch_TestEither.Right_4
  ]

switch_branch_TestEither.Left_6:                  ; preds = %switch_branch_TestEither.Left_5
  %178 = getelementptr { i8, { ptr } }, ptr %173, i32 0, i32 1
  %179 = getelementptr { ptr }, ptr %178, i32 0, i32 0
  %180 = load ptr, ptr %179, align 8
  %181 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %182 = getelementptr { i8, { ptr } }, ptr %181, i32 0, i32 0
  store i8 0, ptr %182, align 1
  %183 = getelementptr { i8, { ptr } }, ptr %181, i32 0, i32 1, i32 0
  store ptr %180, ptr %183, align 8
  %184 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_14 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_6 = getelementptr { ptr }, ptr %let_capture_14, i32 0, i32 0
  store ptr %181, ptr %d_6, align 8
  %let_capture_15 = getelementptr { ptr, ptr }, ptr %184, i32 0, i32 0
  store ptr %let_capture_14, ptr %let_capture_15, align 8
  %let_func_7 = getelementptr { ptr, ptr }, ptr %184, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5104", ptr %let_func_7, align 8
  %185 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %fun_capture_10 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({}, ptr null, i32 1) to i64))
  %fun_capture_11 = getelementptr { ptr, ptr }, ptr %185, i32 0, i32 0
  store ptr %fun_capture_10, ptr %fun_capture_11, align 8
  %fun_func_5 = getelementptr { ptr, ptr }, ptr %185, i32 0, i32 1
  store ptr @"TestEither.#fun_closure_5105", ptr %fun_func_5, align 8
  %186 = getelementptr { ptr, ptr }, ptr %184, i32 0, i32 0
  %187 = load ptr, ptr %186, align 8
  %188 = getelementptr { ptr, ptr }, ptr %184, i32 0, i32 1
  %189 = load ptr, ptr %188, align 8
  %190 = call ptr %189(ptr %187, ptr %185)
  ret ptr %190

switch_branch_TestEither.Right_4:                 ; preds = %switch_branch_TestEither.Left_5
  %191 = getelementptr { i8, { ptr } }, ptr %173, i32 0, i32 1
  %192 = getelementptr { ptr }, ptr %191, i32 0, i32 0
  %193 = load ptr, ptr %192, align 8
  %194 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { i32 } }, ptr null, i32 1) to i64))
  %195 = getelementptr { i8, { i32 } }, ptr %194, i32 0, i32 0
  store i8 0, ptr %195, align 1
  %196 = getelementptr { i8, { i32 } }, ptr %194, i32 0, i32 1, i32 0
  store i32 1, ptr %196, align 4
  %197 = getelementptr { i8, <4 x i8> }, ptr %193, i32 0, i32 0
  %198 = load i8, ptr %197, align 1
  switch i8 %198, label %switch_default_8 [
    i8 0, label %"switch_branch_Builtin.Int32#_4"
  ]

"switch_branch_Builtin.Int32#_4":                 ; preds = %switch_branch_TestEither.Right_4
  %199 = getelementptr { i8, { i32 } }, ptr %193, i32 0, i32 1
  %200 = getelementptr { i32 }, ptr %199, i32 0, i32 0
  %201 = load i32, ptr %200, align 4
  %202 = getelementptr { i8, <4 x i8> }, ptr %194, i32 0, i32 0
  %203 = load i8, ptr %202, align 1
  switch i8 %203, label %switch_default_7 [
    i8 0, label %"switch_branch_Builtin.Int32#_5"
  ]

"switch_branch_Builtin.Int32#_5":                 ; preds = %"switch_branch_Builtin.Int32#_4"
  %204 = getelementptr { i8, { i32 } }, ptr %194, i32 0, i32 1
  %205 = getelementptr { i32 }, ptr %204, i32 0, i32 0
  %206 = load i32, ptr %205, align 4
  %207 = call ptr @"Builtin.addInt32#"(ptr null, i32 %201)
  %208 = getelementptr { ptr, ptr }, ptr %207, i32 0, i32 0
  %209 = load ptr, ptr %208, align 8
  %210 = getelementptr { ptr, ptr }, ptr %207, i32 0, i32 1
  %211 = load ptr, ptr %210, align 8
  %212 = call i32 %211(ptr %209, i32 %206)
  %213 = call ptr @"Builtin.Int32#"(ptr null, i32 %212)
  %214 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %215 = getelementptr { i8, { ptr } }, ptr %214, i32 0, i32 0
  store i8 1, ptr %215, align 1
  %216 = getelementptr { i8, { ptr } }, ptr %214, i32 0, i32 1, i32 0
  store ptr %213, ptr %216, align 8
  %217 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_16 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_7 = getelementptr { ptr }, ptr %let_capture_16, i32 0, i32 0
  store ptr %214, ptr %d_7, align 8
  %let_capture_17 = getelementptr { ptr, ptr }, ptr %217, i32 0, i32 0
  store ptr %let_capture_16, ptr %let_capture_17, align 8
  %let_func_8 = getelementptr { ptr, ptr }, ptr %217, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5106", ptr %let_func_8, align 8
  %218 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %fun_capture_12 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({}, ptr null, i32 1) to i64))
  %fun_capture_13 = getelementptr { ptr, ptr }, ptr %218, i32 0, i32 0
  store ptr %fun_capture_12, ptr %fun_capture_13, align 8
  %fun_func_6 = getelementptr { ptr, ptr }, ptr %218, i32 0, i32 1
  store ptr @"TestEither.#fun_closure_5107", ptr %fun_func_6, align 8
  %219 = getelementptr { ptr, ptr }, ptr %217, i32 0, i32 0
  %220 = load ptr, ptr %219, align 8
  %221 = getelementptr { ptr, ptr }, ptr %217, i32 0, i32 1
  %222 = load ptr, ptr %221, align 8
  %223 = call ptr %222(ptr %220, ptr %218)
  ret ptr %223

switch_default_7:                                 ; preds = %"switch_branch_Builtin.Int32#_4"
  unreachable

switch_default_8:                                 ; preds = %switch_branch_TestEither.Right_4
  unreachable

switch_default_9:                                 ; preds = %switch_branch_TestEither.Left_5
  unreachable

switch_branch_TestEither.Right_5:                 ; preds = %switch_branch_TestEither.Right_3
  %224 = getelementptr { i8, { ptr } }, ptr %18, i32 0, i32 1
  %225 = getelementptr { ptr }, ptr %224, i32 0, i32 0
  %226 = load ptr, ptr %225, align 8
  %227 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %228 = getelementptr { i8, { ptr } }, ptr %227, i32 0, i32 0
  store i8 0, ptr %228, align 1
  %229 = getelementptr { i8, { ptr } }, ptr %227, i32 0, i32 1, i32 0
  store ptr @str5097, ptr %229, align 8
  %230 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %231 = getelementptr { i8, { ptr } }, ptr %230, i32 0, i32 0
  store i8 0, ptr %231, align 1
  %232 = getelementptr { i8, { ptr } }, ptr %230, i32 0, i32 1, i32 0
  store ptr %227, ptr %232, align 8
  %233 = getelementptr { i8, <8 x i8> }, ptr %230, i32 0, i32 0
  %234 = load i8, ptr %233, align 1
  switch i8 %234, label %switch_default_12 [
    i8 0, label %switch_branch_TestEither.Left_7
    i8 1, label %switch_branch_TestEither.Right_6
  ]

switch_branch_TestEither.Left_7:                  ; preds = %switch_branch_TestEither.Right_5
  %235 = getelementptr { i8, { ptr } }, ptr %230, i32 0, i32 1
  %236 = getelementptr { ptr }, ptr %235, i32 0, i32 0
  %237 = load ptr, ptr %236, align 8
  %238 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %239 = getelementptr { i8, { ptr } }, ptr %238, i32 0, i32 0
  store i8 0, ptr %239, align 1
  %240 = getelementptr { i8, { ptr } }, ptr %238, i32 0, i32 1, i32 0
  store ptr %237, ptr %240, align 8
  %241 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_18 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_8 = getelementptr { ptr }, ptr %let_capture_18, i32 0, i32 0
  store ptr %238, ptr %d_8, align 8
  %let_capture_19 = getelementptr { ptr, ptr }, ptr %241, i32 0, i32 0
  store ptr %let_capture_18, ptr %let_capture_19, align 8
  %let_func_9 = getelementptr { ptr, ptr }, ptr %241, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5108", ptr %let_func_9, align 8
  %242 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %fun_capture_14 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({}, ptr null, i32 1) to i64))
  %fun_capture_15 = getelementptr { ptr, ptr }, ptr %242, i32 0, i32 0
  store ptr %fun_capture_14, ptr %fun_capture_15, align 8
  %fun_func_7 = getelementptr { ptr, ptr }, ptr %242, i32 0, i32 1
  store ptr @"TestEither.#fun_closure_5109", ptr %fun_func_7, align 8
  %243 = getelementptr { ptr, ptr }, ptr %241, i32 0, i32 0
  %244 = load ptr, ptr %243, align 8
  %245 = getelementptr { ptr, ptr }, ptr %241, i32 0, i32 1
  %246 = load ptr, ptr %245, align 8
  %247 = call ptr %246(ptr %244, ptr %242)
  ret ptr %247

switch_branch_TestEither.Right_6:                 ; preds = %switch_branch_TestEither.Right_5
  %248 = getelementptr { i8, { ptr } }, ptr %230, i32 0, i32 1
  %249 = getelementptr { ptr }, ptr %248, i32 0, i32 0
  %250 = load ptr, ptr %249, align 8
  %251 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { i32 } }, ptr null, i32 1) to i64))
  %252 = getelementptr { i8, { i32 } }, ptr %251, i32 0, i32 0
  store i8 0, ptr %252, align 1
  %253 = getelementptr { i8, { i32 } }, ptr %251, i32 0, i32 1, i32 0
  store i32 1, ptr %253, align 4
  %254 = getelementptr { i8, <4 x i8> }, ptr %250, i32 0, i32 0
  %255 = load i8, ptr %254, align 1
  switch i8 %255, label %switch_default_11 [
    i8 0, label %"switch_branch_Builtin.Int32#_6"
  ]

"switch_branch_Builtin.Int32#_6":                 ; preds = %switch_branch_TestEither.Right_6
  %256 = getelementptr { i8, { i32 } }, ptr %250, i32 0, i32 1
  %257 = getelementptr { i32 }, ptr %256, i32 0, i32 0
  %258 = load i32, ptr %257, align 4
  %259 = getelementptr { i8, <4 x i8> }, ptr %251, i32 0, i32 0
  %260 = load i8, ptr %259, align 1
  switch i8 %260, label %switch_default_10 [
    i8 0, label %"switch_branch_Builtin.Int32#_7"
  ]

"switch_branch_Builtin.Int32#_7":                 ; preds = %"switch_branch_Builtin.Int32#_6"
  %261 = getelementptr { i8, { i32 } }, ptr %251, i32 0, i32 1
  %262 = getelementptr { i32 }, ptr %261, i32 0, i32 0
  %263 = load i32, ptr %262, align 4
  %264 = call ptr @"Builtin.addInt32#"(ptr null, i32 %258)
  %265 = getelementptr { ptr, ptr }, ptr %264, i32 0, i32 0
  %266 = load ptr, ptr %265, align 8
  %267 = getelementptr { ptr, ptr }, ptr %264, i32 0, i32 1
  %268 = load ptr, ptr %267, align 8
  %269 = call i32 %268(ptr %266, i32 %263)
  %270 = call ptr @"Builtin.Int32#"(ptr null, i32 %269)
  %271 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %272 = getelementptr { i8, { ptr } }, ptr %271, i32 0, i32 0
  store i8 1, ptr %272, align 1
  %273 = getelementptr { i8, { ptr } }, ptr %271, i32 0, i32 1, i32 0
  store ptr %270, ptr %273, align 8
  %274 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_20 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_9 = getelementptr { ptr }, ptr %let_capture_20, i32 0, i32 0
  store ptr %271, ptr %d_9, align 8
  %let_capture_21 = getelementptr { ptr, ptr }, ptr %274, i32 0, i32 0
  store ptr %let_capture_20, ptr %let_capture_21, align 8
  %let_func_10 = getelementptr { ptr, ptr }, ptr %274, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5110", ptr %let_func_10, align 8
  %275 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %fun_capture_16 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({}, ptr null, i32 1) to i64))
  %fun_capture_17 = getelementptr { ptr, ptr }, ptr %275, i32 0, i32 0
  store ptr %fun_capture_16, ptr %fun_capture_17, align 8
  %fun_func_8 = getelementptr { ptr, ptr }, ptr %275, i32 0, i32 1
  store ptr @"TestEither.#fun_closure_5111", ptr %fun_func_8, align 8
  %276 = getelementptr { ptr, ptr }, ptr %274, i32 0, i32 0
  %277 = load ptr, ptr %276, align 8
  %278 = getelementptr { ptr, ptr }, ptr %274, i32 0, i32 1
  %279 = load ptr, ptr %278, align 8
  %280 = call ptr %279(ptr %277, ptr %275)
  ret ptr %280

switch_default_10:                                ; preds = %"switch_branch_Builtin.Int32#_6"
  unreachable

switch_default_11:                                ; preds = %switch_branch_TestEither.Right_6
  unreachable

switch_default_12:                                ; preds = %switch_branch_TestEither.Right_5
  unreachable

switch_default_13:                                ; preds = %switch_branch_TestEither.Right_3
  unreachable

switch_default_14:                                ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_7:                 ; preds = %1
  %281 = getelementptr { i8, { ptr } }, ptr %18, i32 0, i32 1
  %282 = getelementptr { ptr }, ptr %281, i32 0, i32 0
  %283 = load ptr, ptr %282, align 8
  %284 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { i32 } }, ptr null, i32 1) to i64))
  %285 = getelementptr { i8, { i32 } }, ptr %284, i32 0, i32 0
  store i8 0, ptr %285, align 1
  %286 = getelementptr { i8, { i32 } }, ptr %284, i32 0, i32 1, i32 0
  store i32 1, ptr %286, align 4
  %287 = getelementptr { i8, <4 x i8> }, ptr %283, i32 0, i32 0
  %288 = load i8, ptr %287, align 1
  switch i8 %288, label %switch_default_31 [
    i8 0, label %"switch_branch_Builtin.Int32#_8"
  ]

"switch_branch_Builtin.Int32#_8":                 ; preds = %switch_branch_TestEither.Right_7
  %289 = getelementptr { i8, { i32 } }, ptr %283, i32 0, i32 1
  %290 = getelementptr { i32 }, ptr %289, i32 0, i32 0
  %291 = load i32, ptr %290, align 4
  %292 = getelementptr { i8, <4 x i8> }, ptr %284, i32 0, i32 0
  %293 = load i8, ptr %292, align 1
  switch i8 %293, label %switch_default_30 [
    i8 0, label %"switch_branch_Builtin.Int32#_9"
  ]

"switch_branch_Builtin.Int32#_9":                 ; preds = %"switch_branch_Builtin.Int32#_8"
  %294 = getelementptr { i8, { i32 } }, ptr %284, i32 0, i32 1
  %295 = getelementptr { i32 }, ptr %294, i32 0, i32 0
  %296 = load i32, ptr %295, align 4
  %297 = call ptr @"Builtin.addInt32#"(ptr null, i32 %291)
  %298 = getelementptr { ptr, ptr }, ptr %297, i32 0, i32 0
  %299 = load ptr, ptr %298, align 8
  %300 = getelementptr { ptr, ptr }, ptr %297, i32 0, i32 1
  %301 = load ptr, ptr %300, align 8
  %302 = call i32 %301(ptr %299, i32 %296)
  %303 = call ptr @"Builtin.Int32#"(ptr null, i32 %302)
  %304 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %305 = getelementptr { i8, { ptr } }, ptr %304, i32 0, i32 0
  store i8 1, ptr %305, align 1
  %306 = getelementptr { i8, { ptr } }, ptr %304, i32 0, i32 1, i32 0
  store ptr %303, ptr %306, align 8
  %307 = getelementptr { i8, <8 x i8> }, ptr %304, i32 0, i32 0
  %308 = load i8, ptr %307, align 1
  switch i8 %308, label %switch_default_29 [
    i8 0, label %switch_branch_TestEither.Left_8
    i8 1, label %switch_branch_TestEither.Right_11
  ]

switch_branch_TestEither.Left_8:                  ; preds = %"switch_branch_Builtin.Int32#_9"
  %309 = getelementptr { i8, { ptr } }, ptr %304, i32 0, i32 1
  %310 = getelementptr { ptr }, ptr %309, i32 0, i32 0
  %311 = load ptr, ptr %310, align 8
  %312 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %313 = getelementptr { i8, { ptr } }, ptr %312, i32 0, i32 0
  store i8 0, ptr %313, align 1
  %314 = getelementptr { i8, { ptr } }, ptr %312, i32 0, i32 1, i32 0
  store ptr %311, ptr %314, align 8
  %315 = getelementptr { i8, <8 x i8> }, ptr %18, i32 0, i32 0
  %316 = load i8, ptr %315, align 1
  switch i8 %316, label %switch_default_21 [
    i8 0, label %switch_branch_TestEither.Left_9
    i8 1, label %switch_branch_TestEither.Right_9
  ]

switch_branch_TestEither.Left_9:                  ; preds = %switch_branch_TestEither.Left_8
  %317 = getelementptr { i8, { ptr } }, ptr %18, i32 0, i32 1
  %318 = getelementptr { ptr }, ptr %317, i32 0, i32 0
  %319 = load ptr, ptr %318, align 8
  %320 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %321 = getelementptr { i8, { ptr } }, ptr %320, i32 0, i32 0
  store i8 0, ptr %321, align 1
  %322 = getelementptr { i8, { ptr } }, ptr %320, i32 0, i32 1, i32 0
  store ptr %319, ptr %322, align 8
  %323 = getelementptr { i8, <8 x i8> }, ptr %320, i32 0, i32 0
  %324 = load i8, ptr %323, align 1
  switch i8 %324, label %switch_default_17 [
    i8 0, label %switch_branch_TestEither.Left_10
    i8 1, label %switch_branch_TestEither.Right_8
  ]

switch_branch_TestEither.Left_10:                 ; preds = %switch_branch_TestEither.Left_9
  %325 = getelementptr { i8, { ptr } }, ptr %320, i32 0, i32 1
  %326 = getelementptr { ptr }, ptr %325, i32 0, i32 0
  %327 = load ptr, ptr %326, align 8
  %328 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %329 = getelementptr { i8, { ptr } }, ptr %328, i32 0, i32 0
  store i8 0, ptr %329, align 1
  %330 = getelementptr { i8, { ptr } }, ptr %328, i32 0, i32 1, i32 0
  store ptr %327, ptr %330, align 8
  %331 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_22 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_10 = getelementptr { ptr }, ptr %let_capture_22, i32 0, i32 0
  store ptr %328, ptr %d_10, align 8
  %let_capture_23 = getelementptr { ptr, ptr }, ptr %331, i32 0, i32 0
  store ptr %let_capture_22, ptr %let_capture_23, align 8
  %let_func_11 = getelementptr { ptr, ptr }, ptr %331, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5112", ptr %let_func_11, align 8
  %332 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %fun_capture_18 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({}, ptr null, i32 1) to i64))
  %fun_capture_19 = getelementptr { ptr, ptr }, ptr %332, i32 0, i32 0
  store ptr %fun_capture_18, ptr %fun_capture_19, align 8
  %fun_func_9 = getelementptr { ptr, ptr }, ptr %332, i32 0, i32 1
  store ptr @"TestEither.#fun_closure_5113", ptr %fun_func_9, align 8
  %333 = getelementptr { ptr, ptr }, ptr %331, i32 0, i32 0
  %334 = load ptr, ptr %333, align 8
  %335 = getelementptr { ptr, ptr }, ptr %331, i32 0, i32 1
  %336 = load ptr, ptr %335, align 8
  %337 = call ptr %336(ptr %334, ptr %332)
  ret ptr %337

switch_branch_TestEither.Right_8:                 ; preds = %switch_branch_TestEither.Left_9
  %338 = getelementptr { i8, { ptr } }, ptr %320, i32 0, i32 1
  %339 = getelementptr { ptr }, ptr %338, i32 0, i32 0
  %340 = load ptr, ptr %339, align 8
  %341 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { i32 } }, ptr null, i32 1) to i64))
  %342 = getelementptr { i8, { i32 } }, ptr %341, i32 0, i32 0
  store i8 0, ptr %342, align 1
  %343 = getelementptr { i8, { i32 } }, ptr %341, i32 0, i32 1, i32 0
  store i32 1, ptr %343, align 4
  %344 = getelementptr { i8, <4 x i8> }, ptr %340, i32 0, i32 0
  %345 = load i8, ptr %344, align 1
  switch i8 %345, label %switch_default_16 [
    i8 0, label %"switch_branch_Builtin.Int32#_10"
  ]

"switch_branch_Builtin.Int32#_10":                ; preds = %switch_branch_TestEither.Right_8
  %346 = getelementptr { i8, { i32 } }, ptr %340, i32 0, i32 1
  %347 = getelementptr { i32 }, ptr %346, i32 0, i32 0
  %348 = load i32, ptr %347, align 4
  %349 = getelementptr { i8, <4 x i8> }, ptr %341, i32 0, i32 0
  %350 = load i8, ptr %349, align 1
  switch i8 %350, label %switch_default_15 [
    i8 0, label %"switch_branch_Builtin.Int32#_11"
  ]

"switch_branch_Builtin.Int32#_11":                ; preds = %"switch_branch_Builtin.Int32#_10"
  %351 = getelementptr { i8, { i32 } }, ptr %341, i32 0, i32 1
  %352 = getelementptr { i32 }, ptr %351, i32 0, i32 0
  %353 = load i32, ptr %352, align 4
  %354 = call ptr @"Builtin.addInt32#"(ptr null, i32 %348)
  %355 = getelementptr { ptr, ptr }, ptr %354, i32 0, i32 0
  %356 = load ptr, ptr %355, align 8
  %357 = getelementptr { ptr, ptr }, ptr %354, i32 0, i32 1
  %358 = load ptr, ptr %357, align 8
  %359 = call i32 %358(ptr %356, i32 %353)
  %360 = call ptr @"Builtin.Int32#"(ptr null, i32 %359)
  %361 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %362 = getelementptr { i8, { ptr } }, ptr %361, i32 0, i32 0
  store i8 1, ptr %362, align 1
  %363 = getelementptr { i8, { ptr } }, ptr %361, i32 0, i32 1, i32 0
  store ptr %360, ptr %363, align 8
  %364 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_24 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_11 = getelementptr { ptr }, ptr %let_capture_24, i32 0, i32 0
  store ptr %361, ptr %d_11, align 8
  %let_capture_25 = getelementptr { ptr, ptr }, ptr %364, i32 0, i32 0
  store ptr %let_capture_24, ptr %let_capture_25, align 8
  %let_func_12 = getelementptr { ptr, ptr }, ptr %364, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5114", ptr %let_func_12, align 8
  %365 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %fun_capture_20 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({}, ptr null, i32 1) to i64))
  %fun_capture_21 = getelementptr { ptr, ptr }, ptr %365, i32 0, i32 0
  store ptr %fun_capture_20, ptr %fun_capture_21, align 8
  %fun_func_10 = getelementptr { ptr, ptr }, ptr %365, i32 0, i32 1
  store ptr @"TestEither.#fun_closure_5115", ptr %fun_func_10, align 8
  %366 = getelementptr { ptr, ptr }, ptr %364, i32 0, i32 0
  %367 = load ptr, ptr %366, align 8
  %368 = getelementptr { ptr, ptr }, ptr %364, i32 0, i32 1
  %369 = load ptr, ptr %368, align 8
  %370 = call ptr %369(ptr %367, ptr %365)
  ret ptr %370

switch_default_15:                                ; preds = %"switch_branch_Builtin.Int32#_10"
  unreachable

switch_default_16:                                ; preds = %switch_branch_TestEither.Right_8
  unreachable

switch_default_17:                                ; preds = %switch_branch_TestEither.Left_9
  unreachable

switch_branch_TestEither.Right_9:                 ; preds = %switch_branch_TestEither.Left_8
  %371 = getelementptr { i8, { ptr } }, ptr %18, i32 0, i32 1
  %372 = getelementptr { ptr }, ptr %371, i32 0, i32 0
  %373 = load ptr, ptr %372, align 8
  %374 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %375 = getelementptr { i8, { ptr } }, ptr %374, i32 0, i32 0
  store i8 0, ptr %375, align 1
  %376 = getelementptr { i8, { ptr } }, ptr %374, i32 0, i32 1, i32 0
  store ptr @str5097, ptr %376, align 8
  %377 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %378 = getelementptr { i8, { ptr } }, ptr %377, i32 0, i32 0
  store i8 0, ptr %378, align 1
  %379 = getelementptr { i8, { ptr } }, ptr %377, i32 0, i32 1, i32 0
  store ptr %374, ptr %379, align 8
  %380 = getelementptr { i8, <8 x i8> }, ptr %377, i32 0, i32 0
  %381 = load i8, ptr %380, align 1
  switch i8 %381, label %switch_default_20 [
    i8 0, label %switch_branch_TestEither.Left_11
    i8 1, label %switch_branch_TestEither.Right_10
  ]

switch_branch_TestEither.Left_11:                 ; preds = %switch_branch_TestEither.Right_9
  %382 = getelementptr { i8, { ptr } }, ptr %377, i32 0, i32 1
  %383 = getelementptr { ptr }, ptr %382, i32 0, i32 0
  %384 = load ptr, ptr %383, align 8
  %385 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %386 = getelementptr { i8, { ptr } }, ptr %385, i32 0, i32 0
  store i8 0, ptr %386, align 1
  %387 = getelementptr { i8, { ptr } }, ptr %385, i32 0, i32 1, i32 0
  store ptr %384, ptr %387, align 8
  %388 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_26 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_12 = getelementptr { ptr }, ptr %let_capture_26, i32 0, i32 0
  store ptr %385, ptr %d_12, align 8
  %let_capture_27 = getelementptr { ptr, ptr }, ptr %388, i32 0, i32 0
  store ptr %let_capture_26, ptr %let_capture_27, align 8
  %let_func_13 = getelementptr { ptr, ptr }, ptr %388, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5116", ptr %let_func_13, align 8
  %389 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %fun_capture_22 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({}, ptr null, i32 1) to i64))
  %fun_capture_23 = getelementptr { ptr, ptr }, ptr %389, i32 0, i32 0
  store ptr %fun_capture_22, ptr %fun_capture_23, align 8
  %fun_func_11 = getelementptr { ptr, ptr }, ptr %389, i32 0, i32 1
  store ptr @"TestEither.#fun_closure_5117", ptr %fun_func_11, align 8
  %390 = getelementptr { ptr, ptr }, ptr %388, i32 0, i32 0
  %391 = load ptr, ptr %390, align 8
  %392 = getelementptr { ptr, ptr }, ptr %388, i32 0, i32 1
  %393 = load ptr, ptr %392, align 8
  %394 = call ptr %393(ptr %391, ptr %389)
  ret ptr %394

switch_branch_TestEither.Right_10:                ; preds = %switch_branch_TestEither.Right_9
  %395 = getelementptr { i8, { ptr } }, ptr %377, i32 0, i32 1
  %396 = getelementptr { ptr }, ptr %395, i32 0, i32 0
  %397 = load ptr, ptr %396, align 8
  %398 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { i32 } }, ptr null, i32 1) to i64))
  %399 = getelementptr { i8, { i32 } }, ptr %398, i32 0, i32 0
  store i8 0, ptr %399, align 1
  %400 = getelementptr { i8, { i32 } }, ptr %398, i32 0, i32 1, i32 0
  store i32 1, ptr %400, align 4
  %401 = getelementptr { i8, <4 x i8> }, ptr %397, i32 0, i32 0
  %402 = load i8, ptr %401, align 1
  switch i8 %402, label %switch_default_19 [
    i8 0, label %"switch_branch_Builtin.Int32#_12"
  ]

"switch_branch_Builtin.Int32#_12":                ; preds = %switch_branch_TestEither.Right_10
  %403 = getelementptr { i8, { i32 } }, ptr %397, i32 0, i32 1
  %404 = getelementptr { i32 }, ptr %403, i32 0, i32 0
  %405 = load i32, ptr %404, align 4
  %406 = getelementptr { i8, <4 x i8> }, ptr %398, i32 0, i32 0
  %407 = load i8, ptr %406, align 1
  switch i8 %407, label %switch_default_18 [
    i8 0, label %"switch_branch_Builtin.Int32#_13"
  ]

"switch_branch_Builtin.Int32#_13":                ; preds = %"switch_branch_Builtin.Int32#_12"
  %408 = getelementptr { i8, { i32 } }, ptr %398, i32 0, i32 1
  %409 = getelementptr { i32 }, ptr %408, i32 0, i32 0
  %410 = load i32, ptr %409, align 4
  %411 = call ptr @"Builtin.addInt32#"(ptr null, i32 %405)
  %412 = getelementptr { ptr, ptr }, ptr %411, i32 0, i32 0
  %413 = load ptr, ptr %412, align 8
  %414 = getelementptr { ptr, ptr }, ptr %411, i32 0, i32 1
  %415 = load ptr, ptr %414, align 8
  %416 = call i32 %415(ptr %413, i32 %410)
  %417 = call ptr @"Builtin.Int32#"(ptr null, i32 %416)
  %418 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %419 = getelementptr { i8, { ptr } }, ptr %418, i32 0, i32 0
  store i8 1, ptr %419, align 1
  %420 = getelementptr { i8, { ptr } }, ptr %418, i32 0, i32 1, i32 0
  store ptr %417, ptr %420, align 8
  %421 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_28 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_13 = getelementptr { ptr }, ptr %let_capture_28, i32 0, i32 0
  store ptr %418, ptr %d_13, align 8
  %let_capture_29 = getelementptr { ptr, ptr }, ptr %421, i32 0, i32 0
  store ptr %let_capture_28, ptr %let_capture_29, align 8
  %let_func_14 = getelementptr { ptr, ptr }, ptr %421, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5118", ptr %let_func_14, align 8
  %422 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %fun_capture_24 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({}, ptr null, i32 1) to i64))
  %fun_capture_25 = getelementptr { ptr, ptr }, ptr %422, i32 0, i32 0
  store ptr %fun_capture_24, ptr %fun_capture_25, align 8
  %fun_func_12 = getelementptr { ptr, ptr }, ptr %422, i32 0, i32 1
  store ptr @"TestEither.#fun_closure_5119", ptr %fun_func_12, align 8
  %423 = getelementptr { ptr, ptr }, ptr %421, i32 0, i32 0
  %424 = load ptr, ptr %423, align 8
  %425 = getelementptr { ptr, ptr }, ptr %421, i32 0, i32 1
  %426 = load ptr, ptr %425, align 8
  %427 = call ptr %426(ptr %424, ptr %422)
  ret ptr %427

switch_default_18:                                ; preds = %"switch_branch_Builtin.Int32#_12"
  unreachable

switch_default_19:                                ; preds = %switch_branch_TestEither.Right_10
  unreachable

switch_default_20:                                ; preds = %switch_branch_TestEither.Right_9
  unreachable

switch_default_21:                                ; preds = %switch_branch_TestEither.Left_8
  unreachable

switch_branch_TestEither.Right_11:                ; preds = %"switch_branch_Builtin.Int32#_9"
  %428 = getelementptr { i8, { ptr } }, ptr %304, i32 0, i32 1
  %429 = getelementptr { ptr }, ptr %428, i32 0, i32 0
  %430 = load ptr, ptr %429, align 8
  %431 = call ptr @Builtin.toStringInt32(ptr null, ptr %430)
  %432 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_14 = getelementptr { ptr }, ptr %let_capture_30, i32 0, i32 0
  store ptr %431, ptr %d_14, align 8
  %let_capture_31 = getelementptr { ptr, ptr }, ptr %432, i32 0, i32 0
  store ptr %let_capture_30, ptr %let_capture_31, align 8
  %let_func_15 = getelementptr { ptr, ptr }, ptr %432, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5120", ptr %let_func_15, align 8
  %433 = getelementptr { ptr, ptr }, ptr %432, i32 0, i32 0
  %434 = load ptr, ptr %433, align 8
  %435 = getelementptr { ptr, ptr }, ptr %432, i32 0, i32 1
  %436 = load ptr, ptr %435, align 8
  %437 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStr_capture_1 = getelementptr { ptr, ptr }, ptr %437, i32 0, i32 0
  store ptr null, ptr %putStr_capture_1, align 8
  %putStr_func_1 = getelementptr { ptr, ptr }, ptr %437, i32 0, i32 1
  store ptr @Prelude.putStr, ptr %putStr_func_1, align 8
  %438 = call ptr %436(ptr %434, ptr %437)
  %439 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_32 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %cast_1 = getelementptr { ptr }, ptr %let_capture_32, i32 0, i32 0
  store ptr %438, ptr %cast_1, align 8
  %let_capture_33 = getelementptr { ptr, ptr }, ptr %439, i32 0, i32 0
  store ptr %let_capture_32, ptr %let_capture_33, align 8
  %let_func_16 = getelementptr { ptr, ptr }, ptr %439, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5121", ptr %let_func_16, align 8
  %440 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %Right_capture_1 = getelementptr { ptr, ptr }, ptr %440, i32 0, i32 0
  store ptr null, ptr %Right_capture_1, align 8
  %Right_func_1 = getelementptr { ptr, ptr }, ptr %440, i32 0, i32 1
  store ptr @TestEither.Right, ptr %Right_func_1, align 8
  %441 = getelementptr { ptr, ptr }, ptr %439, i32 0, i32 0
  %442 = load ptr, ptr %441, align 8
  %443 = getelementptr { ptr, ptr }, ptr %439, i32 0, i32 1
  %444 = load ptr, ptr %443, align 8
  %445 = call ptr %444(ptr %442, ptr %440)
  %446 = getelementptr { i8, <8 x i8> }, ptr %18, i32 0, i32 0
  %447 = load i8, ptr %446, align 1
  switch i8 %447, label %switch_default_28 [
    i8 0, label %switch_branch_TestEither.Left_12
    i8 1, label %switch_branch_TestEither.Right_13
  ]

switch_branch_TestEither.Left_12:                 ; preds = %switch_branch_TestEither.Right_11
  %448 = getelementptr { i8, { ptr } }, ptr %18, i32 0, i32 1
  %449 = getelementptr { ptr }, ptr %448, i32 0, i32 0
  %450 = load ptr, ptr %449, align 8
  %451 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %452 = getelementptr { i8, { ptr } }, ptr %451, i32 0, i32 0
  store i8 0, ptr %452, align 1
  %453 = getelementptr { i8, { ptr } }, ptr %451, i32 0, i32 1, i32 0
  store ptr %450, ptr %453, align 8
  %454 = getelementptr { i8, <8 x i8> }, ptr %451, i32 0, i32 0
  %455 = load i8, ptr %454, align 1
  switch i8 %455, label %switch_default_24 [
    i8 0, label %switch_branch_TestEither.Left_13
    i8 1, label %switch_branch_TestEither.Right_12
  ]

switch_branch_TestEither.Left_13:                 ; preds = %switch_branch_TestEither.Left_12
  %456 = getelementptr { i8, { ptr } }, ptr %451, i32 0, i32 1
  %457 = getelementptr { ptr }, ptr %456, i32 0, i32 0
  %458 = load ptr, ptr %457, align 8
  %459 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %460 = getelementptr { i8, { ptr } }, ptr %459, i32 0, i32 0
  store i8 0, ptr %460, align 1
  %461 = getelementptr { i8, { ptr } }, ptr %459, i32 0, i32 1, i32 0
  store ptr %458, ptr %461, align 8
  %462 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_34 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_15 = getelementptr { ptr }, ptr %let_capture_34, i32 0, i32 0
  store ptr %459, ptr %d_15, align 8
  %let_capture_35 = getelementptr { ptr, ptr }, ptr %462, i32 0, i32 0
  store ptr %let_capture_34, ptr %let_capture_35, align 8
  %let_func_17 = getelementptr { ptr, ptr }, ptr %462, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5122", ptr %let_func_17, align 8
  %463 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %fun_capture_26 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({}, ptr null, i32 1) to i64))
  %fun_capture_27 = getelementptr { ptr, ptr }, ptr %463, i32 0, i32 0
  store ptr %fun_capture_26, ptr %fun_capture_27, align 8
  %fun_func_13 = getelementptr { ptr, ptr }, ptr %463, i32 0, i32 1
  store ptr @"TestEither.#fun_closure_5123", ptr %fun_func_13, align 8
  %464 = getelementptr { ptr, ptr }, ptr %462, i32 0, i32 0
  %465 = load ptr, ptr %464, align 8
  %466 = getelementptr { ptr, ptr }, ptr %462, i32 0, i32 1
  %467 = load ptr, ptr %466, align 8
  %468 = call ptr %467(ptr %465, ptr %463)
  ret ptr %468

switch_branch_TestEither.Right_12:                ; preds = %switch_branch_TestEither.Left_12
  %469 = getelementptr { i8, { ptr } }, ptr %451, i32 0, i32 1
  %470 = getelementptr { ptr }, ptr %469, i32 0, i32 0
  %471 = load ptr, ptr %470, align 8
  %472 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { i32 } }, ptr null, i32 1) to i64))
  %473 = getelementptr { i8, { i32 } }, ptr %472, i32 0, i32 0
  store i8 0, ptr %473, align 1
  %474 = getelementptr { i8, { i32 } }, ptr %472, i32 0, i32 1, i32 0
  store i32 1, ptr %474, align 4
  %475 = getelementptr { i8, <4 x i8> }, ptr %471, i32 0, i32 0
  %476 = load i8, ptr %475, align 1
  switch i8 %476, label %switch_default_23 [
    i8 0, label %"switch_branch_Builtin.Int32#_14"
  ]

"switch_branch_Builtin.Int32#_14":                ; preds = %switch_branch_TestEither.Right_12
  %477 = getelementptr { i8, { i32 } }, ptr %471, i32 0, i32 1
  %478 = getelementptr { i32 }, ptr %477, i32 0, i32 0
  %479 = load i32, ptr %478, align 4
  %480 = getelementptr { i8, <4 x i8> }, ptr %472, i32 0, i32 0
  %481 = load i8, ptr %480, align 1
  switch i8 %481, label %switch_default_22 [
    i8 0, label %"switch_branch_Builtin.Int32#_15"
  ]

"switch_branch_Builtin.Int32#_15":                ; preds = %"switch_branch_Builtin.Int32#_14"
  %482 = getelementptr { i8, { i32 } }, ptr %472, i32 0, i32 1
  %483 = getelementptr { i32 }, ptr %482, i32 0, i32 0
  %484 = load i32, ptr %483, align 4
  %485 = call ptr @"Builtin.addInt32#"(ptr null, i32 %479)
  %486 = getelementptr { ptr, ptr }, ptr %485, i32 0, i32 0
  %487 = load ptr, ptr %486, align 8
  %488 = getelementptr { ptr, ptr }, ptr %485, i32 0, i32 1
  %489 = load ptr, ptr %488, align 8
  %490 = call i32 %489(ptr %487, i32 %484)
  %491 = call ptr @"Builtin.Int32#"(ptr null, i32 %490)
  %492 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %493 = getelementptr { i8, { ptr } }, ptr %492, i32 0, i32 0
  store i8 1, ptr %493, align 1
  %494 = getelementptr { i8, { ptr } }, ptr %492, i32 0, i32 1, i32 0
  store ptr %491, ptr %494, align 8
  %495 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_36 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_16 = getelementptr { ptr }, ptr %let_capture_36, i32 0, i32 0
  store ptr %492, ptr %d_16, align 8
  %let_capture_37 = getelementptr { ptr, ptr }, ptr %495, i32 0, i32 0
  store ptr %let_capture_36, ptr %let_capture_37, align 8
  %let_func_18 = getelementptr { ptr, ptr }, ptr %495, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5124", ptr %let_func_18, align 8
  %496 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %fun_capture_28 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({}, ptr null, i32 1) to i64))
  %fun_capture_29 = getelementptr { ptr, ptr }, ptr %496, i32 0, i32 0
  store ptr %fun_capture_28, ptr %fun_capture_29, align 8
  %fun_func_14 = getelementptr { ptr, ptr }, ptr %496, i32 0, i32 1
  store ptr @"TestEither.#fun_closure_5125", ptr %fun_func_14, align 8
  %497 = getelementptr { ptr, ptr }, ptr %495, i32 0, i32 0
  %498 = load ptr, ptr %497, align 8
  %499 = getelementptr { ptr, ptr }, ptr %495, i32 0, i32 1
  %500 = load ptr, ptr %499, align 8
  %501 = call ptr %500(ptr %498, ptr %496)
  ret ptr %501

switch_default_22:                                ; preds = %"switch_branch_Builtin.Int32#_14"
  unreachable

switch_default_23:                                ; preds = %switch_branch_TestEither.Right_12
  unreachable

switch_default_24:                                ; preds = %switch_branch_TestEither.Left_12
  unreachable

switch_branch_TestEither.Right_13:                ; preds = %switch_branch_TestEither.Right_11
  %502 = getelementptr { i8, { ptr } }, ptr %18, i32 0, i32 1
  %503 = getelementptr { ptr }, ptr %502, i32 0, i32 0
  %504 = load ptr, ptr %503, align 8
  %505 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %506 = getelementptr { i8, { ptr } }, ptr %505, i32 0, i32 0
  store i8 0, ptr %506, align 1
  %507 = getelementptr { i8, { ptr } }, ptr %505, i32 0, i32 1, i32 0
  store ptr @str5097, ptr %507, align 8
  %508 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %509 = getelementptr { i8, { ptr } }, ptr %508, i32 0, i32 0
  store i8 0, ptr %509, align 1
  %510 = getelementptr { i8, { ptr } }, ptr %508, i32 0, i32 1, i32 0
  store ptr %505, ptr %510, align 8
  %511 = getelementptr { i8, <8 x i8> }, ptr %508, i32 0, i32 0
  %512 = load i8, ptr %511, align 1
  switch i8 %512, label %switch_default_27 [
    i8 0, label %switch_branch_TestEither.Left_14
    i8 1, label %switch_branch_TestEither.Right_14
  ]

switch_branch_TestEither.Left_14:                 ; preds = %switch_branch_TestEither.Right_13
  %513 = getelementptr { i8, { ptr } }, ptr %508, i32 0, i32 1
  %514 = getelementptr { ptr }, ptr %513, i32 0, i32 0
  %515 = load ptr, ptr %514, align 8
  %516 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %517 = getelementptr { i8, { ptr } }, ptr %516, i32 0, i32 0
  store i8 0, ptr %517, align 1
  %518 = getelementptr { i8, { ptr } }, ptr %516, i32 0, i32 1, i32 0
  store ptr %515, ptr %518, align 8
  %519 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_38 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_17 = getelementptr { ptr }, ptr %let_capture_38, i32 0, i32 0
  store ptr %516, ptr %d_17, align 8
  %let_capture_39 = getelementptr { ptr, ptr }, ptr %519, i32 0, i32 0
  store ptr %let_capture_38, ptr %let_capture_39, align 8
  %let_func_19 = getelementptr { ptr, ptr }, ptr %519, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5126", ptr %let_func_19, align 8
  %520 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %fun_capture_30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({}, ptr null, i32 1) to i64))
  %fun_capture_31 = getelementptr { ptr, ptr }, ptr %520, i32 0, i32 0
  store ptr %fun_capture_30, ptr %fun_capture_31, align 8
  %fun_func_15 = getelementptr { ptr, ptr }, ptr %520, i32 0, i32 1
  store ptr @"TestEither.#fun_closure_5127", ptr %fun_func_15, align 8
  %521 = getelementptr { ptr, ptr }, ptr %519, i32 0, i32 0
  %522 = load ptr, ptr %521, align 8
  %523 = getelementptr { ptr, ptr }, ptr %519, i32 0, i32 1
  %524 = load ptr, ptr %523, align 8
  %525 = call ptr %524(ptr %522, ptr %520)
  ret ptr %525

switch_branch_TestEither.Right_14:                ; preds = %switch_branch_TestEither.Right_13
  %526 = getelementptr { i8, { ptr } }, ptr %508, i32 0, i32 1
  %527 = getelementptr { ptr }, ptr %526, i32 0, i32 0
  %528 = load ptr, ptr %527, align 8
  %529 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { i32 } }, ptr null, i32 1) to i64))
  %530 = getelementptr { i8, { i32 } }, ptr %529, i32 0, i32 0
  store i8 0, ptr %530, align 1
  %531 = getelementptr { i8, { i32 } }, ptr %529, i32 0, i32 1, i32 0
  store i32 1, ptr %531, align 4
  %532 = getelementptr { i8, <4 x i8> }, ptr %528, i32 0, i32 0
  %533 = load i8, ptr %532, align 1
  switch i8 %533, label %switch_default_26 [
    i8 0, label %"switch_branch_Builtin.Int32#_16"
  ]

"switch_branch_Builtin.Int32#_16":                ; preds = %switch_branch_TestEither.Right_14
  %534 = getelementptr { i8, { i32 } }, ptr %528, i32 0, i32 1
  %535 = getelementptr { i32 }, ptr %534, i32 0, i32 0
  %536 = load i32, ptr %535, align 4
  %537 = getelementptr { i8, <4 x i8> }, ptr %529, i32 0, i32 0
  %538 = load i8, ptr %537, align 1
  switch i8 %538, label %switch_default_25 [
    i8 0, label %"switch_branch_Builtin.Int32#_17"
  ]

"switch_branch_Builtin.Int32#_17":                ; preds = %"switch_branch_Builtin.Int32#_16"
  %539 = getelementptr { i8, { i32 } }, ptr %529, i32 0, i32 1
  %540 = getelementptr { i32 }, ptr %539, i32 0, i32 0
  %541 = load i32, ptr %540, align 4
  %542 = call ptr @"Builtin.addInt32#"(ptr null, i32 %536)
  %543 = getelementptr { ptr, ptr }, ptr %542, i32 0, i32 0
  %544 = load ptr, ptr %543, align 8
  %545 = getelementptr { ptr, ptr }, ptr %542, i32 0, i32 1
  %546 = load ptr, ptr %545, align 8
  %547 = call i32 %546(ptr %544, i32 %541)
  %548 = call ptr @"Builtin.Int32#"(ptr null, i32 %547)
  %549 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %550 = getelementptr { i8, { ptr } }, ptr %549, i32 0, i32 0
  store i8 1, ptr %550, align 1
  %551 = getelementptr { i8, { ptr } }, ptr %549, i32 0, i32 1, i32 0
  store ptr %548, ptr %551, align 8
  %552 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_40 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_18 = getelementptr { ptr }, ptr %let_capture_40, i32 0, i32 0
  store ptr %549, ptr %d_18, align 8
  %let_capture_41 = getelementptr { ptr, ptr }, ptr %552, i32 0, i32 0
  store ptr %let_capture_40, ptr %let_capture_41, align 8
  %let_func_20 = getelementptr { ptr, ptr }, ptr %552, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5128", ptr %let_func_20, align 8
  %553 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %fun_capture_32 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({}, ptr null, i32 1) to i64))
  %fun_capture_33 = getelementptr { ptr, ptr }, ptr %553, i32 0, i32 0
  store ptr %fun_capture_32, ptr %fun_capture_33, align 8
  %fun_func_16 = getelementptr { ptr, ptr }, ptr %553, i32 0, i32 1
  store ptr @"TestEither.#fun_closure_5129", ptr %fun_func_16, align 8
  %554 = getelementptr { ptr, ptr }, ptr %552, i32 0, i32 0
  %555 = load ptr, ptr %554, align 8
  %556 = getelementptr { ptr, ptr }, ptr %552, i32 0, i32 1
  %557 = load ptr, ptr %556, align 8
  %558 = call ptr %557(ptr %555, ptr %553)
  ret ptr %558

switch_default_25:                                ; preds = %"switch_branch_Builtin.Int32#_16"
  unreachable

switch_default_26:                                ; preds = %switch_branch_TestEither.Right_14
  unreachable

switch_default_27:                                ; preds = %switch_branch_TestEither.Right_13
  unreachable

switch_default_28:                                ; preds = %switch_branch_TestEither.Right_11
  unreachable

switch_default_29:                                ; preds = %"switch_branch_Builtin.Int32#_9"
  unreachable

switch_default_30:                                ; preds = %"switch_branch_Builtin.Int32#_8"
  unreachable

switch_default_31:                                ; preds = %switch_branch_TestEither.Right_7
  unreachable

switch_default_32:                                ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5130"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4872"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5130", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5131"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4744"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5131", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5132"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4776"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5132", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5133"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4808"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5133", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5134"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4840"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5134", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5135"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4680"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5135", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5136"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4712"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5136", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5137"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4879"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5137", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5138"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4751"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5138", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5139"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4783"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5139", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5140"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4815"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5140", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5141"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4847"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5141", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5142"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4687"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5142", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5143"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4719"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5143", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @TestEither.Right(ptr %0, ptr %"TestEither.$p_251_0") {
  %2 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %3 = getelementptr { i8, { ptr } }, ptr %2, i32 0, i32 0
  store i8 1, ptr %3, align 1
  %4 = getelementptr { i8, { ptr } }, ptr %2, i32 0, i32 1, i32 0
  store ptr %"TestEither.$p_251_0", ptr %4, align 8
  ret ptr %2
}

define internal ptr @"TestEither.#let_closure_5144"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4878"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5144", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5145"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4750"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5145", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5146"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4782"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5146", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5147"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4814"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5147", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5148"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4846"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5148", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5149"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4686"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5149", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5150"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4718"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5150", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5151"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4877"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5151", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5152"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4749"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5152", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5153"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4781"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5153", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5154"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4813"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5154", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5155"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4845"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5155", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5156"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4685"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5156", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5157"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4717"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5157", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5158"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4876"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5158", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5159"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4748"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5159", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5160"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4780"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5160", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5161"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4812"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5161", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5162"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4844"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5162", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5163"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4684"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5163", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define internal ptr @"TestEither.#let_closure_5164"(ptr %0, ptr %1) {
  %d_addr_0 = getelementptr { ptr }, ptr %0, i32 0, i32 0
  %d_0 = load ptr, ptr %d_addr_0, align 8
  %3 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr { ptr, ptr }, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr %6(ptr %4, ptr %d_0)
  ret ptr %7
}

define internal ptr @"TestEither.$raw_fun_4716"(ptr %0, ptr %"TestEither.$left_360_0") {
  %2 = getelementptr { i8, <8 x i8> }, ptr %"TestEither.$left_360_0", i32 0, i32 0
  %3 = load i8, ptr %2, align 1
  switch i8 %3, label %switch_default_2 [
    i8 0, label %switch_branch_TestEither.Left_0
    i8 1, label %switch_branch_TestEither.Right_0
  ]

switch_branch_TestEither.Left_0:                  ; preds = %1
  %4 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %5 = getelementptr { ptr }, ptr %4, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr { i8, <8 x i8> }, ptr %6, i32 0, i32 0
  %8 = load i8, ptr %7, align 1
  switch i8 %8, label %switch_default_0 [
    i8 0, label %"switch_branch_Builtin.String#_0"
  ]

"switch_branch_Builtin.String#_0":                ; preds = %switch_branch_TestEither.Left_0
  %9 = getelementptr { i8, { ptr } }, ptr %6, i32 0, i32 1
  %10 = getelementptr { ptr }, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @malgo_print_string(ptr %11)
  %13 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %14 = getelementptr { i8, {} }, ptr %13, i32 0, i32 0
  store i8 0, ptr %14, align 1
  %15 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %16 = getelementptr { i8, {} }, ptr %15, i32 0, i32 0
  store i8 0, ptr %16, align 1
  %17 = call ptr @malgo_newline(ptr %15)
  ret ptr %17

switch_default_0:                                 ; preds = %switch_branch_TestEither.Left_0
  unreachable

switch_branch_TestEither.Right_0:                 ; preds = %1
  %18 = getelementptr { i8, { ptr } }, ptr %"TestEither.$left_360_0", i32 0, i32 1
  %19 = getelementptr { ptr }, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr { i8, <4 x i8> }, ptr %20, i32 0, i32 0
  %22 = load i8, ptr %21, align 1
  switch i8 %22, label %switch_default_1 [
    i8 0, label %"switch_branch_Builtin.Int32#_0"
  ]

"switch_branch_Builtin.Int32#_0":                 ; preds = %switch_branch_TestEither.Right_0
  %23 = getelementptr { i8, { i32 } }, ptr %20, i32 0, i32 1
  %24 = getelementptr { i32 }, ptr %23, i32 0, i32 0
  %25 = load i32, ptr %24, align 4
  %26 = call ptr @Builtin.malgo_int32_t_to_string(ptr null, i32 %25)
  %27 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, { ptr } }, ptr null, i32 1) to i64))
  %28 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 0
  store i8 0, ptr %28, align 1
  %29 = getelementptr { i8, { ptr } }, ptr %27, i32 0, i32 1, i32 0
  store ptr %26, ptr %29, align 8
  %30 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %let_capture_0 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr }, ptr null, i32 1) to i64))
  %d_0 = getelementptr { ptr }, ptr %let_capture_0, i32 0, i32 0
  store ptr %27, ptr %d_0, align 8
  %let_capture_1 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %let_capture_0, ptr %let_capture_1, align 8
  %let_func_0 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr @"TestEither.#let_closure_5164", ptr %let_func_0, align 8
  %31 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr { ptr, ptr }, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ ptr, ptr }, ptr null, i32 1) to i64))
  %putStrLn_capture_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr null, ptr %putStrLn_capture_0, align 8
  %putStrLn_func_0 = getelementptr { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr @Prelude.putStrLn, ptr %putStrLn_func_0, align 8
  %36 = call ptr %34(ptr %32, ptr %35)
  ret ptr %36

switch_default_1:                                 ; preds = %switch_branch_TestEither.Right_0
  unreachable

switch_default_2:                                 ; preds = %1
  unreachable
}

define i32 @main(ptr %0) {
  call void @GC_init()
  call void @malgo_load_TestEither()
  %2 = call ptr @malgo_malloc(i64 ptrtoint (ptr getelementptr inbounds ({ i8, {} }, ptr null, i32 1) to i64))
  %3 = getelementptr { i8, {} }, ptr %2, i32 0, i32 0
  store i8 0, ptr %3, align 1
  %4 = call ptr @TestEither.main(ptr null, ptr %2)
  ret i32 0
}

define internal void @malgo_load_TestEither() {
  ret void
}
