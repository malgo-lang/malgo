Program
 { topVars = [], topFuns =
  [
   ( Meta
    { meta = [ AnyT ] :-> AnyT, id = Id
     { name = "g", moduleName = Artifact
      ( ArtifactPath "test/testcases/malgo/Undefined.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "test/testcases/malgo/Undefined.mlg" ), sort = Temporal 20 } } ], [ AnyT ] :-> AnyT, Atom
    ( Var
     ( Meta
      { meta = AnyT, id = Id
       { name = "undefined", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) ) ),
   ( Meta
    { meta =
     [ SumT [ Con Tuple [] ] ] :-> SumT
     [ Con Tuple [] ], id = Id
     { name = "main", moduleName = Artifact
      ( ArtifactPath "test/testcases/malgo/Undefined.mlg" ), sort = External } },
    [ Meta
     { meta = SumT
      [ Con Tuple [] ], id = Id
      { name = "$_", moduleName = Artifact
       ( ArtifactPath "test/testcases/malgo/Undefined.mlg" ), sort = Temporal 21 } } ],
    [ SumT [ Con Tuple [] ] ] :-> SumT
    [ Con Tuple [] ], Match
    ( Atom
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "undefined", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) ) )
    [ Bind
     ( Meta
      { meta = AnyT, id = Id
       { name = "let_test/testcases/malgo/Undefined.mlg.#x_1", moduleName = Artifact
        ( ArtifactPath "test/testcases/malgo/Undefined.mlg" ), sort = Temporal 22 } } ) AnyT
     ( Match
      ( Assign
       ( Meta
        { meta = AnyT, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "test/testcases/malgo/Undefined.mlg" ), sort = Temporal 23 } } )
       ( Call
        ( Var
         ( Meta
          { meta = [ AnyT ] :-> AnyT, id = Id
           { name = "g", moduleName = Artifact
            ( ArtifactPath "test/testcases/malgo/Undefined.mlg" ), sort = External } } ) )
        [ Var
         ( Meta
          { meta = AnyT, id = Id
           { name = "let_test/testcases/malgo/Undefined.mlg.#x_1", moduleName = Artifact
            ( ArtifactPath "test/testcases/malgo/Undefined.mlg" ), sort = Temporal 22 } } ) ] )
       ( Cast AnyT
        ( Var
         ( Meta
          { meta = AnyT, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "test/testcases/malgo/Undefined.mlg" ), sort = Temporal 23 } } ) ) ) )
      [ Bind
       ( Meta
        { meta = AnyT, id = Id
         { name = "let_test/testcases/malgo/Undefined.mlg.#y_2", moduleName = Artifact
          ( ArtifactPath "test/testcases/malgo/Undefined.mlg" ), sort = Temporal 24 } } ) AnyT
       ( Assign
        ( Meta
         { meta = AnyT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "test/testcases/malgo/Undefined.mlg" ), sort = Temporal 26 } } )
        ( Assign
         ( Meta
          { meta = AnyT, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "test/testcases/malgo/Undefined.mlg" ), sort = Temporal 25 } } )
         ( Call
          ( Var
           ( Meta
            { meta = [ StringT ] :-> AnyT, id = Id
             { name = "String#", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
          [ Unboxed ( String "OK" ) ] )
         ( Cast AnyT
          ( Var
           ( Meta
            { meta = AnyT, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "test/testcases/malgo/Undefined.mlg" ), sort = Temporal 25 } } ) ) ) )
        ( Assign
         ( Meta
          { meta = SumT
           [ Con Tuple [] ], id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "test/testcases/malgo/Undefined.mlg" ), sort = Temporal 27 } } )
         ( Call
          ( Var
           ( Meta
            { meta = [ AnyT ] :-> SumT
             [ Con Tuple [] ], id = Id
             { name = "printString", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
          [ Var
           ( Meta
            { meta = AnyT, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "test/testcases/malgo/Undefined.mlg" ), sort = Temporal 26 } } ) ] )
         ( Cast
          ( SumT [ Con Tuple [] ] )
          ( Var
           ( Meta
            { meta = SumT
             [ Con Tuple [] ], id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "test/testcases/malgo/Undefined.mlg" ), sort = Temporal 27 } } ) ) ) ) ) ] ) ] ),
   ( Meta
    { meta = [ AnyT ] :-> AnyT, id = Id
     { name = "f", moduleName = Artifact
      ( ArtifactPath "test/testcases/malgo/Undefined.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "eta", moduleName = Artifact
       ( ArtifactPath "test/testcases/malgo/Undefined.mlg" ), sort = Temporal 29 } } ], [ AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = [ AnyT ] :-> AnyT, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "test/testcases/malgo/Undefined.mlg" ), sort = Temporal 30 } } )
    ( Assign
     ( Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "cast", moduleName = Artifact
        ( ArtifactPath "test/testcases/malgo/Undefined.mlg" ), sort = Temporal 28 } } )
     ( Cast
      ( [ AnyT ] :-> AnyT )
      ( Var
       ( Meta
        { meta = AnyT, id = Id
         { name = "undefined", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) ) )
     ( Atom
      ( Var
       ( Meta
        { meta = [ AnyT ] :-> AnyT, id = Id
         { name = "cast", moduleName = Artifact
          ( ArtifactPath "test/testcases/malgo/Undefined.mlg" ), sort = Temporal 28 } } ) ) ) )
    ( Call
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "test/testcases/malgo/Undefined.mlg" ), sort = Temporal 30 } } ) )
     [ Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "eta", moduleName = Artifact
         ( ArtifactPath "test/testcases/malgo/Undefined.mlg" ), sort = Temporal 29 } } ) ] ) ) ], extFuns = [] }