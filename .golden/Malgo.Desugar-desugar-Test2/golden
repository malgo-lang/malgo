Program
    { topVars = []
    , topFuns =
        [
            ( Meta
                { meta = [] :-> AnyT
                , id = Id
                    { name = "R"
                    , moduleName = Artifact
                        ( ArtifactPath
                            { rawPath = "./test/testcases/malgo/Test2.mlg"
                            , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                            , relPath = "test/testcases/malgo/Test2.mlg"
                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                            }
                        )
                    , sort = External
                    }
                }
            , []
            , [] :-> AnyT
            , Let
                [ LocalDef
                    { _variable = Meta
                        { meta = SumT
                            [ Con
                                ( Data "test/testcases/malgo/Test2.mlg.R" ) []
                            , Con
                                ( Data "test/testcases/malgo/Test2.mlg.G" ) []
                            , Con
                                ( Data "test/testcases/malgo/Test2.mlg.B" ) []
                            ]
                        , id = Id
                            { name = "let"
                            , moduleName = Artifact
                                ( ArtifactPath
                                    { rawPath = "./test/testcases/malgo/Test2.mlg"
                                    , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                    , relPath = "test/testcases/malgo/Test2.mlg"
                                    , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                    }
                                )
                            , sort = Temporal 23
                            }
                        }
                    , typ = SumT
                        [ Con
                            ( Data "test/testcases/malgo/Test2.mlg.R" ) []
                        , Con
                            ( Data "test/testcases/malgo/Test2.mlg.G" ) []
                        , Con
                            ( Data "test/testcases/malgo/Test2.mlg.B" ) []
                        ]
                    , _object = Pack
                        ( SumT
                            [ Con
                                ( Data "test/testcases/malgo/Test2.mlg.R" ) []
                            , Con
                                ( Data "test/testcases/malgo/Test2.mlg.G" ) []
                            , Con
                                ( Data "test/testcases/malgo/Test2.mlg.B" ) []
                            ]
                        )
                        ( Con
                            ( Data "test/testcases/malgo/Test2.mlg.R" ) []
                        ) []
                    }
                ]
                ( Cast AnyT
                    ( Var
                        ( Meta
                            { meta = SumT
                                [ Con
                                    ( Data "test/testcases/malgo/Test2.mlg.R" ) []
                                , Con
                                    ( Data "test/testcases/malgo/Test2.mlg.G" ) []
                                , Con
                                    ( Data "test/testcases/malgo/Test2.mlg.B" ) []
                                ]
                            , id = Id
                                { name = "let"
                                , moduleName = Artifact
                                    ( ArtifactPath
                                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                        , relPath = "test/testcases/malgo/Test2.mlg"
                                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                        }
                                    )
                                , sort = Temporal 23
                                }
                            }
                        )
                    )
                )
            )
        ,
            ( Meta
                { meta = [] :-> AnyT
                , id = Id
                    { name = "G"
                    , moduleName = Artifact
                        ( ArtifactPath
                            { rawPath = "./test/testcases/malgo/Test2.mlg"
                            , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                            , relPath = "test/testcases/malgo/Test2.mlg"
                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                            }
                        )
                    , sort = External
                    }
                }
            , []
            , [] :-> AnyT
            , Let
                [ LocalDef
                    { _variable = Meta
                        { meta = SumT
                            [ Con
                                ( Data "test/testcases/malgo/Test2.mlg.R" ) []
                            , Con
                                ( Data "test/testcases/malgo/Test2.mlg.G" ) []
                            , Con
                                ( Data "test/testcases/malgo/Test2.mlg.B" ) []
                            ]
                        , id = Id
                            { name = "let"
                            , moduleName = Artifact
                                ( ArtifactPath
                                    { rawPath = "./test/testcases/malgo/Test2.mlg"
                                    , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                    , relPath = "test/testcases/malgo/Test2.mlg"
                                    , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                    }
                                )
                            , sort = Temporal 24
                            }
                        }
                    , typ = SumT
                        [ Con
                            ( Data "test/testcases/malgo/Test2.mlg.R" ) []
                        , Con
                            ( Data "test/testcases/malgo/Test2.mlg.G" ) []
                        , Con
                            ( Data "test/testcases/malgo/Test2.mlg.B" ) []
                        ]
                    , _object = Pack
                        ( SumT
                            [ Con
                                ( Data "test/testcases/malgo/Test2.mlg.R" ) []
                            , Con
                                ( Data "test/testcases/malgo/Test2.mlg.G" ) []
                            , Con
                                ( Data "test/testcases/malgo/Test2.mlg.B" ) []
                            ]
                        )
                        ( Con
                            ( Data "test/testcases/malgo/Test2.mlg.G" ) []
                        ) []
                    }
                ]
                ( Cast AnyT
                    ( Var
                        ( Meta
                            { meta = SumT
                                [ Con
                                    ( Data "test/testcases/malgo/Test2.mlg.R" ) []
                                , Con
                                    ( Data "test/testcases/malgo/Test2.mlg.G" ) []
                                , Con
                                    ( Data "test/testcases/malgo/Test2.mlg.B" ) []
                                ]
                            , id = Id
                                { name = "let"
                                , moduleName = Artifact
                                    ( ArtifactPath
                                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                        , relPath = "test/testcases/malgo/Test2.mlg"
                                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                        }
                                    )
                                , sort = Temporal 24
                                }
                            }
                        )
                    )
                )
            )
        ,
            ( Meta
                { meta = [] :-> AnyT
                , id = Id
                    { name = "B"
                    , moduleName = Artifact
                        ( ArtifactPath
                            { rawPath = "./test/testcases/malgo/Test2.mlg"
                            , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                            , relPath = "test/testcases/malgo/Test2.mlg"
                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                            }
                        )
                    , sort = External
                    }
                }
            , []
            , [] :-> AnyT
            , Let
                [ LocalDef
                    { _variable = Meta
                        { meta = SumT
                            [ Con
                                ( Data "test/testcases/malgo/Test2.mlg.R" ) []
                            , Con
                                ( Data "test/testcases/malgo/Test2.mlg.G" ) []
                            , Con
                                ( Data "test/testcases/malgo/Test2.mlg.B" ) []
                            ]
                        , id = Id
                            { name = "let"
                            , moduleName = Artifact
                                ( ArtifactPath
                                    { rawPath = "./test/testcases/malgo/Test2.mlg"
                                    , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                    , relPath = "test/testcases/malgo/Test2.mlg"
                                    , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                    }
                                )
                            , sort = Temporal 25
                            }
                        }
                    , typ = SumT
                        [ Con
                            ( Data "test/testcases/malgo/Test2.mlg.R" ) []
                        , Con
                            ( Data "test/testcases/malgo/Test2.mlg.G" ) []
                        , Con
                            ( Data "test/testcases/malgo/Test2.mlg.B" ) []
                        ]
                    , _object = Pack
                        ( SumT
                            [ Con
                                ( Data "test/testcases/malgo/Test2.mlg.R" ) []
                            , Con
                                ( Data "test/testcases/malgo/Test2.mlg.G" ) []
                            , Con
                                ( Data "test/testcases/malgo/Test2.mlg.B" ) []
                            ]
                        )
                        ( Con
                            ( Data "test/testcases/malgo/Test2.mlg.B" ) []
                        ) []
                    }
                ]
                ( Cast AnyT
                    ( Var
                        ( Meta
                            { meta = SumT
                                [ Con
                                    ( Data "test/testcases/malgo/Test2.mlg.R" ) []
                                , Con
                                    ( Data "test/testcases/malgo/Test2.mlg.G" ) []
                                , Con
                                    ( Data "test/testcases/malgo/Test2.mlg.B" ) []
                                ]
                            , id = Id
                                { name = "let"
                                , moduleName = Artifact
                                    ( ArtifactPath
                                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                        , relPath = "test/testcases/malgo/Test2.mlg"
                                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                        }
                                    )
                                , sort = Temporal 25
                                }
                            }
                        )
                    )
                )
            )
        ,
            ( Meta
                { meta = [ StringT ] :-> SumT
                    [ Con Tuple [] ]
                , id = Id
                    { name = "malgo_print_string"
                    , moduleName = Artifact
                        ( ArtifactPath
                            { rawPath = "./test/testcases/malgo/Test2.mlg"
                            , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                            , relPath = "test/testcases/malgo/Test2.mlg"
                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                            }
                        )
                    , sort = External
                    }
                }
            ,
                [ Meta
                    { meta = StringT
                    , id = Id
                        { name = "p"
                        , moduleName = Artifact
                            ( ArtifactPath
                                { rawPath = "./test/testcases/malgo/Test2.mlg"
                                , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                , relPath = "test/testcases/malgo/Test2.mlg"
                                , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                }
                            )
                        , sort = Temporal 26
                        }
                    }
                ]
            , [ StringT ] :-> SumT
                [ Con Tuple [] ]
            , RawCall "malgo_print_string"
                ( [ StringT ] :-> SumT
                    [ Con Tuple [] ]
                )
                [ Var
                    ( Meta
                        { meta = StringT
                        , id = Id
                            { name = "p"
                            , moduleName = Artifact
                                ( ArtifactPath
                                    { rawPath = "./test/testcases/malgo/Test2.mlg"
                                    , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                    , relPath = "test/testcases/malgo/Test2.mlg"
                                    , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                    }
                                )
                            , sort = Temporal 26
                            }
                        }
                    )
                ]
            )
        ,
            ( Meta
                { meta = [ AnyT ] :-> AnyT
                , id = Id
                    { name = "rtob"
                    , moduleName = Artifact
                        ( ArtifactPath
                            { rawPath = "./test/testcases/malgo/Test2.mlg"
                            , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                            , relPath = "test/testcases/malgo/Test2.mlg"
                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                            }
                        )
                    , sort = External
                    }
                }
            ,
                [ Meta
                    { meta = AnyT
                    , id = Id
                        { name = "r"
                        , moduleName = Artifact
                            ( ArtifactPath
                                { rawPath = "./test/testcases/malgo/Test2.mlg"
                                , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                , relPath = "test/testcases/malgo/Test2.mlg"
                                , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                }
                            )
                        , sort = Temporal 27
                        }
                    }
                ]
            , [ AnyT ] :-> AnyT
            , Match
                ( Cast
                    ( SumT
                        [ Con
                            ( Data "test/testcases/malgo/Test2.mlg.R" ) []
                        , Con
                            ( Data "test/testcases/malgo/Test2.mlg.G" ) []
                        , Con
                            ( Data "test/testcases/malgo/Test2.mlg.B" ) []
                        ]
                    )
                    ( Var
                        ( Meta
                            { meta = AnyT
                            , id = Id
                                { name = "r"
                                , moduleName = Artifact
                                    ( ArtifactPath
                                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                        , relPath = "test/testcases/malgo/Test2.mlg"
                                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                        }
                                    )
                                , sort = Temporal 27
                                }
                            }
                        )
                    )
                )
                [ Unpack
                    ( Con
                        ( Data "test/testcases/malgo/Test2.mlg.R" ) []
                    ) []
                    ( CallDirect
                        ( Meta
                            { meta = [] :-> AnyT
                            , id = Id
                                { name = "B"
                                , moduleName = Artifact
                                    ( ArtifactPath
                                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                        , relPath = "test/testcases/malgo/Test2.mlg"
                                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                        }
                                    )
                                , sort = External
                                }
                            }
                        ) []
                    )
                , Unpack
                    ( Con
                        ( Data "test/testcases/malgo/Test2.mlg.G" ) []
                    ) []
                    ( Atom
                        ( Var
                            ( Meta
                                { meta = AnyT
                                , id = Id
                                    { name = "r"
                                    , moduleName = Artifact
                                        ( ArtifactPath
                                            { rawPath = "./test/testcases/malgo/Test2.mlg"
                                            , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                            , relPath = "test/testcases/malgo/Test2.mlg"
                                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                            }
                                        )
                                    , sort = Temporal 27
                                    }
                                }
                            )
                        )
                    )
                , Unpack
                    ( Con
                        ( Data "test/testcases/malgo/Test2.mlg.B" ) []
                    ) []
                    ( Atom
                        ( Var
                            ( Meta
                                { meta = AnyT
                                , id = Id
                                    { name = "r"
                                    , moduleName = Artifact
                                        ( ArtifactPath
                                            { rawPath = "./test/testcases/malgo/Test2.mlg"
                                            , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                            , relPath = "test/testcases/malgo/Test2.mlg"
                                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                            }
                                        )
                                    , sort = Temporal 27
                                    }
                                }
                            )
                        )
                    )
                ]
            )
        ,
            ( Meta
                { meta =
                    [ SumT
                        [ Con Tuple [] ]
                    ] :-> SumT
                    [ Con Tuple [] ]
                , id = Id
                    { name = "main"
                    , moduleName = Artifact
                        ( ArtifactPath
                            { rawPath = "./test/testcases/malgo/Test2.mlg"
                            , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                            , relPath = "test/testcases/malgo/Test2.mlg"
                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                            }
                        )
                    , sort = External
                    }
                }
            ,
                [ Meta
                    { meta = SumT
                        [ Con Tuple [] ]
                    , id = Id
                        { name = "$_"
                        , moduleName = Artifact
                            ( ArtifactPath
                                { rawPath = "./test/testcases/malgo/Test2.mlg"
                                , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                , relPath = "test/testcases/malgo/Test2.mlg"
                                , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                }
                            )
                        , sort = Temporal 28
                        }
                    }
                ]
            ,
                [ SumT
                    [ Con Tuple [] ]
                ] :-> SumT
                [ Con Tuple [] ]
            , Assign
                ( Meta
                    { meta = [ AnyT ] :-> SumT
                        [ Con Tuple [] ]
                    , id = Id
                        { name = "d"
                        , moduleName = Artifact
                            ( ArtifactPath
                                { rawPath = "./test/testcases/malgo/Test2.mlg"
                                , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                , relPath = "test/testcases/malgo/Test2.mlg"
                                , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                }
                            )
                        , sort = Temporal 33
                        }
                    }
                )
                ( Let
                    [ LocalDef
                        { _variable = Meta
                            { meta = [ AnyT ] :-> SumT
                                [ Con Tuple [] ]
                            , id = Id
                                { name = "fun"
                                , moduleName = Artifact
                                    ( ArtifactPath
                                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                        , relPath = "test/testcases/malgo/Test2.mlg"
                                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                        }
                                    )
                                , sort = Temporal 32
                                }
                            }
                        , typ = [ AnyT ] :-> SumT
                            [ Con Tuple [] ]
                        , _object = Fun
                            [ Meta
                                { meta = AnyT
                                , id = Id
                                    { name = "b"
                                    , moduleName = Artifact
                                        ( ArtifactPath
                                            { rawPath = "./test/testcases/malgo/Test2.mlg"
                                            , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                            , relPath = "test/testcases/malgo/Test2.mlg"
                                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                            }
                                        )
                                    , sort = Temporal 29
                                    }
                                }
                            ]
                            ( Match
                                ( Cast
                                    ( SumT
                                        [ Con
                                            ( Data "test/testcases/malgo/Test2.mlg.R" ) []
                                        , Con
                                            ( Data "test/testcases/malgo/Test2.mlg.G" ) []
                                        , Con
                                            ( Data "test/testcases/malgo/Test2.mlg.B" ) []
                                        ]
                                    )
                                    ( Var
                                        ( Meta
                                            { meta = AnyT
                                            , id = Id
                                                { name = "b"
                                                , moduleName = Artifact
                                                    ( ArtifactPath
                                                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                                                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                                        , relPath = "test/testcases/malgo/Test2.mlg"
                                                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                                        }
                                                    )
                                                , sort = Temporal 29
                                                }
                                            }
                                        )
                                    )
                                )
                                [ Unpack
                                    ( Con
                                        ( Data "test/testcases/malgo/Test2.mlg.R" ) []
                                    ) []
                                    ( Assign
                                        ( Meta
                                            { meta = SumT
                                                [ Con Tuple [] ]
                                            , id = Id
                                                { name = "d"
                                                , moduleName = Artifact
                                                    ( ArtifactPath
                                                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                                                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                                        , relPath = "test/testcases/malgo/Test2.mlg"
                                                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                                        }
                                                    )
                                                , sort = Temporal 30
                                                }
                                            }
                                        )
                                        ( Call
                                            ( Var
                                                ( Meta
                                                    { meta = [ StringT ] :-> SumT
                                                        [ Con Tuple [] ]
                                                    , id = Id
                                                        { name = "malgo_print_string"
                                                        , moduleName = Artifact
                                                            ( ArtifactPath
                                                                { rawPath = "./test/testcases/malgo/Test2.mlg"
                                                                , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                                                , relPath = "test/testcases/malgo/Test2.mlg"
                                                                , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                                                }
                                                            )
                                                        , sort = External
                                                        }
                                                    }
                                                )
                                            )
                                            [ Unboxed
                                                ( String "WRONG" )
                                            ]
                                        )
                                        ( Cast
                                            ( SumT
                                                [ Con Tuple [] ]
                                            )
                                            ( Var
                                                ( Meta
                                                    { meta = SumT
                                                        [ Con Tuple [] ]
                                                    , id = Id
                                                        { name = "d"
                                                        , moduleName = Artifact
                                                            ( ArtifactPath
                                                                { rawPath = "./test/testcases/malgo/Test2.mlg"
                                                                , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                                                , relPath = "test/testcases/malgo/Test2.mlg"
                                                                , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                                                }
                                                            )
                                                        , sort = Temporal 30
                                                        }
                                                    }
                                                )
                                            )
                                        )
                                    )
                                , Unpack
                                    ( Con
                                        ( Data "test/testcases/malgo/Test2.mlg.G" ) []
                                    ) []
                                    ( Assign
                                        ( Meta
                                            { meta = SumT
                                                [ Con Tuple [] ]
                                            , id = Id
                                                { name = "d"
                                                , moduleName = Artifact
                                                    ( ArtifactPath
                                                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                                                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                                        , relPath = "test/testcases/malgo/Test2.mlg"
                                                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                                        }
                                                    )
                                                , sort = Temporal 30
                                                }
                                            }
                                        )
                                        ( Call
                                            ( Var
                                                ( Meta
                                                    { meta = [ StringT ] :-> SumT
                                                        [ Con Tuple [] ]
                                                    , id = Id
                                                        { name = "malgo_print_string"
                                                        , moduleName = Artifact
                                                            ( ArtifactPath
                                                                { rawPath = "./test/testcases/malgo/Test2.mlg"
                                                                , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                                                , relPath = "test/testcases/malgo/Test2.mlg"
                                                                , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                                                }
                                                            )
                                                        , sort = External
                                                        }
                                                    }
                                                )
                                            )
                                            [ Unboxed
                                                ( String "WRONG" )
                                            ]
                                        )
                                        ( Cast
                                            ( SumT
                                                [ Con Tuple [] ]
                                            )
                                            ( Var
                                                ( Meta
                                                    { meta = SumT
                                                        [ Con Tuple [] ]
                                                    , id = Id
                                                        { name = "d"
                                                        , moduleName = Artifact
                                                            ( ArtifactPath
                                                                { rawPath = "./test/testcases/malgo/Test2.mlg"
                                                                , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                                                , relPath = "test/testcases/malgo/Test2.mlg"
                                                                , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                                                }
                                                            )
                                                        , sort = Temporal 30
                                                        }
                                                    }
                                                )
                                            )
                                        )
                                    )
                                , Unpack
                                    ( Con
                                        ( Data "test/testcases/malgo/Test2.mlg.B" ) []
                                    ) []
                                    ( Assign
                                        ( Meta
                                            { meta = SumT
                                                [ Con Tuple [] ]
                                            , id = Id
                                                { name = "d"
                                                , moduleName = Artifact
                                                    ( ArtifactPath
                                                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                                                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                                        , relPath = "test/testcases/malgo/Test2.mlg"
                                                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                                        }
                                                    )
                                                , sort = Temporal 31
                                                }
                                            }
                                        )
                                        ( Call
                                            ( Var
                                                ( Meta
                                                    { meta = [ StringT ] :-> SumT
                                                        [ Con Tuple [] ]
                                                    , id = Id
                                                        { name = "malgo_print_string"
                                                        , moduleName = Artifact
                                                            ( ArtifactPath
                                                                { rawPath = "./test/testcases/malgo/Test2.mlg"
                                                                , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                                                , relPath = "test/testcases/malgo/Test2.mlg"
                                                                , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                                                }
                                                            )
                                                        , sort = External
                                                        }
                                                    }
                                                )
                                            )
                                            [ Unboxed
                                                ( String "OK" )
                                            ]
                                        )
                                        ( Cast
                                            ( SumT
                                                [ Con Tuple [] ]
                                            )
                                            ( Var
                                                ( Meta
                                                    { meta = SumT
                                                        [ Con Tuple [] ]
                                                    , id = Id
                                                        { name = "d"
                                                        , moduleName = Artifact
                                                            ( ArtifactPath
                                                                { rawPath = "./test/testcases/malgo/Test2.mlg"
                                                                , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                                                , relPath = "test/testcases/malgo/Test2.mlg"
                                                                , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                                                }
                                                            )
                                                        , sort = Temporal 31
                                                        }
                                                    }
                                                )
                                            )
                                        )
                                    )
                                ]
                            )
                        }
                    ]
                    ( Atom
                        ( Var
                            ( Meta
                                { meta = [ AnyT ] :-> SumT
                                    [ Con Tuple [] ]
                                , id = Id
                                    { name = "fun"
                                    , moduleName = Artifact
                                        ( ArtifactPath
                                            { rawPath = "./test/testcases/malgo/Test2.mlg"
                                            , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                            , relPath = "test/testcases/malgo/Test2.mlg"
                                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                            }
                                        )
                                    , sort = Temporal 32
                                    }
                                }
                            )
                        )
                    )
                )
                ( Assign
                    ( Meta
                        { meta = AnyT
                        , id = Id
                            { name = "d"
                            , moduleName = Artifact
                                ( ArtifactPath
                                    { rawPath = "./test/testcases/malgo/Test2.mlg"
                                    , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                    , relPath = "test/testcases/malgo/Test2.mlg"
                                    , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                    }
                                )
                            , sort = Temporal 36
                            }
                        }
                    )
                    ( Assign
                        ( Meta
                            { meta = AnyT
                            , id = Id
                                { name = "d"
                                , moduleName = Artifact
                                    ( ArtifactPath
                                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                        , relPath = "test/testcases/malgo/Test2.mlg"
                                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                        }
                                    )
                                , sort = Temporal 34
                                }
                            }
                        )
                        ( CallDirect
                            ( Meta
                                { meta = [] :-> AnyT
                                , id = Id
                                    { name = "R"
                                    , moduleName = Artifact
                                        ( ArtifactPath
                                            { rawPath = "./test/testcases/malgo/Test2.mlg"
                                            , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                            , relPath = "test/testcases/malgo/Test2.mlg"
                                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                            }
                                        )
                                    , sort = External
                                    }
                                }
                            ) []
                        )
                        ( Assign
                            ( Meta
                                { meta = AnyT
                                , id = Id
                                    { name = "d"
                                    , moduleName = Artifact
                                        ( ArtifactPath
                                            { rawPath = "./test/testcases/malgo/Test2.mlg"
                                            , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                            , relPath = "test/testcases/malgo/Test2.mlg"
                                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                            }
                                        )
                                    , sort = Temporal 35
                                    }
                                }
                            )
                            ( Call
                                ( Var
                                    ( Meta
                                        { meta = [ AnyT ] :-> AnyT
                                        , id = Id
                                            { name = "rtob"
                                            , moduleName = Artifact
                                                ( ArtifactPath
                                                    { rawPath = "./test/testcases/malgo/Test2.mlg"
                                                    , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                                    , relPath = "test/testcases/malgo/Test2.mlg"
                                                    , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                                    }
                                                )
                                            , sort = External
                                            }
                                        }
                                    )
                                )
                                [ Var
                                    ( Meta
                                        { meta = AnyT
                                        , id = Id
                                            { name = "d"
                                            , moduleName = Artifact
                                                ( ArtifactPath
                                                    { rawPath = "./test/testcases/malgo/Test2.mlg"
                                                    , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                                    , relPath = "test/testcases/malgo/Test2.mlg"
                                                    , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                                    }
                                                )
                                            , sort = Temporal 34
                                            }
                                        }
                                    )
                                ]
                            )
                            ( Cast AnyT
                                ( Var
                                    ( Meta
                                        { meta = AnyT
                                        , id = Id
                                            { name = "d"
                                            , moduleName = Artifact
                                                ( ArtifactPath
                                                    { rawPath = "./test/testcases/malgo/Test2.mlg"
                                                    , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                                    , relPath = "test/testcases/malgo/Test2.mlg"
                                                    , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                                    }
                                                )
                                            , sort = Temporal 35
                                            }
                                        }
                                    )
                                )
                            )
                        )
                    )
                    ( Assign
                        ( Meta
                            { meta = SumT
                                [ Con Tuple [] ]
                            , id = Id
                                { name = "d"
                                , moduleName = Artifact
                                    ( ArtifactPath
                                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                        , relPath = "test/testcases/malgo/Test2.mlg"
                                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                        }
                                    )
                                , sort = Temporal 37
                                }
                            }
                        )
                        ( Call
                            ( Var
                                ( Meta
                                    { meta = [ AnyT ] :-> SumT
                                        [ Con Tuple [] ]
                                    , id = Id
                                        { name = "d"
                                        , moduleName = Artifact
                                            ( ArtifactPath
                                                { rawPath = "./test/testcases/malgo/Test2.mlg"
                                                , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                                , relPath = "test/testcases/malgo/Test2.mlg"
                                                , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                                }
                                            )
                                        , sort = Temporal 33
                                        }
                                    }
                                )
                            )
                            [ Var
                                ( Meta
                                    { meta = AnyT
                                    , id = Id
                                        { name = "d"
                                        , moduleName = Artifact
                                            ( ArtifactPath
                                                { rawPath = "./test/testcases/malgo/Test2.mlg"
                                                , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                                , relPath = "test/testcases/malgo/Test2.mlg"
                                                , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                                }
                                            )
                                        , sort = Temporal 36
                                        }
                                    }
                                )
                            ]
                        )
                        ( Cast
                            ( SumT
                                [ Con Tuple [] ]
                            )
                            ( Var
                                ( Meta
                                    { meta = SumT
                                        [ Con Tuple [] ]
                                    , id = Id
                                        { name = "d"
                                        , moduleName = Artifact
                                            ( ArtifactPath
                                                { rawPath = "./test/testcases/malgo/Test2.mlg"
                                                , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                                , relPath = "test/testcases/malgo/Test2.mlg"
                                                , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                                }
                                            )
                                        , sort = Temporal 37
                                        }
                                    }
                                )
                            )
                        )
                    )
                )
            )
        ]
    , extFuns =
        [
            ( "malgo_print_string"
            , [ StringT ] :-> SumT
                [ Con Tuple [] ]
            )
        ]
    }
DsState
    { _nameEnv = fromList
        [
            ( Id
                { name = "malgo_print_string"
                , moduleName = Artifact
                    ( ArtifactPath
                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                        , relPath = "test/testcases/malgo/Test2.mlg"
                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                        }
                    )
                , sort = External
                }
            , Meta
                { meta = [ StringT ] :-> SumT
                    [ Con Tuple [] ]
                , id = Id
                    { name = "malgo_print_string"
                    , moduleName = Artifact
                        ( ArtifactPath
                            { rawPath = "./test/testcases/malgo/Test2.mlg"
                            , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                            , relPath = "test/testcases/malgo/Test2.mlg"
                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                            }
                        )
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "B"
                , moduleName = Artifact
                    ( ArtifactPath
                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                        , relPath = "test/testcases/malgo/Test2.mlg"
                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                        }
                    )
                , sort = External
                }
            , Meta
                { meta = [] :-> AnyT
                , id = Id
                    { name = "B"
                    , moduleName = Artifact
                        ( ArtifactPath
                            { rawPath = "./test/testcases/malgo/Test2.mlg"
                            , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                            , relPath = "test/testcases/malgo/Test2.mlg"
                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                            }
                        )
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "a"
                , moduleName = Artifact
                    ( ArtifactPath
                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                        , relPath = "test/testcases/malgo/Test2.mlg"
                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                        }
                    )
                , sort = Internal 0
                }
            , Meta
                { meta = AnyT
                , id = Id
                    { name = "r"
                    , moduleName = Artifact
                        ( ArtifactPath
                            { rawPath = "./test/testcases/malgo/Test2.mlg"
                            , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                            , relPath = "test/testcases/malgo/Test2.mlg"
                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                            }
                        )
                    , sort = Temporal 27
                    }
                }
            )
        ,
            ( Id
                { name = "$_"
                , moduleName = Artifact
                    ( ArtifactPath
                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                        , relPath = "test/testcases/malgo/Test2.mlg"
                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                        }
                    )
                , sort = Internal 22
                }
            , Meta
                { meta = SumT
                    [ Con Tuple [] ]
                , id = Id
                    { name = "$_"
                    , moduleName = Artifact
                        ( ArtifactPath
                            { rawPath = "./test/testcases/malgo/Test2.mlg"
                            , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                            , relPath = "test/testcases/malgo/Test2.mlg"
                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                            }
                        )
                    , sort = Temporal 28
                    }
                }
            )
        ,
            ( Id
                { name = "main"
                , moduleName = Artifact
                    ( ArtifactPath
                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                        , relPath = "test/testcases/malgo/Test2.mlg"
                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                        }
                    )
                , sort = External
                }
            , Meta
                { meta =
                    [ SumT
                        [ Con Tuple [] ]
                    ] :-> SumT
                    [ Con Tuple [] ]
                , id = Id
                    { name = "main"
                    , moduleName = Artifact
                        ( ArtifactPath
                            { rawPath = "./test/testcases/malgo/Test2.mlg"
                            , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                            , relPath = "test/testcases/malgo/Test2.mlg"
                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                            }
                        )
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "_"
                , moduleName = Artifact
                    ( ArtifactPath
                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                        , relPath = "test/testcases/malgo/Test2.mlg"
                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                        }
                    )
                , sort = Internal 1
                }
            , Meta
                { meta = AnyT
                , id = Id
                    { name = "b"
                    , moduleName = Artifact
                        ( ArtifactPath
                            { rawPath = "./test/testcases/malgo/Test2.mlg"
                            , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                            , relPath = "test/testcases/malgo/Test2.mlg"
                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                            }
                        )
                    , sort = Temporal 29
                    }
                }
            )
        ,
            ( Id
                { name = "R"
                , moduleName = Artifact
                    ( ArtifactPath
                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                        , relPath = "test/testcases/malgo/Test2.mlg"
                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                        }
                    )
                , sort = External
                }
            , Meta
                { meta = [] :-> AnyT
                , id = Id
                    { name = "R"
                    , moduleName = Artifact
                        ( ArtifactPath
                            { rawPath = "./test/testcases/malgo/Test2.mlg"
                            , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                            , relPath = "test/testcases/malgo/Test2.mlg"
                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                            }
                        )
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "rtob"
                , moduleName = Artifact
                    ( ArtifactPath
                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                        , relPath = "test/testcases/malgo/Test2.mlg"
                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                        }
                    )
                , sort = External
                }
            , Meta
                { meta = [ AnyT ] :-> AnyT
                , id = Id
                    { name = "rtob"
                    , moduleName = Artifact
                        ( ArtifactPath
                            { rawPath = "./test/testcases/malgo/Test2.mlg"
                            , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                            , relPath = "test/testcases/malgo/Test2.mlg"
                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                            }
                        )
                    , sort = External
                    }
                }
            )
        ,
            ( Id
                { name = "G"
                , moduleName = Artifact
                    ( ArtifactPath
                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                        , relPath = "test/testcases/malgo/Test2.mlg"
                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                        }
                    )
                , sort = External
                }
            , Meta
                { meta = [] :-> AnyT
                , id = Id
                    { name = "G"
                    , moduleName = Artifact
                        ( ArtifactPath
                            { rawPath = "./test/testcases/malgo/Test2.mlg"
                            , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                            , relPath = "test/testcases/malgo/Test2.mlg"
                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                            }
                        )
                    , sort = External
                    }
                }
            )
        ]
    , _signatureMap = fromList
        [
            ( Id
                { name = "malgo_print_string"
                , moduleName = Artifact
                    ( ArtifactPath
                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                        , relPath = "test/testcases/malgo/Test2.mlg"
                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                        }
                    )
                , sort = External
                }
            , Forall []
                ( TyArr ( TyPrim StringT )
                    ( TyTuple 0 )
                )
            )
        ,
            ( Id
                { name = "B"
                , moduleName = Artifact
                    ( ArtifactPath
                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                        , relPath = "test/testcases/malgo/Test2.mlg"
                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                        }
                    )
                , sort = External
                }
            , Forall []
                ( TyCon
                    ( Id
                        { name = "RGB"
                        , moduleName = Artifact
                            ( ArtifactPath
                                { rawPath = "./test/testcases/malgo/Test2.mlg"
                                , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                , relPath = "test/testcases/malgo/Test2.mlg"
                                , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                }
                            )
                        , sort = External
                        }
                    )
                )
            )
        ,
            ( Id
                { name = "a"
                , moduleName = Artifact
                    ( ArtifactPath
                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                        , relPath = "test/testcases/malgo/Test2.mlg"
                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                        }
                    )
                , sort = Internal 0
                }
            , Forall []
                ( TyCon
                    ( Id
                        { name = "RGB"
                        , moduleName = Artifact
                            ( ArtifactPath
                                { rawPath = "./test/testcases/malgo/Test2.mlg"
                                , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                , relPath = "test/testcases/malgo/Test2.mlg"
                                , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                }
                            )
                        , sort = External
                        }
                    )
                )
            )
        ,
            ( Id
                { name = "$_"
                , moduleName = Artifact
                    ( ArtifactPath
                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                        , relPath = "test/testcases/malgo/Test2.mlg"
                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                        }
                    )
                , sort = Internal 22
                }
            , Forall []
                ( TyTuple 0 )
            )
        ,
            ( Id
                { name = "main"
                , moduleName = Artifact
                    ( ArtifactPath
                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                        , relPath = "test/testcases/malgo/Test2.mlg"
                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                        }
                    )
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyTuple 0 )
                    ( TyTuple 0 )
                )
            )
        ,
            ( Id
                { name = "_"
                , moduleName = Artifact
                    ( ArtifactPath
                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                        , relPath = "test/testcases/malgo/Test2.mlg"
                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                        }
                    )
                , sort = Internal 1
                }
            , Forall []
                ( TyCon
                    ( Id
                        { name = "RGB"
                        , moduleName = Artifact
                            ( ArtifactPath
                                { rawPath = "./test/testcases/malgo/Test2.mlg"
                                , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                , relPath = "test/testcases/malgo/Test2.mlg"
                                , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                }
                            )
                        , sort = External
                        }
                    )
                )
            )
        ,
            ( Id
                { name = "R"
                , moduleName = Artifact
                    ( ArtifactPath
                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                        , relPath = "test/testcases/malgo/Test2.mlg"
                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                        }
                    )
                , sort = External
                }
            , Forall []
                ( TyCon
                    ( Id
                        { name = "RGB"
                        , moduleName = Artifact
                            ( ArtifactPath
                                { rawPath = "./test/testcases/malgo/Test2.mlg"
                                , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                , relPath = "test/testcases/malgo/Test2.mlg"
                                , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                }
                            )
                        , sort = External
                        }
                    )
                )
            )
        ,
            ( Id
                { name = "rtob"
                , moduleName = Artifact
                    ( ArtifactPath
                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                        , relPath = "test/testcases/malgo/Test2.mlg"
                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                        }
                    )
                , sort = External
                }
            , Forall []
                ( TyArr
                    ( TyCon
                        ( Id
                            { name = "RGB"
                            , moduleName = Artifact
                                ( ArtifactPath
                                    { rawPath = "./test/testcases/malgo/Test2.mlg"
                                    , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                    , relPath = "test/testcases/malgo/Test2.mlg"
                                    , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                    }
                                )
                            , sort = External
                            }
                        )
                    )
                    ( TyCon
                        ( Id
                            { name = "RGB"
                            , moduleName = Artifact
                                ( ArtifactPath
                                    { rawPath = "./test/testcases/malgo/Test2.mlg"
                                    , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                    , relPath = "test/testcases/malgo/Test2.mlg"
                                    , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                    }
                                )
                            , sort = External
                            }
                        )
                    )
                )
            )
        ,
            ( Id
                { name = "G"
                , moduleName = Artifact
                    ( ArtifactPath
                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                        , relPath = "test/testcases/malgo/Test2.mlg"
                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                        }
                    )
                , sort = External
                }
            , Forall []
                ( TyCon
                    ( Id
                        { name = "RGB"
                        , moduleName = Artifact
                            ( ArtifactPath
                                { rawPath = "./test/testcases/malgo/Test2.mlg"
                                , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                , relPath = "test/testcases/malgo/Test2.mlg"
                                , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                }
                            )
                        , sort = External
                        }
                    )
                )
            )
        ]
    , _typeDefMap = fromList
        [
            ( Id
                { name = "Double#"
                , moduleName = ModuleName "Builtin"
                , sort = External
                }
            , TypeDef
                { _typeConstructor = TyPrim DoubleT
                , _typeParameters = []
                , _valueConstructors = []
                }
            )
        ,
            ( Id
                { name = "Int32#"
                , moduleName = ModuleName "Builtin"
                , sort = External
                }
            , TypeDef
                { _typeConstructor = TyPrim Int32T
                , _typeParameters = []
                , _valueConstructors = []
                }
            )
        ,
            ( Id
                { name = "Ptr#"
                , moduleName = ModuleName "Builtin"
                , sort = External
                }
            , TypeDef
                { _typeConstructor = TyPtr
                , _typeParameters = []
                , _valueConstructors = []
                }
            )
        ,
            ( Id
                { name = "Char#"
                , moduleName = ModuleName "Builtin"
                , sort = External
                }
            , TypeDef
                { _typeConstructor = TyPrim CharT
                , _typeParameters = []
                , _valueConstructors = []
                }
            )
        ,
            ( Id
                { name = "RGB"
                , moduleName = Artifact
                    ( ArtifactPath
                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                        , relPath = "test/testcases/malgo/Test2.mlg"
                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                        }
                    )
                , sort = External
                }
            , TypeDef
                { _typeConstructor = TyCon
                    ( Id
                        { name = "RGB"
                        , moduleName = Artifact
                            ( ArtifactPath
                                { rawPath = "./test/testcases/malgo/Test2.mlg"
                                , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                , relPath = "test/testcases/malgo/Test2.mlg"
                                , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                }
                            )
                        , sort = External
                        }
                    )
                , _typeParameters = []
                , _valueConstructors =
                    [
                        ( Id
                            { name = "R"
                            , moduleName = Artifact
                                ( ArtifactPath
                                    { rawPath = "./test/testcases/malgo/Test2.mlg"
                                    , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                    , relPath = "test/testcases/malgo/Test2.mlg"
                                    , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                    }
                                )
                            , sort = External
                            }
                        , Forall []
                            ( TyCon
                                ( Id
                                    { name = "RGB"
                                    , moduleName = Artifact
                                        ( ArtifactPath
                                            { rawPath = "./test/testcases/malgo/Test2.mlg"
                                            , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                            , relPath = "test/testcases/malgo/Test2.mlg"
                                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                            }
                                        )
                                    , sort = External
                                    }
                                )
                            )
                        )
                    ,
                        ( Id
                            { name = "G"
                            , moduleName = Artifact
                                ( ArtifactPath
                                    { rawPath = "./test/testcases/malgo/Test2.mlg"
                                    , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                    , relPath = "test/testcases/malgo/Test2.mlg"
                                    , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                    }
                                )
                            , sort = External
                            }
                        , Forall []
                            ( TyCon
                                ( Id
                                    { name = "RGB"
                                    , moduleName = Artifact
                                        ( ArtifactPath
                                            { rawPath = "./test/testcases/malgo/Test2.mlg"
                                            , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                            , relPath = "test/testcases/malgo/Test2.mlg"
                                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                            }
                                        )
                                    , sort = External
                                    }
                                )
                            )
                        )
                    ,
                        ( Id
                            { name = "B"
                            , moduleName = Artifact
                                ( ArtifactPath
                                    { rawPath = "./test/testcases/malgo/Test2.mlg"
                                    , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                    , relPath = "test/testcases/malgo/Test2.mlg"
                                    , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                    }
                                )
                            , sort = External
                            }
                        , Forall []
                            ( TyCon
                                ( Id
                                    { name = "RGB"
                                    , moduleName = Artifact
                                        ( ArtifactPath
                                            { rawPath = "./test/testcases/malgo/Test2.mlg"
                                            , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                                            , relPath = "test/testcases/malgo/Test2.mlg"
                                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                                            }
                                        )
                                    , sort = External
                                    }
                                )
                            )
                        )
                    ]
                }
            )
        ,
            ( Id
                { name = "Int64#"
                , moduleName = ModuleName "Builtin"
                , sort = External
                }
            , TypeDef
                { _typeConstructor = TyPrim Int64T
                , _typeParameters = []
                , _valueConstructors = []
                }
            )
        ,
            ( Id
                { name = "String#"
                , moduleName = ModuleName "Builtin"
                , sort = External
                }
            , TypeDef
                { _typeConstructor = TyPrim StringT
                , _typeParameters = []
                , _valueConstructors = []
                }
            )
        ,
            ( Id
                { name = "Float#"
                , moduleName = ModuleName "Builtin"
                , sort = External
                }
            , TypeDef
                { _typeConstructor = TyPrim FloatT
                , _typeParameters = []
                , _valueConstructors = []
                }
            )
        ]
    , _kindCtx = fromList
        [
            ( Id
                { name = "t"
                , moduleName = Artifact
                    ( ArtifactPath
                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                        , relPath = "test/testcases/malgo/Test2.mlg"
                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                        }
                    )
                , sort = Internal 15
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = Artifact
                        ( ArtifactPath
                            { rawPath = "./test/testcases/malgo/Test2.mlg"
                            , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                            , relPath = "test/testcases/malgo/Test2.mlg"
                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                            }
                        )
                    , sort = Temporal 14
                    }
                )
            )
        ,
            ( Id
                { name = "t"
                , moduleName = Artifact
                    ( ArtifactPath
                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                        , relPath = "test/testcases/malgo/Test2.mlg"
                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                        }
                    )
                , sort = Internal 13
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = Artifact
                        ( ArtifactPath
                            { rawPath = "./test/testcases/malgo/Test2.mlg"
                            , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                            , relPath = "test/testcases/malgo/Test2.mlg"
                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                            }
                        )
                    , sort = Temporal 12
                    }
                )
            )
        ,
            ( Id
                { name = "t"
                , moduleName = Artifact
                    ( ArtifactPath
                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                        , relPath = "test/testcases/malgo/Test2.mlg"
                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                        }
                    )
                , sort = Internal 11
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = Artifact
                        ( ArtifactPath
                            { rawPath = "./test/testcases/malgo/Test2.mlg"
                            , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                            , relPath = "test/testcases/malgo/Test2.mlg"
                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                            }
                        )
                    , sort = Temporal 10
                    }
                )
            )
        ,
            ( Id
                { name = "t"
                , moduleName = Artifact
                    ( ArtifactPath
                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                        , relPath = "test/testcases/malgo/Test2.mlg"
                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                        }
                    )
                , sort = Internal 9
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = Artifact
                        ( ArtifactPath
                            { rawPath = "./test/testcases/malgo/Test2.mlg"
                            , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                            , relPath = "test/testcases/malgo/Test2.mlg"
                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                            }
                        )
                    , sort = Temporal 8
                    }
                )
            )
        ,
            ( Id
                { name = "Double#"
                , moduleName = ModuleName "Builtin"
                , sort = External
                }
            , TYPE
            )
        ,
            ( Id
                { name = "Int32#"
                , moduleName = ModuleName "Builtin"
                , sort = External
                }
            , TYPE
            )
        ,
            ( Id
                { name = "t"
                , moduleName = Artifact
                    ( ArtifactPath
                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                        , relPath = "test/testcases/malgo/Test2.mlg"
                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                        }
                    )
                , sort = Internal 7
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = Artifact
                        ( ArtifactPath
                            { rawPath = "./test/testcases/malgo/Test2.mlg"
                            , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                            , relPath = "test/testcases/malgo/Test2.mlg"
                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                            }
                        )
                    , sort = Temporal 6
                    }
                )
            )
        ,
            ( Id
                { name = "t"
                , moduleName = Artifact
                    ( ArtifactPath
                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                        , relPath = "test/testcases/malgo/Test2.mlg"
                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                        }
                    )
                , sort = Internal 5
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = Artifact
                        ( ArtifactPath
                            { rawPath = "./test/testcases/malgo/Test2.mlg"
                            , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                            , relPath = "test/testcases/malgo/Test2.mlg"
                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                            }
                        )
                    , sort = Temporal 4
                    }
                )
            )
        ,
            ( Id
                { name = "Ptr#"
                , moduleName = ModuleName "Builtin"
                , sort = External
                }
            , TyArr TYPE TYPE
            )
        ,
            ( Id
                { name = "Char#"
                , moduleName = ModuleName "Builtin"
                , sort = External
                }
            , TYPE
            )
        ,
            ( Id
                { name = "t"
                , moduleName = Artifact
                    ( ArtifactPath
                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                        , relPath = "test/testcases/malgo/Test2.mlg"
                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                        }
                    )
                , sort = Internal 3
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = Artifact
                        ( ArtifactPath
                            { rawPath = "./test/testcases/malgo/Test2.mlg"
                            , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                            , relPath = "test/testcases/malgo/Test2.mlg"
                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                            }
                        )
                    , sort = Temporal 2
                    }
                )
            )
        ,
            ( Id
                { name = "Int64#"
                , moduleName = ModuleName "Builtin"
                , sort = External
                }
            , TYPE
            )
        ,
            ( Id
                { name = "String#"
                , moduleName = ModuleName "Builtin"
                , sort = External
                }
            , TYPE
            )
        ,
            ( Id
                { name = "Float#"
                , moduleName = ModuleName "Builtin"
                , sort = External
                }
            , TYPE
            )
        ,
            ( Id
                { name = "t"
                , moduleName = Artifact
                    ( ArtifactPath
                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                        , relPath = "test/testcases/malgo/Test2.mlg"
                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                        }
                    )
                , sort = Internal 21
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = Artifact
                        ( ArtifactPath
                            { rawPath = "./test/testcases/malgo/Test2.mlg"
                            , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                            , relPath = "test/testcases/malgo/Test2.mlg"
                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                            }
                        )
                    , sort = Temporal 20
                    }
                )
            )
        ,
            ( Id
                { name = "t"
                , moduleName = Artifact
                    ( ArtifactPath
                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                        , relPath = "test/testcases/malgo/Test2.mlg"
                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                        }
                    )
                , sort = Internal 19
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = Artifact
                        ( ArtifactPath
                            { rawPath = "./test/testcases/malgo/Test2.mlg"
                            , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                            , relPath = "test/testcases/malgo/Test2.mlg"
                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                            }
                        )
                    , sort = Temporal 18
                    }
                )
            )
        ,
            ( Id
                { name = "t"
                , moduleName = Artifact
                    ( ArtifactPath
                        { rawPath = "./test/testcases/malgo/Test2.mlg"
                        , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                        , relPath = "test/testcases/malgo/Test2.mlg"
                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                        }
                    )
                , sort = Internal 17
                }
            , TyMeta
                ( Id
                    { name = "kt"
                    , moduleName = Artifact
                        ( ArtifactPath
                            { rawPath = "./test/testcases/malgo/Test2.mlg"
                            , originPath = "/workspaces/malgo/test/testcases/malgo/Test2.mlg"
                            , relPath = "test/testcases/malgo/Test2.mlg"
                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/Test2.mlg"
                            }
                        )
                    , sort = Temporal 16
                    }
                )
            )
        ]
    , _globalDefs = []
    , globalClosures = fromList []
    }