Program
    { topVars = []
    , topFuns =
        [
            ( Meta
                { meta =
                    [ AnyT
                    , AnyT
                    ] :-> AnyT
                , id = Id
                    { name = "Cons_curry"
                    , moduleName = Artifact
                        ( ArtifactPath
                            { rawPath = "./test/testcases/malgo/DataDef.mlg"
                            , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                            , relPath = "test/testcases/malgo/DataDef.mlg"
                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                            }
                        )
                    , sort = Temporal 24
                    }
                }
            ,
                [ Meta
                    { meta = AnyT
                    , id = Id
                        { name = "p"
                        , moduleName = Artifact
                            ( ArtifactPath
                                { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                , relPath = "test/testcases/malgo/DataDef.mlg"
                                , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                }
                            )
                        , sort = Temporal 25
                        }
                    }
                , Meta
                    { meta = AnyT
                    , id = Id
                        { name = "p"
                        , moduleName = Artifact
                            ( ArtifactPath
                                { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                , relPath = "test/testcases/malgo/DataDef.mlg"
                                , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                }
                            )
                        , sort = Temporal 26
                        }
                    }
                ]
            ,
                [ AnyT
                , AnyT
                ] :-> AnyT
            , Let
                [ LocalDef
                    { _variable = Meta
                        { meta = SumT
                            [ Con
                                ( Data "test/testcases/malgo/DataDef.mlg.Nil" ) []
                            , Con
                                ( Data "test/testcases/malgo/DataDef.mlg.Cons" )
                                [ AnyT
                                , AnyT
                                ]
                            ]
                        , id = Id
                            { name = "let"
                            , moduleName = Artifact
                                ( ArtifactPath
                                    { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                    , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                    , relPath = "test/testcases/malgo/DataDef.mlg"
                                    , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                    }
                                )
                            , sort = Temporal 27
                            }
                        }
                    , typ = SumT
                        [ Con
                            ( Data "test/testcases/malgo/DataDef.mlg.Nil" ) []
                        , Con
                            ( Data "test/testcases/malgo/DataDef.mlg.Cons" )
                            [ AnyT
                            , AnyT
                            ]
                        ]
                    , _object = Pack
                        ( SumT
                            [ Con
                                ( Data "test/testcases/malgo/DataDef.mlg.Nil" ) []
                            , Con
                                ( Data "test/testcases/malgo/DataDef.mlg.Cons" )
                                [ AnyT
                                , AnyT
                                ]
                            ]
                        )
                        ( Con
                            ( Data "test/testcases/malgo/DataDef.mlg.Cons" )
                            [ AnyT
                            , AnyT
                            ]
                        )
                        [ Var
                            ( Meta
                                { meta = AnyT
                                , id = Id
                                    { name = "p"
                                    , moduleName = Artifact
                                        ( ArtifactPath
                                            { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                            , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                            , relPath = "test/testcases/malgo/DataDef.mlg"
                                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                            }
                                        )
                                    , sort = Temporal 25
                                    }
                                }
                            )
                        , Var
                            ( Meta
                                { meta = AnyT
                                , id = Id
                                    { name = "p"
                                    , moduleName = Artifact
                                        ( ArtifactPath
                                            { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                            , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                            , relPath = "test/testcases/malgo/DataDef.mlg"
                                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                            }
                                        )
                                    , sort = Temporal 26
                                    }
                                }
                            )
                        ]
                    }
                ]
                ( Cast AnyT
                    ( Var
                        ( Meta
                            { meta = SumT
                                [ Con
                                    ( Data "test/testcases/malgo/DataDef.mlg.Nil" ) []
                                , Con
                                    ( Data "test/testcases/malgo/DataDef.mlg.Cons" )
                                    [ AnyT
                                    , AnyT
                                    ]
                                ]
                            , id = Id
                                { name = "let"
                                , moduleName = Artifact
                                    ( ArtifactPath
                                        { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                        , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                        , relPath = "test/testcases/malgo/DataDef.mlg"
                                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                        }
                                    )
                                , sort = Temporal 27
                                }
                            }
                        )
                    )
                )
            )
        ,
            ( Meta
                { meta = [ Int64T ] :-> AnyT
                , id = Id
                    { name = "Int#"
                    , moduleName = Artifact
                        ( ArtifactPath
                            { rawPath = "./test/testcases/malgo/DataDef.mlg"
                            , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                            , relPath = "test/testcases/malgo/DataDef.mlg"
                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                            }
                        )
                    , sort = External
                    }
                }
            ,
                [ Meta
                    { meta = Int64T
                    , id = Id
                        { name = "p"
                        , moduleName = Artifact
                            ( ArtifactPath
                                { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                , relPath = "test/testcases/malgo/DataDef.mlg"
                                , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                }
                            )
                        , sort = Temporal 18
                        }
                    }
                ]
            , [ Int64T ] :-> AnyT
            , Let
                [ LocalDef
                    { _variable = Meta
                        { meta = SumT
                            [ Con
                                ( Data "test/testcases/malgo/DataDef.mlg.Int#" ) [ Int64T ]
                            ]
                        , id = Id
                            { name = "let"
                            , moduleName = Artifact
                                ( ArtifactPath
                                    { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                    , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                    , relPath = "test/testcases/malgo/DataDef.mlg"
                                    , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                    }
                                )
                            , sort = Temporal 19
                            }
                        }
                    , typ = SumT
                        [ Con
                            ( Data "test/testcases/malgo/DataDef.mlg.Int#" ) [ Int64T ]
                        ]
                    , _object = Pack
                        ( SumT
                            [ Con
                                ( Data "test/testcases/malgo/DataDef.mlg.Int#" ) [ Int64T ]
                            ]
                        )
                        ( Con
                            ( Data "test/testcases/malgo/DataDef.mlg.Int#" ) [ Int64T ]
                        )
                        [ Var
                            ( Meta
                                { meta = Int64T
                                , id = Id
                                    { name = "p"
                                    , moduleName = Artifact
                                        ( ArtifactPath
                                            { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                            , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                            , relPath = "test/testcases/malgo/DataDef.mlg"
                                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                            }
                                        )
                                    , sort = Temporal 18
                                    }
                                }
                            )
                        ]
                    }
                ]
                ( Cast AnyT
                    ( Var
                        ( Meta
                            { meta = SumT
                                [ Con
                                    ( Data "test/testcases/malgo/DataDef.mlg.Int#" ) [ Int64T ]
                                ]
                            , id = Id
                                { name = "let"
                                , moduleName = Artifact
                                    ( ArtifactPath
                                        { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                        , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                        , relPath = "test/testcases/malgo/DataDef.mlg"
                                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                        }
                                    )
                                , sort = Temporal 19
                                }
                            }
                        )
                    )
                )
            )
        ,
            ( Meta
                { meta = [] :-> AnyT
                , id = Id
                    { name = "Nil"
                    , moduleName = Artifact
                        ( ArtifactPath
                            { rawPath = "./test/testcases/malgo/DataDef.mlg"
                            , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                            , relPath = "test/testcases/malgo/DataDef.mlg"
                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                            }
                        )
                    , sort = External
                    }
                }
            , []
            , [] :-> AnyT
            , Let
                [ LocalDef
                    { _variable = Meta
                        { meta = SumT
                            [ Con
                                ( Data "test/testcases/malgo/DataDef.mlg.Nil" ) []
                            , Con
                                ( Data "test/testcases/malgo/DataDef.mlg.Cons" )
                                [ AnyT
                                , AnyT
                                ]
                            ]
                        , id = Id
                            { name = "let"
                            , moduleName = Artifact
                                ( ArtifactPath
                                    { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                    , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                    , relPath = "test/testcases/malgo/DataDef.mlg"
                                    , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                    }
                                )
                            , sort = Temporal 20
                            }
                        }
                    , typ = SumT
                        [ Con
                            ( Data "test/testcases/malgo/DataDef.mlg.Nil" ) []
                        , Con
                            ( Data "test/testcases/malgo/DataDef.mlg.Cons" )
                            [ AnyT
                            , AnyT
                            ]
                        ]
                    , _object = Pack
                        ( SumT
                            [ Con
                                ( Data "test/testcases/malgo/DataDef.mlg.Nil" ) []
                            , Con
                                ( Data "test/testcases/malgo/DataDef.mlg.Cons" )
                                [ AnyT
                                , AnyT
                                ]
                            ]
                        )
                        ( Con
                            ( Data "test/testcases/malgo/DataDef.mlg.Nil" ) []
                        ) []
                    }
                ]
                ( Cast AnyT
                    ( Var
                        ( Meta
                            { meta = SumT
                                [ Con
                                    ( Data "test/testcases/malgo/DataDef.mlg.Nil" ) []
                                , Con
                                    ( Data "test/testcases/malgo/DataDef.mlg.Cons" )
                                    [ AnyT
                                    , AnyT
                                    ]
                                ]
                            , id = Id
                                { name = "let"
                                , moduleName = Artifact
                                    ( ArtifactPath
                                        { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                        , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                        , relPath = "test/testcases/malgo/DataDef.mlg"
                                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                        }
                                    )
                                , sort = Temporal 20
                                }
                            }
                        )
                    )
                )
            )
        ,
            ( Meta
                { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT )
                , id = Id
                    { name = "Cons"
                    , moduleName = Artifact
                        ( ArtifactPath
                            { rawPath = "./test/testcases/malgo/DataDef.mlg"
                            , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                            , relPath = "test/testcases/malgo/DataDef.mlg"
                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                            }
                        )
                    , sort = External
                    }
                }
            ,
                [ Meta
                    { meta = AnyT
                    , id = Id
                        { name = "p"
                        , moduleName = Artifact
                            ( ArtifactPath
                                { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                , relPath = "test/testcases/malgo/DataDef.mlg"
                                , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                }
                            )
                        , sort = Temporal 21
                        }
                    }
                ]
            , [ AnyT ] :->
                ( [ AnyT ] :-> AnyT )
            , Let
                [ LocalDef
                    { _variable = Meta
                        { meta = [ AnyT ] :-> AnyT
                        , id = Id
                            { name = "let"
                            , moduleName = Artifact
                                ( ArtifactPath
                                    { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                    , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                    , relPath = "test/testcases/malgo/DataDef.mlg"
                                    , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                    }
                                )
                            , sort = Temporal 28
                            }
                        }
                    , typ = [ AnyT ] :-> AnyT
                    , _object = Fun
                        [ Meta
                            { meta = AnyT
                            , id = Id
                                { name = "p"
                                , moduleName = Artifact
                                    ( ArtifactPath
                                        { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                        , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                        , relPath = "test/testcases/malgo/DataDef.mlg"
                                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                        }
                                    )
                                , sort = Temporal 22
                                }
                            }
                        ]
                        ( CallDirect
                            ( Meta
                                { meta =
                                    [ AnyT
                                    , AnyT
                                    ] :-> AnyT
                                , id = Id
                                    { name = "Cons_curry"
                                    , moduleName = Artifact
                                        ( ArtifactPath
                                            { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                            , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                            , relPath = "test/testcases/malgo/DataDef.mlg"
                                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                            }
                                        )
                                    , sort = Temporal 24
                                    }
                                }
                            )
                            [ Var
                                ( Meta
                                    { meta = AnyT
                                    , id = Id
                                        { name = "p"
                                        , moduleName = Artifact
                                            ( ArtifactPath
                                                { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                                , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                                , relPath = "test/testcases/malgo/DataDef.mlg"
                                                , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                                }
                                            )
                                        , sort = Temporal 21
                                        }
                                    }
                                )
                            , Var
                                ( Meta
                                    { meta = AnyT
                                    , id = Id
                                        { name = "p"
                                        , moduleName = Artifact
                                            ( ArtifactPath
                                                { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                                , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                                , relPath = "test/testcases/malgo/DataDef.mlg"
                                                , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                                }
                                            )
                                        , sort = Temporal 22
                                        }
                                    }
                                )
                            ]
                        )
                    }
                ]
                ( Atom
                    ( Var
                        ( Meta
                            { meta = [ AnyT ] :-> AnyT
                            , id = Id
                                { name = "let"
                                , moduleName = Artifact
                                    ( ArtifactPath
                                        { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                        , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                        , relPath = "test/testcases/malgo/DataDef.mlg"
                                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                        }
                                    )
                                , sort = Temporal 28
                                }
                            }
                        )
                    )
                )
            )
        ,
            ( Meta
                { meta = [ Int64T ] :-> StringT
                , id = Id
                    { name = "malgo_int64_t_to_string"
                    , moduleName = Artifact
                        ( ArtifactPath
                            { rawPath = "./test/testcases/malgo/DataDef.mlg"
                            , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                            , relPath = "test/testcases/malgo/DataDef.mlg"
                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                            }
                        )
                    , sort = External
                    }
                }
            ,
                [ Meta
                    { meta = Int64T
                    , id = Id
                        { name = "p"
                        , moduleName = Artifact
                            ( ArtifactPath
                                { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                , relPath = "test/testcases/malgo/DataDef.mlg"
                                , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                }
                            )
                        , sort = Temporal 29
                        }
                    }
                ]
            , [ Int64T ] :-> StringT
            , RawCall "malgo_int64_t_to_string"
                ( [ Int64T ] :-> StringT )
                [ Var
                    ( Meta
                        { meta = Int64T
                        , id = Id
                            { name = "p"
                            , moduleName = Artifact
                                ( ArtifactPath
                                    { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                    , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                    , relPath = "test/testcases/malgo/DataDef.mlg"
                                    , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                    }
                                )
                            , sort = Temporal 29
                            }
                        }
                    )
                ]
            )
        ,
            ( Meta
                { meta = [ StringT ] :-> SumT
                    [ Con Tuple [] ]
                , id = Id
                    { name = "malgo_print_string"
                    , moduleName = Artifact
                        ( ArtifactPath
                            { rawPath = "./test/testcases/malgo/DataDef.mlg"
                            , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                            , relPath = "test/testcases/malgo/DataDef.mlg"
                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                            }
                        )
                    , sort = External
                    }
                }
            ,
                [ Meta
                    { meta = StringT
                    , id = Id
                        { name = "p"
                        , moduleName = Artifact
                            ( ArtifactPath
                                { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                , relPath = "test/testcases/malgo/DataDef.mlg"
                                , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                }
                            )
                        , sort = Temporal 30
                        }
                    }
                ]
            , [ StringT ] :-> SumT
                [ Con Tuple [] ]
            , RawCall "malgo_print_string"
                ( [ StringT ] :-> SumT
                    [ Con Tuple [] ]
                )
                [ Var
                    ( Meta
                        { meta = StringT
                        , id = Id
                            { name = "p"
                            , moduleName = Artifact
                                ( ArtifactPath
                                    { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                    , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                    , relPath = "test/testcases/malgo/DataDef.mlg"
                                    , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                    }
                                )
                            , sort = Temporal 30
                            }
                        }
                    )
                ]
            )
        ,
            ( Meta
                { meta =
                    [ SumT
                        [ Con Tuple [] ]
                    ] :-> SumT
                    [ Con Tuple [] ]
                , id = Id
                    { name = "main"
                    , moduleName = Artifact
                        ( ArtifactPath
                            { rawPath = "./test/testcases/malgo/DataDef.mlg"
                            , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                            , relPath = "test/testcases/malgo/DataDef.mlg"
                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                            }
                        )
                    , sort = External
                    }
                }
            ,
                [ Meta
                    { meta = SumT
                        [ Con Tuple [] ]
                    , id = Id
                        { name = "$_"
                        , moduleName = Artifact
                            ( ArtifactPath
                                { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                , relPath = "test/testcases/malgo/DataDef.mlg"
                                , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                }
                            )
                        , sort = Temporal 31
                        }
                    }
                ]
            ,
                [ SumT
                    [ Con Tuple [] ]
                ] :-> SumT
                [ Con Tuple [] ]
            , Let
                [ LocalDef
                    { _variable = Meta
                        { meta = [ AnyT ] :-> SumT
                            [ Con Tuple [] ]
                        , id = Id
                            { name = "fun"
                            , moduleName = Artifact
                                ( ArtifactPath
                                    { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                    , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                    , relPath = "test/testcases/malgo/DataDef.mlg"
                                    , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                    }
                                )
                            , sort = Temporal 37
                            }
                        }
                    , typ = [ AnyT ] :-> SumT
                        [ Con Tuple [] ]
                    , _object = Fun
                        [ Meta
                            { meta = AnyT
                            , id = Id
                                { name = "int#"
                                , moduleName = Artifact
                                    ( ArtifactPath
                                        { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                        , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                        , relPath = "test/testcases/malgo/DataDef.mlg"
                                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                        }
                                    )
                                , sort = Temporal 32
                                }
                            }
                        ]
                        ( Assign
                            ( Meta
                                { meta = SumT
                                    [ Con
                                        ( Data "test/testcases/malgo/DataDef.mlg.Int#" ) [ Int64T ]
                                    ]
                                , id = Id
                                    { name = "scrutinee"
                                    , moduleName = Artifact
                                        ( ArtifactPath
                                            { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                            , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                            , relPath = "test/testcases/malgo/DataDef.mlg"
                                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                            }
                                        )
                                    , sort = Temporal 42
                                    }
                                }
                            )
                            ( Cast
                                ( SumT
                                    [ Con
                                        ( Data "test/testcases/malgo/DataDef.mlg.Int#" ) [ Int64T ]
                                    ]
                                )
                                ( Var
                                    ( Meta
                                        { meta = AnyT
                                        , id = Id
                                            { name = "int#"
                                            , moduleName = Artifact
                                                ( ArtifactPath
                                                    { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                                    , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                                    , relPath = "test/testcases/malgo/DataDef.mlg"
                                                    , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                                    }
                                                )
                                            , sort = Temporal 32
                                            }
                                        }
                                    )
                                )
                            )
                            ( Switch
                                ( Var
                                    ( Meta
                                        { meta = SumT
                                            [ Con
                                                ( Data "test/testcases/malgo/DataDef.mlg.Int#" ) [ Int64T ]
                                            ]
                                        , id = Id
                                            { name = "scrutinee"
                                            , moduleName = Artifact
                                                ( ArtifactPath
                                                    { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                                    , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                                    , relPath = "test/testcases/malgo/DataDef.mlg"
                                                    , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                                    }
                                                )
                                            , sort = Temporal 42
                                            }
                                        }
                                    )
                                )
                                [
                                    ( Data "test/testcases/malgo/DataDef.mlg.Int#"
                                    , Destruct
                                        ( Var
                                            ( Meta
                                                { meta = SumT
                                                    [ Con
                                                        ( Data "test/testcases/malgo/DataDef.mlg.Int#" ) [ Int64T ]
                                                    ]
                                                , id = Id
                                                    { name = "scrutinee"
                                                    , moduleName = Artifact
                                                        ( ArtifactPath
                                                            { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                                            , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                                            , relPath = "test/testcases/malgo/DataDef.mlg"
                                                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                                            }
                                                        )
                                                    , sort = Temporal 42
                                                    }
                                                }
                                            )
                                        )
                                        ( Con
                                            ( Data "test/testcases/malgo/DataDef.mlg.Int#" ) [ Int64T ]
                                        )
                                        [ Meta
                                            { meta = Int64T
                                            , id = Id
                                                { name = "p"
                                                , moduleName = Artifact
                                                    ( ArtifactPath
                                                        { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                                        , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                                        , relPath = "test/testcases/malgo/DataDef.mlg"
                                                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                                        }
                                                    )
                                                , sort = Temporal 33
                                                }
                                            }
                                        ]
                                        ( Assign
                                            ( Meta
                                                { meta = StringT
                                                , id = Id
                                                    { name = "d"
                                                    , moduleName = Artifact
                                                        ( ArtifactPath
                                                            { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                                            , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                                            , relPath = "test/testcases/malgo/DataDef.mlg"
                                                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                                            }
                                                        )
                                                    , sort = Temporal 34
                                                    }
                                                }
                                            )
                                            ( Call
                                                ( Var
                                                    ( Meta
                                                        { meta = [ Int64T ] :-> StringT
                                                        , id = Id
                                                            { name = "malgo_int64_t_to_string"
                                                            , moduleName = Artifact
                                                                ( ArtifactPath
                                                                    { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                                                    , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                                                    , relPath = "test/testcases/malgo/DataDef.mlg"
                                                                    , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                                                    }
                                                                )
                                                            , sort = External
                                                            }
                                                        }
                                                    )
                                                )
                                                [ Var
                                                    ( Meta
                                                        { meta = Int64T
                                                        , id = Id
                                                            { name = "p"
                                                            , moduleName = Artifact
                                                                ( ArtifactPath
                                                                    { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                                                    , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                                                    , relPath = "test/testcases/malgo/DataDef.mlg"
                                                                    , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                                                    }
                                                                )
                                                            , sort = Temporal 33
                                                            }
                                                        }
                                                    )
                                                ]
                                            )
                                            ( Assign
                                                ( Meta
                                                    { meta = StringT
                                                    , id = Id
                                                        { name = "d"
                                                        , moduleName = Artifact
                                                            ( ArtifactPath
                                                                { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                                                , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                                                , relPath = "test/testcases/malgo/DataDef.mlg"
                                                                , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                                                }
                                                            )
                                                        , sort = Temporal 35
                                                        }
                                                    }
                                                )
                                                ( Cast StringT
                                                    ( Var
                                                        ( Meta
                                                            { meta = StringT
                                                            , id = Id
                                                                { name = "d"
                                                                , moduleName = Artifact
                                                                    ( ArtifactPath
                                                                        { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                                                        , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                                                        , relPath = "test/testcases/malgo/DataDef.mlg"
                                                                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                                                        }
                                                                    )
                                                                , sort = Temporal 34
                                                                }
                                                            }
                                                        )
                                                    )
                                                )
                                                ( Assign
                                                    ( Meta
                                                        { meta = SumT
                                                            [ Con Tuple [] ]
                                                        , id = Id
                                                            { name = "d"
                                                            , moduleName = Artifact
                                                                ( ArtifactPath
                                                                    { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                                                    , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                                                    , relPath = "test/testcases/malgo/DataDef.mlg"
                                                                    , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                                                    }
                                                                )
                                                            , sort = Temporal 36
                                                            }
                                                        }
                                                    )
                                                    ( Call
                                                        ( Var
                                                            ( Meta
                                                                { meta = [ StringT ] :-> SumT
                                                                    [ Con Tuple [] ]
                                                                , id = Id
                                                                    { name = "malgo_print_string"
                                                                    , moduleName = Artifact
                                                                        ( ArtifactPath
                                                                            { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                                                            , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                                                            , relPath = "test/testcases/malgo/DataDef.mlg"
                                                                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                                                            }
                                                                        )
                                                                    , sort = External
                                                                    }
                                                                }
                                                            )
                                                        )
                                                        [ Var
                                                            ( Meta
                                                                { meta = StringT
                                                                , id = Id
                                                                    { name = "d"
                                                                    , moduleName = Artifact
                                                                        ( ArtifactPath
                                                                            { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                                                            , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                                                            , relPath = "test/testcases/malgo/DataDef.mlg"
                                                                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                                                            }
                                                                        )
                                                                    , sort = Temporal 35
                                                                    }
                                                                }
                                                            )
                                                        ]
                                                    )
                                                    ( Cast
                                                        ( SumT
                                                            [ Con Tuple [] ]
                                                        )
                                                        ( Var
                                                            ( Meta
                                                                { meta = SumT
                                                                    [ Con Tuple [] ]
                                                                , id = Id
                                                                    { name = "d"
                                                                    , moduleName = Artifact
                                                                        ( ArtifactPath
                                                                            { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                                                            , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                                                            , relPath = "test/testcases/malgo/DataDef.mlg"
                                                                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                                                            }
                                                                        )
                                                                    , sort = Temporal 36
                                                                    }
                                                                }
                                                            )
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    )
                                ]
                                ( Error
                                    ( SumT
                                        [ Con Tuple [] ]
                                    )
                                )
                            )
                        )
                    }
                ]
                ( Assign
                    ( Meta
                        { meta = AnyT
                        , id = Id
                            { name = "d"
                            , moduleName = Artifact
                                ( ArtifactPath
                                    { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                    , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                    , relPath = "test/testcases/malgo/DataDef.mlg"
                                    , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                    }
                                )
                            , sort = Temporal 39
                            }
                        }
                    )
                    ( Call
                        ( Var
                            ( Meta
                                { meta = [ Int64T ] :-> AnyT
                                , id = Id
                                    { name = "Int#"
                                    , moduleName = Artifact
                                        ( ArtifactPath
                                            { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                            , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                            , relPath = "test/testcases/malgo/DataDef.mlg"
                                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                            }
                                        )
                                    , sort = External
                                    }
                                }
                            )
                        )
                        [ Unboxed
                            ( Int64 1 )
                        ]
                    )
                    ( Assign
                        ( Meta
                            { meta = AnyT
                            , id = Id
                                { name = "d"
                                , moduleName = Artifact
                                    ( ArtifactPath
                                        { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                        , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                        , relPath = "test/testcases/malgo/DataDef.mlg"
                                        , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                        }
                                    )
                                , sort = Temporal 40
                                }
                            }
                        )
                        ( Cast AnyT
                            ( Var
                                ( Meta
                                    { meta = AnyT
                                    , id = Id
                                        { name = "d"
                                        , moduleName = Artifact
                                            ( ArtifactPath
                                                { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                                , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                                , relPath = "test/testcases/malgo/DataDef.mlg"
                                                , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                                }
                                            )
                                        , sort = Temporal 39
                                        }
                                    }
                                )
                            )
                        )
                        ( Assign
                            ( Meta
                                { meta = SumT
                                    [ Con Tuple [] ]
                                , id = Id
                                    { name = "d"
                                    , moduleName = Artifact
                                        ( ArtifactPath
                                            { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                            , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                            , relPath = "test/testcases/malgo/DataDef.mlg"
                                            , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                            }
                                        )
                                    , sort = Temporal 41
                                    }
                                }
                            )
                            ( Call
                                ( Var
                                    ( Meta
                                        { meta = [ AnyT ] :-> SumT
                                            [ Con Tuple [] ]
                                        , id = Id
                                            { name = "fun"
                                            , moduleName = Artifact
                                                ( ArtifactPath
                                                    { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                                    , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                                    , relPath = "test/testcases/malgo/DataDef.mlg"
                                                    , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                                    }
                                                )
                                            , sort = Temporal 37
                                            }
                                        }
                                    )
                                )
                                [ Var
                                    ( Meta
                                        { meta = AnyT
                                        , id = Id
                                            { name = "d"
                                            , moduleName = Artifact
                                                ( ArtifactPath
                                                    { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                                    , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                                    , relPath = "test/testcases/malgo/DataDef.mlg"
                                                    , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                                    }
                                                )
                                            , sort = Temporal 40
                                            }
                                        }
                                    )
                                ]
                            )
                            ( Cast
                                ( SumT
                                    [ Con Tuple [] ]
                                )
                                ( Var
                                    ( Meta
                                        { meta = SumT
                                            [ Con Tuple [] ]
                                        , id = Id
                                            { name = "d"
                                            , moduleName = Artifact
                                                ( ArtifactPath
                                                    { rawPath = "./test/testcases/malgo/DataDef.mlg"
                                                    , originPath = "/workspaces/malgo/test/testcases/malgo/DataDef.mlg"
                                                    , relPath = "test/testcases/malgo/DataDef.mlg"
                                                    , targetPath = "/workspaces/malgo/.malgo-work/test/testcases/malgo/DataDef.mlg"
                                                    }
                                                )
                                            , sort = Temporal 41
                                            }
                                        }
                                    )
                                )
                            )
                        )
                    )
                )
            )
        ]
    , extFuns =
        [
            ( "malgo_int64_t_to_string"
            , [ Int64T ] :-> StringT
            )
        ,
            ( "malgo_print_string"
            , [ StringT ] :-> SumT
                [ Con Tuple [] ]
            )
        ]
    }