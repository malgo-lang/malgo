(module
   "test/testcases/malgo/TestList.mlg"
   ((((((./test/testcases/malgo/TestList.mlg 4 1)
          (./test/testcases/malgo/TestList.mlg 9 1))
         main
         (fn
            ((clause
                ()
                (seq
                   (let
                      #TestList.xs_xxx
                      (apply
                         (apply Cons (apply Int32# (int32 1)))
                         (apply
                            (apply Cons (apply Int32# (int32 2)))
                            (apply (apply Cons (apply Int32# (int32 3))) Nil))))
                   (let #TestList.nil_xxx Nil)
                   (do
                      (apply
                         putStrLn
                         (seq
                            (do
                               (apply
                                  toStringInt32
                                  (seq (do (apply head #TestList.xs_xxx)))))))))))))))
      ()
      ()
      ()
      ()
      ((((./test/testcases/malgo/TestList.mlg 1 1)
           (./test/testcases/malgo/TestList.mlg 2 1))
          "runtime/malgo/Builtin.mlg"
          all)
         (((./test/testcases/malgo/TestList.mlg 2 1)
             (./test/testcases/malgo/TestList.mlg 4 1))
            "runtime/malgo/Prelude.mlg"
            all))))