(module
   "test/testcases/malgo/TestEither.mlg"
   ((((((./test/testcases/malgo/TestEither.mlg 6 1)
          (./test/testcases/malgo/TestEither.mlg 8 1))
         id
         (fn ((clause (#TestEither.x_xxx) (seq (do #TestEither.x_xxx)))))))
       ((((./test/testcases/malgo/TestEither.mlg 8 1)
            (./test/testcases/malgo/TestEither.mlg 12 1))
           andThen
           (fn
              ((clause
                  (#TestEither.__xxx (con Left (#TestEither.x_xxx)))
                  (seq (do (apply Left #TestEither.x_xxx))))
                 (clause
                    (#TestEither.f_xxx (con Right (#TestEither.x_xxx)))
                    (seq (do (apply #TestEither.f_xxx #TestEither.x_xxx))))))))
       ((((./test/testcases/malgo/TestEither.mlg 12 1)
            (./test/testcases/malgo/TestEither.mlg 25 1))
           main
           (fn
              ((clause
                  ()
                  (seq
                     (do
                        (opapp
                           |>
                           (apply Right (apply Int32# (int32 1)))
                           (fn
                              ((clause
                                  ((con Right ()) #TestEither.x_xxx)
                                  (seq
                                     (do
                                        (apply
                                           putStr
                                           (seq
                                              (do
                                                 (apply
                                                    toStringInt32
                                                    #TestEither.x_xxx)))))))
                                 (clause
                                    (#TestEither.__xxx)
                                    (seq
                                       (do
                                          (apply
                                             putStrLn
                                             (apply
                                                String#
                                                (string "unreachable"))))))))))
                     (let
                        #TestEither.x_xxx
                        (apply Right (apply Int32# (int32 1))))
                     (do
                        (opapp
                           |>
                           (opapp
                              |>
                              #TestEither.x_xxx
                              (apply
                                 andThen
                                 (fn
                                    ((clause
                                        (#TestEither.x_xxx)
                                        (seq
                                           (do
                                              (apply
                                                 Right
                                                 (seq
                                                    (do
                                                       (apply
                                                          (apply
                                                             addInt32
                                                             (apply
                                                                Int32#
                                                                (int32 1)))
                                                          #TestEither.x_xxx)))))))))))
                           (apply
                              andThen
                              (fn
                                 ((clause
                                     (#TestEither.y_xxx)
                                     (seq
                                        (do
                                           (opapp
                                              |>
                                              (opapp
                                                 |>
                                                 (opapp
                                                    |>
                                                    #TestEither.y_xxx
                                                    toStringInt32)
                                                 putStr)
                                              Right)))))))))
                     (do
                        (opapp
                           |>
                           (opapp
                              |>
                              (opapp
                                 |>
                                 #TestEither.x_xxx
                                 (apply
                                    andThen
                                    (fn
                                       ((clause
                                           (#TestEither.__xxx)
                                           (seq
                                              (do
                                                 (apply
                                                    Left
                                                    (apply
                                                       String#
                                                       (string "error"))))))))))
                              (apply
                                 andThen
                                 (fn
                                    ((clause
                                        (#TestEither.x_xxx)
                                        (seq
                                           (do
                                              (apply
                                                 Right
                                                 (seq
                                                    (do
                                                       (apply
                                                          (apply
                                                             addInt32
                                                             (apply
                                                                Int32#
                                                                (int32 1)))
                                                          #TestEither.x_xxx)))))))))))
                           (fn
                              ((clause
                                  ((con Left ()) #TestEither.err_xxx)
                                  (seq (do (apply putStrLn #TestEither.err_xxx))))
                                 (clause
                                    ((con Right ()) #TestEither.x_xxx)
                                    (seq
                                       (do
                                          (opapp
                                             |>
                                             (opapp
                                                |>
                                                #TestEither.x_xxx
                                                toStringInt32)
                                             putStrLn)))))))))))))))
      ()
      ((((./test/testcases/malgo/TestEither.mlg 4 1)
           (./test/testcases/malgo/TestEither.mlg 6 1))
          Either
          ((((./test/testcases/malgo/TestEither.mlg 4 13)
               (./test/testcases/malgo/TestEither.mlg 4 15))
              #TestEither.a_xxx)
             (((./test/testcases/malgo/TestEither.mlg 4 15)
                 (./test/testcases/malgo/TestEither.mlg 4 17))
                #TestEither.b_xxx))
          ((((./test/testcases/malgo/TestEither.mlg 4 19)
               (./test/testcases/malgo/TestEither.mlg 4 26))
              Left
              (#TestEither.a_xxx))
             (((./test/testcases/malgo/TestEither.mlg 4 28)
                 (./test/testcases/malgo/TestEither.mlg 6 1))
                Right
                (#TestEither.b_xxx)))))
      ()
      ()
      ((((./test/testcases/malgo/TestEither.mlg 1 1)
           (./test/testcases/malgo/TestEither.mlg 2 1))
          "runtime/malgo/Builtin.mlg"
          all)
         (((./test/testcases/malgo/TestEither.mlg 2 1)
             (./test/testcases/malgo/TestEither.mlg 4 1))
            "runtime/malgo/Prelude.mlg"
            all))))