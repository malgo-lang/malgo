Program
 { topVars =
  [
   ( Meta
    { meta = AnyT, id = Id
     { name = "undefined", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } }, AnyT, Let
    [ LocalDef
     { _variable = Meta
      { meta = SumT
       [ Con Tuple [] ], id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = SumT
      [ Con Tuple [] ], _object = Pack
      ( SumT [ Con Tuple [] ] )
      ( Con Tuple [] ) [] } ]
    ( Assign
     ( Meta
      { meta = AnyT, id = Id
       { name = "cast", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast AnyT
      ( Var
       ( Meta
        { meta = SumT
         [ Con Tuple [] ], id = Id
         { name = "let", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = AnyT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ AnyT ] :-> AnyT, id = Id
          { name = "malgo_unsafe_cast", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "cast", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast AnyT
       ( Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ], topFuns =
  [
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "addDouble_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "double#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "double#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "double#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Double#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] )
       [ Meta
        { meta = DoubleT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "double#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Double#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] )
           [ Meta
            { meta = DoubleT, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ DoubleT ] :-> DoubleT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ DoubleT ] :->
                ( [ DoubleT ] :-> DoubleT ), id = Id
                { name = "addDouble#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = DoubleT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ DoubleT ] :-> DoubleT, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ DoubleT ] :-> DoubleT )
              ( Var
               ( Meta
                { meta = [ DoubleT ] :-> DoubleT, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = DoubleT, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ DoubleT ] :-> DoubleT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = DoubleT, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = DoubleT, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast DoubleT
                ( Var
                 ( Meta
                  { meta = DoubleT, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ DoubleT ] :-> AnyT, id = Id
                    { name = "Double#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = DoubleT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ DoubleT, DoubleT ] :-> DoubleT, id = Id
     { name = "addDouble#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = DoubleT, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ DoubleT, DoubleT ] :-> DoubleT, Assign
    ( Meta
     { meta = [ DoubleT ] :-> DoubleT, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ DoubleT ] :->
        ( [ DoubleT ] :-> DoubleT ), id = Id
        { name = "malgo_add_double", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = DoubleT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ DoubleT ] :-> DoubleT, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ DoubleT ] :-> DoubleT )
      ( Var
       ( Meta
        { meta = [ DoubleT ] :-> DoubleT, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = DoubleT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ DoubleT ] :-> DoubleT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast DoubleT
       ( Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "addFloat_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "float#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "float#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "float#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Float#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] )
       [ Meta
        { meta = FloatT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "float#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Float#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] )
           [ Meta
            { meta = FloatT, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ FloatT ] :-> FloatT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ FloatT ] :->
                ( [ FloatT ] :-> FloatT ), id = Id
                { name = "addFloat#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = FloatT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ FloatT ] :-> FloatT, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ FloatT ] :-> FloatT )
              ( Var
               ( Meta
                { meta = [ FloatT ] :-> FloatT, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = FloatT, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ FloatT ] :-> FloatT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = FloatT, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = FloatT, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast FloatT
                ( Var
                 ( Meta
                  { meta = FloatT, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ FloatT ] :-> AnyT, id = Id
                    { name = "Float#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = FloatT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ FloatT, FloatT ] :-> FloatT, id = Id
     { name = "addFloat#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = FloatT, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ FloatT, FloatT ] :-> FloatT, Assign
    ( Meta
     { meta = [ FloatT ] :-> FloatT, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ FloatT ] :->
        ( [ FloatT ] :-> FloatT ), id = Id
        { name = "malgo_add_float", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = FloatT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ FloatT ] :-> FloatT, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ FloatT ] :-> FloatT )
      ( Var
       ( Meta
        { meta = [ FloatT ] :-> FloatT, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = FloatT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ FloatT ] :-> FloatT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast FloatT
       ( Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "addInt32_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int32#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "int32#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "int32#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Int32#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] )
       [ Meta
        { meta = Int32T, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "int32#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Int32#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] )
           [ Meta
            { meta = Int32T, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ Int32T ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ Int32T ] :->
                ( [ Int32T ] :-> Int32T ), id = Id
                { name = "addInt32#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = Int32T, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ Int32T ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ Int32T ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ Int32T ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ Int32T ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = Int32T, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "Int32#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ Int32T, Int32T ] :-> Int32T, id = Id
     { name = "addInt32#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int32T, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int32T, Int32T ] :-> Int32T, Assign
    ( Meta
     { meta = [ Int32T ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ Int32T ] :->
        ( [ Int32T ] :-> Int32T ), id = Id
        { name = "malgo_add_int32_t", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = Int32T, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ Int32T ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ Int32T ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ Int32T ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ Int32T ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "addInt64_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int64#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "int64#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "int64#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Int64#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] )
       [ Meta
        { meta = Int64T, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "int64#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Int64#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] )
           [ Meta
            { meta = Int64T, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ Int64T ] :-> Int64T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ Int64T ] :->
                ( [ Int64T ] :-> Int64T ), id = Id
                { name = "addInt64#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = Int64T, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ Int64T ] :-> Int64T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ Int64T ] :-> Int64T )
              ( Var
               ( Meta
                { meta = [ Int64T ] :-> Int64T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int64T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ Int64T ] :-> Int64T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = Int64T, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int64T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int64T
                ( Var
                 ( Meta
                  { meta = Int64T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int64T ] :-> AnyT, id = Id
                    { name = "Int64#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int64T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ Int64T, Int64T ] :-> Int64T, id = Id
     { name = "addInt64#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int64T, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int64T, Int64T ] :-> Int64T, Assign
    ( Meta
     { meta = [ Int64T ] :-> Int64T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ Int64T ] :->
        ( [ Int64T ] :-> Int64T ), id = Id
        { name = "malgo_add_int64_t", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = Int64T, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ Int64T ] :-> Int64T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ Int64T ] :-> Int64T )
      ( Var
       ( Meta
        { meta = [ Int64T ] :-> Int64T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int64T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ Int64T ] :-> Int64T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int64T
       ( Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "appendString_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "string#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "string#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "string#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.String#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] )
       [ Meta
        { meta = StringT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "string#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.String#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] )
           [ Meta
            { meta = StringT, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ StringT ] :-> StringT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ StringT ] :->
                ( [ StringT ] :-> StringT ), id = Id
                { name = "appendString#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = StringT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ StringT ] :-> StringT, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ StringT ] :-> StringT )
              ( Var
               ( Meta
                { meta = [ StringT ] :-> StringT, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = StringT, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ StringT ] :-> StringT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = StringT, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = StringT, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast StringT
                ( Var
                 ( Meta
                  { meta = StringT, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ StringT ] :-> AnyT, id = Id
                    { name = "String#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = StringT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ StringT, StringT ] :-> StringT, id = Id
     { name = "appendString#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = StringT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = StringT, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ StringT, StringT ] :-> StringT, Assign
    ( Meta
     { meta = [ StringT ] :-> StringT, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ StringT ] :->
        ( [ StringT ] :-> StringT ), id = Id
        { name = "malgo_string_append", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = StringT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ StringT ] :-> StringT, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ StringT ] :-> StringT )
      ( Var
       ( Meta
        { meta = [ StringT ] :-> StringT, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = StringT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ StringT ] :-> StringT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = StringT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast StringT
       ( Var
        ( Meta
         { meta = StringT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "atString_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int64#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "string#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "int64#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Int64#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] )
       [ Meta
        { meta = Int64T, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "string#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.String#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] )
           [ Meta
            { meta = StringT, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ StringT ] :-> CharT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ Int64T ] :->
                ( [ StringT ] :-> CharT ), id = Id
                { name = "atString#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = Int64T, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ StringT ] :-> CharT, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ StringT ] :-> CharT )
              ( Var
               ( Meta
                { meta = [ StringT ] :-> CharT, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = CharT, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ StringT ] :-> CharT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = StringT, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = CharT, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast CharT
                ( Var
                 ( Meta
                  { meta = CharT, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ CharT ] :-> AnyT, id = Id
                    { name = "Char#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = CharT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ Int64T, StringT ] :-> CharT, id = Id
     { name = "atString#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "i", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = StringT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int64T, StringT ] :-> CharT, Assign
    ( Meta
     { meta = [ StringT ] :-> CharT, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ Int64T ] :->
        ( [ StringT ] :-> CharT ), id = Id
        { name = "malgo_string_at", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = Int64T, id = Id
        { name = "i", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ StringT ] :-> CharT, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ StringT ] :-> CharT )
      ( Var
       ( Meta
        { meta = [ StringT ] :-> CharT, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = CharT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ StringT ] :-> CharT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = StringT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast CharT
       ( Var
        ( Meta
         { meta = CharT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "consString_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "char#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "string#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "char#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Char#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] )
       [ Meta
        { meta = CharT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "string#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.String#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] )
           [ Meta
            { meta = StringT, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ StringT ] :-> StringT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ CharT ] :->
                ( [ StringT ] :-> StringT ), id = Id
                { name = "consString#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = CharT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ StringT ] :-> StringT, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ StringT ] :-> StringT )
              ( Var
               ( Meta
                { meta = [ StringT ] :-> StringT, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = StringT, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ StringT ] :-> StringT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = StringT, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = StringT, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast StringT
                ( Var
                 ( Meta
                  { meta = StringT, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ StringT ] :-> AnyT, id = Id
                    { name = "String#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = StringT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ CharT, StringT ] :-> StringT, id = Id
     { name = "consString#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = CharT, id = Id
      { name = "c", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = StringT, id = Id
      { name = "cs", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ CharT, StringT ] :-> StringT, Assign
    ( Meta
     { meta = [ StringT ] :-> StringT, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ CharT ] :->
        ( [ StringT ] :-> StringT ), id = Id
        { name = "malgo_string_cons", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = CharT, id = Id
        { name = "c", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ StringT ] :-> StringT, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ StringT ] :-> StringT )
      ( Var
       ( Meta
        { meta = [ StringT ] :-> StringT, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = StringT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ StringT ] :-> StringT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = StringT, id = Id
          { name = "cs", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast StringT
       ( Var
        ( Meta
         { meta = StringT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "divDouble_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "double#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "double#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "double#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Double#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] )
       [ Meta
        { meta = DoubleT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "double#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Double#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] )
           [ Meta
            { meta = DoubleT, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ DoubleT ] :-> DoubleT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ DoubleT ] :->
                ( [ DoubleT ] :-> DoubleT ), id = Id
                { name = "divDouble#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = DoubleT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ DoubleT ] :-> DoubleT, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ DoubleT ] :-> DoubleT )
              ( Var
               ( Meta
                { meta = [ DoubleT ] :-> DoubleT, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = DoubleT, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ DoubleT ] :-> DoubleT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = DoubleT, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = DoubleT, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast DoubleT
                ( Var
                 ( Meta
                  { meta = DoubleT, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ DoubleT ] :-> AnyT, id = Id
                    { name = "Double#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = DoubleT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ DoubleT, DoubleT ] :-> DoubleT, id = Id
     { name = "divDouble#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = DoubleT, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ DoubleT, DoubleT ] :-> DoubleT, Assign
    ( Meta
     { meta = [ DoubleT ] :-> DoubleT, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ DoubleT ] :->
        ( [ DoubleT ] :-> DoubleT ), id = Id
        { name = "malgo_div_double", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = DoubleT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ DoubleT ] :-> DoubleT, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ DoubleT ] :-> DoubleT )
      ( Var
       ( Meta
        { meta = [ DoubleT ] :-> DoubleT, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = DoubleT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ DoubleT ] :-> DoubleT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast DoubleT
       ( Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "divFloat_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "float#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "float#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "float#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Float#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] )
       [ Meta
        { meta = FloatT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "float#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Float#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] )
           [ Meta
            { meta = FloatT, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ FloatT ] :-> FloatT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ FloatT ] :->
                ( [ FloatT ] :-> FloatT ), id = Id
                { name = "divFloat#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = FloatT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ FloatT ] :-> FloatT, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ FloatT ] :-> FloatT )
              ( Var
               ( Meta
                { meta = [ FloatT ] :-> FloatT, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = FloatT, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ FloatT ] :-> FloatT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = FloatT, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = FloatT, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast FloatT
                ( Var
                 ( Meta
                  { meta = FloatT, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ FloatT ] :-> AnyT, id = Id
                    { name = "Float#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = FloatT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ FloatT, FloatT ] :-> FloatT, id = Id
     { name = "divFloat#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = FloatT, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ FloatT, FloatT ] :-> FloatT, Assign
    ( Meta
     { meta = [ FloatT ] :-> FloatT, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ FloatT ] :->
        ( [ FloatT ] :-> FloatT ), id = Id
        { name = "malgo_div_float", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = FloatT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ FloatT ] :-> FloatT, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ FloatT ] :-> FloatT )
      ( Var
       ( Meta
        { meta = [ FloatT ] :-> FloatT, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = FloatT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ FloatT ] :-> FloatT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast FloatT
       ( Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "divInt32_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int32#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "int32#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "int32#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Int32#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] )
       [ Meta
        { meta = Int32T, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "int32#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Int32#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] )
           [ Meta
            { meta = Int32T, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ Int32T ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ Int32T ] :->
                ( [ Int32T ] :-> Int32T ), id = Id
                { name = "divInt32#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = Int32T, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ Int32T ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ Int32T ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ Int32T ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ Int32T ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = Int32T, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "Int32#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ Int32T, Int32T ] :-> Int32T, id = Id
     { name = "divInt32#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int32T, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int32T, Int32T ] :-> Int32T, Assign
    ( Meta
     { meta = [ Int32T ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ Int32T ] :->
        ( [ Int32T ] :-> Int32T ), id = Id
        { name = "malgo_div_int32_t", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = Int32T, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ Int32T ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ Int32T ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ Int32T ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ Int32T ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "divInt64_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int64#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "int64#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "int64#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Int64#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] )
       [ Meta
        { meta = Int64T, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "int64#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Int64#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] )
           [ Meta
            { meta = Int64T, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ Int64T ] :-> Int64T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ Int64T ] :->
                ( [ Int64T ] :-> Int64T ), id = Id
                { name = "divInt64#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = Int64T, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ Int64T ] :-> Int64T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ Int64T ] :-> Int64T )
              ( Var
               ( Meta
                { meta = [ Int64T ] :-> Int64T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int64T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ Int64T ] :-> Int64T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = Int64T, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int64T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int64T
                ( Var
                 ( Meta
                  { meta = Int64T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int64T ] :-> AnyT, id = Id
                    { name = "Int64#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int64T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ Int64T, Int64T ] :-> Int64T, id = Id
     { name = "divInt64#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int64T, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int64T, Int64T ] :-> Int64T, Assign
    ( Meta
     { meta = [ Int64T ] :-> Int64T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ Int64T ] :->
        ( [ Int64T ] :-> Int64T ), id = Id
        { name = "malgo_div_int64_t", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = Int64T, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ Int64T ] :-> Int64T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ Int64T ] :-> Int64T )
      ( Var
       ( Meta
        { meta = [ Int64T ] :-> Int64T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int64T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ Int64T ] :-> Int64T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int64T
       ( Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "eqChar_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "char#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "char#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "char#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Char#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] )
       [ Meta
        { meta = CharT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "char#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Char#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] )
           [ Meta
            { meta = CharT, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ CharT ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ CharT ] :->
                ( [ CharT ] :-> Int32T ), id = Id
                { name = "eqChar#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = CharT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ CharT ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ CharT ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ CharT ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ CharT ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = CharT, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "isTrue#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ CharT, CharT ] :-> Int32T, id = Id
     { name = "eqChar#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = CharT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = CharT, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ CharT, CharT ] :-> Int32T, Assign
    ( Meta
     { meta = [ CharT ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ CharT ] :->
        ( [ CharT ] :-> Int32T ), id = Id
        { name = "malgo_eq_char", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = CharT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ CharT ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ CharT ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ CharT ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ CharT ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = CharT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "eqDouble_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "double#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "double#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "double#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Double#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] )
       [ Meta
        { meta = DoubleT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "double#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Double#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] )
           [ Meta
            { meta = DoubleT, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ DoubleT ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ DoubleT ] :->
                ( [ DoubleT ] :-> Int32T ), id = Id
                { name = "eqDouble#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = DoubleT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ DoubleT ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ DoubleT ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ DoubleT ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ DoubleT ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = DoubleT, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "isTrue#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ DoubleT, DoubleT ] :-> Int32T, id = Id
     { name = "eqDouble#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = DoubleT, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ DoubleT, DoubleT ] :-> Int32T, Assign
    ( Meta
     { meta = [ DoubleT ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ DoubleT ] :->
        ( [ DoubleT ] :-> Int32T ), id = Id
        { name = "malgo_eq_double", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = DoubleT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ DoubleT ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ DoubleT ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ DoubleT ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ DoubleT ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "eqFloat_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "float#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "float#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "float#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Float#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] )
       [ Meta
        { meta = FloatT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "float#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Float#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] )
           [ Meta
            { meta = FloatT, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ FloatT ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ FloatT ] :->
                ( [ FloatT ] :-> Int32T ), id = Id
                { name = "eqFloat#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = FloatT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ FloatT ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ FloatT ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ FloatT ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ FloatT ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = FloatT, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "isTrue#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ FloatT, FloatT ] :-> Int32T, id = Id
     { name = "eqFloat#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = FloatT, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ FloatT, FloatT ] :-> Int32T, Assign
    ( Meta
     { meta = [ FloatT ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ FloatT ] :->
        ( [ FloatT ] :-> Int32T ), id = Id
        { name = "malgo_eq_float", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = FloatT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ FloatT ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ FloatT ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ FloatT ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ FloatT ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "eqInt32_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int32#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "int32#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "int32#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Int32#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] )
       [ Meta
        { meta = Int32T, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "int32#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Int32#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] )
           [ Meta
            { meta = Int32T, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ Int32T ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ Int32T ] :->
                ( [ Int32T ] :-> Int32T ), id = Id
                { name = "eqInt32#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = Int32T, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ Int32T ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ Int32T ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ Int32T ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ Int32T ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = Int32T, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "isTrue#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ Int32T, Int32T ] :-> Int32T, id = Id
     { name = "eqInt32#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int32T, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int32T, Int32T ] :-> Int32T, Assign
    ( Meta
     { meta = [ Int32T ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ Int32T ] :->
        ( [ Int32T ] :-> Int32T ), id = Id
        { name = "malgo_eq_int32_t", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = Int32T, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ Int32T ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ Int32T ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ Int32T ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ Int32T ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "eqInt64_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int64#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "int64#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "int64#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Int64#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] )
       [ Meta
        { meta = Int64T, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "int64#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Int64#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] )
           [ Meta
            { meta = Int64T, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ Int64T ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ Int64T ] :->
                ( [ Int64T ] :-> Int32T ), id = Id
                { name = "eqInt64#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = Int64T, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ Int64T ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ Int64T ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ Int64T ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ Int64T ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = Int64T, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "isTrue#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ Int64T, Int64T ] :-> Int32T, id = Id
     { name = "eqInt64#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int64T, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int64T, Int64T ] :-> Int32T, Assign
    ( Meta
     { meta = [ Int64T ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ Int64T ] :->
        ( [ Int64T ] :-> Int32T ), id = Id
        { name = "malgo_eq_int64_t", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = Int64T, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ Int64T ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ Int64T ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ Int64T ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ Int64T ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "eqString_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "string#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "string#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "string#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.String#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] )
       [ Meta
        { meta = StringT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "string#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.String#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] )
           [ Meta
            { meta = StringT, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ StringT ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ StringT ] :->
                ( [ StringT ] :-> Int32T ), id = Id
                { name = "eqString#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = StringT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ StringT ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ StringT ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ StringT ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ StringT ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = StringT, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "isTrue#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ StringT, StringT ] :-> Int32T, id = Id
     { name = "eqString#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = StringT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = StringT, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ StringT, StringT ] :-> Int32T, Assign
    ( Meta
     { meta = [ StringT ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ StringT ] :->
        ( [ StringT ] :-> Int32T ), id = Id
        { name = "malgo_eq_string", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = StringT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ StringT ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ StringT ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ StringT ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ StringT ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = StringT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "geChar_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "char#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "char#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "char#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Char#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] )
       [ Meta
        { meta = CharT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "char#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Char#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] )
           [ Meta
            { meta = CharT, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ CharT ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ CharT ] :->
                ( [ CharT ] :-> Int32T ), id = Id
                { name = "geChar#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = CharT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ CharT ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ CharT ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ CharT ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ CharT ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = CharT, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "isTrue#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ CharT, CharT ] :-> Int32T, id = Id
     { name = "geChar#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = CharT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = CharT, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ CharT, CharT ] :-> Int32T, Assign
    ( Meta
     { meta = [ CharT ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ CharT ] :->
        ( [ CharT ] :-> Int32T ), id = Id
        { name = "malgo_ge_char", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = CharT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ CharT ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ CharT ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ CharT ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ CharT ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = CharT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "geDouble_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "double#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "double#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "double#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Double#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] )
       [ Meta
        { meta = DoubleT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "double#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Double#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] )
           [ Meta
            { meta = DoubleT, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ DoubleT ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ DoubleT ] :->
                ( [ DoubleT ] :-> Int32T ), id = Id
                { name = "geDouble#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = DoubleT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ DoubleT ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ DoubleT ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ DoubleT ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ DoubleT ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = DoubleT, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "isTrue#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ DoubleT, DoubleT ] :-> Int32T, id = Id
     { name = "geDouble#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = DoubleT, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ DoubleT, DoubleT ] :-> Int32T, Assign
    ( Meta
     { meta = [ DoubleT ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ DoubleT ] :->
        ( [ DoubleT ] :-> Int32T ), id = Id
        { name = "malgo_ge_double", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = DoubleT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ DoubleT ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ DoubleT ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ DoubleT ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ DoubleT ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "geFloat_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "float#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "float#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "float#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Float#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] )
       [ Meta
        { meta = FloatT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "float#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Float#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] )
           [ Meta
            { meta = FloatT, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ FloatT ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ FloatT ] :->
                ( [ FloatT ] :-> Int32T ), id = Id
                { name = "geFloat#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = FloatT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ FloatT ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ FloatT ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ FloatT ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ FloatT ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = FloatT, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "isTrue#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ FloatT, FloatT ] :-> Int32T, id = Id
     { name = "geFloat#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = FloatT, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ FloatT, FloatT ] :-> Int32T, Assign
    ( Meta
     { meta = [ FloatT ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ FloatT ] :->
        ( [ FloatT ] :-> Int32T ), id = Id
        { name = "malgo_ge_float", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = FloatT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ FloatT ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ FloatT ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ FloatT ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ FloatT ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "geInt32_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int32#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "int32#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "int32#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Int32#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] )
       [ Meta
        { meta = Int32T, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "int32#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Int32#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] )
           [ Meta
            { meta = Int32T, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ Int32T ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ Int32T ] :->
                ( [ Int32T ] :-> Int32T ), id = Id
                { name = "geInt32#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = Int32T, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ Int32T ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ Int32T ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ Int32T ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ Int32T ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = Int32T, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "isTrue#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ Int32T, Int32T ] :-> Int32T, id = Id
     { name = "geInt32#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int32T, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int32T, Int32T ] :-> Int32T, Assign
    ( Meta
     { meta = [ Int32T ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ Int32T ] :->
        ( [ Int32T ] :-> Int32T ), id = Id
        { name = "malgo_ge_int32_t", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = Int32T, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ Int32T ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ Int32T ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ Int32T ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ Int32T ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "geInt64_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int64#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "int64#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "int64#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Int64#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] )
       [ Meta
        { meta = Int64T, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "int64#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Int64#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] )
           [ Meta
            { meta = Int64T, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ Int64T ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ Int64T ] :->
                ( [ Int64T ] :-> Int32T ), id = Id
                { name = "geInt64#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = Int64T, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ Int64T ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ Int64T ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ Int64T ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ Int64T ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = Int64T, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "isTrue#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ Int64T, Int64T ] :-> Int32T, id = Id
     { name = "geInt64#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int64T, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int64T, Int64T ] :-> Int32T, Assign
    ( Meta
     { meta = [ Int64T ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ Int64T ] :->
        ( [ Int64T ] :-> Int32T ), id = Id
        { name = "malgo_ge_int64_t", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = Int64T, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ Int64T ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ Int64T ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ Int64T ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ Int64T ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "geString_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "string#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "string#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "string#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.String#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] )
       [ Meta
        { meta = StringT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "string#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.String#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] )
           [ Meta
            { meta = StringT, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ StringT ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ StringT ] :->
                ( [ StringT ] :-> Int32T ), id = Id
                { name = "geString#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = StringT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ StringT ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ StringT ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ StringT ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ StringT ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = StringT, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "isTrue#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ StringT, StringT ] :-> Int32T, id = Id
     { name = "geString#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = StringT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = StringT, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ StringT, StringT ] :-> Int32T, Assign
    ( Meta
     { meta = [ StringT ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ StringT ] :->
        ( [ StringT ] :-> Int32T ), id = Id
        { name = "malgo_ge_string", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = StringT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ StringT ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ StringT ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ StringT ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ StringT ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = StringT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "gtChar_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "char#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "char#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "char#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Char#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] )
       [ Meta
        { meta = CharT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "char#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Char#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] )
           [ Meta
            { meta = CharT, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ CharT ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ CharT ] :->
                ( [ CharT ] :-> Int32T ), id = Id
                { name = "gtChar#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = CharT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ CharT ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ CharT ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ CharT ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ CharT ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = CharT, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "isTrue#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ CharT, CharT ] :-> Int32T, id = Id
     { name = "gtChar#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = CharT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = CharT, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ CharT, CharT ] :-> Int32T, Assign
    ( Meta
     { meta = [ CharT ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ CharT ] :->
        ( [ CharT ] :-> Int32T ), id = Id
        { name = "malgo_gt_char", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = CharT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ CharT ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ CharT ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ CharT ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ CharT ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = CharT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "gtDouble_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "double#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "double#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "double#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Double#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] )
       [ Meta
        { meta = DoubleT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "double#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Double#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] )
           [ Meta
            { meta = DoubleT, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ DoubleT ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ DoubleT ] :->
                ( [ DoubleT ] :-> Int32T ), id = Id
                { name = "gtDouble#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = DoubleT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ DoubleT ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ DoubleT ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ DoubleT ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ DoubleT ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = DoubleT, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "isTrue#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ DoubleT, DoubleT ] :-> Int32T, id = Id
     { name = "gtDouble#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = DoubleT, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ DoubleT, DoubleT ] :-> Int32T, Assign
    ( Meta
     { meta = [ DoubleT ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ DoubleT ] :->
        ( [ DoubleT ] :-> Int32T ), id = Id
        { name = "malgo_gt_double", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = DoubleT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ DoubleT ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ DoubleT ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ DoubleT ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ DoubleT ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "gtFloat_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "float#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "float#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "float#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Float#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] )
       [ Meta
        { meta = FloatT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "float#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Float#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] )
           [ Meta
            { meta = FloatT, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ FloatT ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ FloatT ] :->
                ( [ FloatT ] :-> Int32T ), id = Id
                { name = "gtFloat#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = FloatT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ FloatT ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ FloatT ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ FloatT ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ FloatT ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = FloatT, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "isTrue#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ FloatT, FloatT ] :-> Int32T, id = Id
     { name = "gtFloat#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = FloatT, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ FloatT, FloatT ] :-> Int32T, Assign
    ( Meta
     { meta = [ FloatT ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ FloatT ] :->
        ( [ FloatT ] :-> Int32T ), id = Id
        { name = "malgo_gt_float", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = FloatT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ FloatT ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ FloatT ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ FloatT ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ FloatT ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "gtInt32_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int32#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "int32#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "int32#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Int32#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] )
       [ Meta
        { meta = Int32T, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "int32#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Int32#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] )
           [ Meta
            { meta = Int32T, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ Int32T ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ Int32T ] :->
                ( [ Int32T ] :-> Int32T ), id = Id
                { name = "gtInt32#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = Int32T, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ Int32T ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ Int32T ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ Int32T ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ Int32T ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = Int32T, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "isTrue#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ Int32T, Int32T ] :-> Int32T, id = Id
     { name = "gtInt32#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int32T, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int32T, Int32T ] :-> Int32T, Assign
    ( Meta
     { meta = [ Int32T ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ Int32T ] :->
        ( [ Int32T ] :-> Int32T ), id = Id
        { name = "malgo_gt_int32_t", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = Int32T, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ Int32T ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ Int32T ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ Int32T ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ Int32T ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "gtInt64_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int64#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "int64#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "int64#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Int64#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] )
       [ Meta
        { meta = Int64T, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "int64#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Int64#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] )
           [ Meta
            { meta = Int64T, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ Int64T ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ Int64T ] :->
                ( [ Int64T ] :-> Int32T ), id = Id
                { name = "gtInt64#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = Int64T, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ Int64T ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ Int64T ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ Int64T ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ Int64T ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = Int64T, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "isTrue#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ Int64T, Int64T ] :-> Int32T, id = Id
     { name = "gtInt64#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int64T, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int64T, Int64T ] :-> Int32T, Assign
    ( Meta
     { meta = [ Int64T ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ Int64T ] :->
        ( [ Int64T ] :-> Int32T ), id = Id
        { name = "malgo_gt_int64_t", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = Int64T, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ Int64T ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ Int64T ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ Int64T ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ Int64T ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "gtString_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "string#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "string#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "string#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.String#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] )
       [ Meta
        { meta = StringT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "string#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.String#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] )
           [ Meta
            { meta = StringT, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ StringT ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ StringT ] :->
                ( [ StringT ] :-> Int32T ), id = Id
                { name = "gtString#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = StringT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ StringT ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ StringT ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ StringT ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ StringT ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = StringT, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "isTrue#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ StringT, StringT ] :-> Int32T, id = Id
     { name = "gtString#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = StringT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = StringT, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ StringT, StringT ] :-> Int32T, Assign
    ( Meta
     { meta = [ StringT ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ StringT ] :->
        ( [ StringT ] :-> Int32T ), id = Id
        { name = "malgo_gt_string", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = StringT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ StringT ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ StringT ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ StringT ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ StringT ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = StringT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "neString_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "string#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "string#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "string#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.String#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] )
       [ Meta
        { meta = StringT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "string#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.String#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] )
           [ Meta
            { meta = StringT, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ StringT ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ StringT ] :->
                ( [ StringT ] :-> Int32T ), id = Id
                { name = "neString#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = StringT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ StringT ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ StringT ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ StringT ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ StringT ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = StringT, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "isTrue#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "neInt64_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int64#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "int64#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "int64#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Int64#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] )
       [ Meta
        { meta = Int64T, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "int64#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Int64#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] )
           [ Meta
            { meta = Int64T, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ Int64T ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ Int64T ] :->
                ( [ Int64T ] :-> Int32T ), id = Id
                { name = "neInt64#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = Int64T, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ Int64T ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ Int64T ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ Int64T ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ Int64T ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = Int64T, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "isTrue#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "neInt32_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int32#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "int32#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "int32#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Int32#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] )
       [ Meta
        { meta = Int32T, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "int32#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Int32#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] )
           [ Meta
            { meta = Int32T, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ Int32T ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ Int32T ] :->
                ( [ Int32T ] :-> Int32T ), id = Id
                { name = "neInt32#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = Int32T, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ Int32T ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ Int32T ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ Int32T ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ Int32T ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = Int32T, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "isTrue#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "neFloat_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "float#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "float#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "float#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Float#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] )
       [ Meta
        { meta = FloatT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "float#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Float#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] )
           [ Meta
            { meta = FloatT, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ FloatT ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ FloatT ] :->
                ( [ FloatT ] :-> Int32T ), id = Id
                { name = "neFloat#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = FloatT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ FloatT ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ FloatT ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ FloatT ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ FloatT ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = FloatT, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "isTrue#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "neDouble_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "double#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "double#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "double#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Double#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] )
       [ Meta
        { meta = DoubleT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "double#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Double#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] )
           [ Meta
            { meta = DoubleT, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ DoubleT ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ DoubleT ] :->
                ( [ DoubleT ] :-> Int32T ), id = Id
                { name = "neDouble#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = DoubleT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ DoubleT ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ DoubleT ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ DoubleT ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ DoubleT ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = DoubleT, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "isTrue#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "neChar_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "char#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "char#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "char#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Char#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] )
       [ Meta
        { meta = CharT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "char#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Char#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] )
           [ Meta
            { meta = CharT, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ CharT ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ CharT ] :->
                ( [ CharT ] :-> Int32T ), id = Id
                { name = "neChar#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = CharT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ CharT ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ CharT ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ CharT ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ CharT ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = CharT, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "isTrue#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "ltString_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "string#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "string#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "string#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.String#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] )
       [ Meta
        { meta = StringT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "string#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.String#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] )
           [ Meta
            { meta = StringT, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ StringT ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ StringT ] :->
                ( [ StringT ] :-> Int32T ), id = Id
                { name = "ltString#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = StringT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ StringT ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ StringT ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ StringT ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ StringT ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = StringT, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "isTrue#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "ltInt64_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int64#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "int64#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "int64#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Int64#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] )
       [ Meta
        { meta = Int64T, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "int64#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Int64#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] )
           [ Meta
            { meta = Int64T, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ Int64T ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ Int64T ] :->
                ( [ Int64T ] :-> Int32T ), id = Id
                { name = "ltInt64#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = Int64T, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ Int64T ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ Int64T ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ Int64T ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ Int64T ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = Int64T, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "isTrue#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "ltInt32_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int32#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "int32#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "int32#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Int32#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] )
       [ Meta
        { meta = Int32T, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "int32#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Int32#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] )
           [ Meta
            { meta = Int32T, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ Int32T ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ Int32T ] :->
                ( [ Int32T ] :-> Int32T ), id = Id
                { name = "ltInt32#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = Int32T, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ Int32T ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ Int32T ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ Int32T ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ Int32T ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = Int32T, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "isTrue#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "ltFloat_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "float#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "float#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "float#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Float#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] )
       [ Meta
        { meta = FloatT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "float#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Float#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] )
           [ Meta
            { meta = FloatT, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ FloatT ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ FloatT ] :->
                ( [ FloatT ] :-> Int32T ), id = Id
                { name = "ltFloat#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = FloatT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ FloatT ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ FloatT ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ FloatT ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ FloatT ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = FloatT, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "isTrue#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "ltDouble_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "double#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "double#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "double#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Double#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] )
       [ Meta
        { meta = DoubleT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "double#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Double#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] )
           [ Meta
            { meta = DoubleT, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ DoubleT ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ DoubleT ] :->
                ( [ DoubleT ] :-> Int32T ), id = Id
                { name = "ltDouble#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = DoubleT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ DoubleT ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ DoubleT ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ DoubleT ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ DoubleT ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = DoubleT, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "isTrue#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "ltChar_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "char#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "char#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "char#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Char#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] )
       [ Meta
        { meta = CharT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "char#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Char#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] )
           [ Meta
            { meta = CharT, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ CharT ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ CharT ] :->
                ( [ CharT ] :-> Int32T ), id = Id
                { name = "ltChar#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = CharT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ CharT ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ CharT ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ CharT ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ CharT ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = CharT, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "isTrue#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "leString_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "string#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "string#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "string#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.String#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] )
       [ Meta
        { meta = StringT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "string#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.String#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] )
           [ Meta
            { meta = StringT, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ StringT ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ StringT ] :->
                ( [ StringT ] :-> Int32T ), id = Id
                { name = "leString#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = StringT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ StringT ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ StringT ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ StringT ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ StringT ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = StringT, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "isTrue#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "leInt64_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int64#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "int64#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "int64#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Int64#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] )
       [ Meta
        { meta = Int64T, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "int64#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Int64#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] )
           [ Meta
            { meta = Int64T, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ Int64T ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ Int64T ] :->
                ( [ Int64T ] :-> Int32T ), id = Id
                { name = "leInt64#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = Int64T, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ Int64T ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ Int64T ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ Int64T ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ Int64T ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = Int64T, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "isTrue#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "leInt32_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int32#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "int32#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "int32#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Int32#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] )
       [ Meta
        { meta = Int32T, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "int32#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Int32#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] )
           [ Meta
            { meta = Int32T, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ Int32T ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ Int32T ] :->
                ( [ Int32T ] :-> Int32T ), id = Id
                { name = "leInt32#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = Int32T, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ Int32T ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ Int32T ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ Int32T ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ Int32T ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = Int32T, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "isTrue#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "leFloat_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "float#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "float#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "float#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Float#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] )
       [ Meta
        { meta = FloatT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "float#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Float#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] )
           [ Meta
            { meta = FloatT, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ FloatT ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ FloatT ] :->
                ( [ FloatT ] :-> Int32T ), id = Id
                { name = "leFloat#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = FloatT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ FloatT ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ FloatT ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ FloatT ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ FloatT ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = FloatT, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "isTrue#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "leDouble_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "double#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "double#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "double#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Double#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] )
       [ Meta
        { meta = DoubleT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "double#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Double#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] )
           [ Meta
            { meta = DoubleT, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ DoubleT ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ DoubleT ] :->
                ( [ DoubleT ] :-> Int32T ), id = Id
                { name = "leDouble#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = DoubleT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ DoubleT ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ DoubleT ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ DoubleT ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ DoubleT ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = DoubleT, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "isTrue#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "leChar_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "char#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "char#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "char#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Char#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] )
       [ Meta
        { meta = CharT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "char#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Char#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] )
           [ Meta
            { meta = CharT, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ CharT ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ CharT ] :->
                ( [ CharT ] :-> Int32T ), id = Id
                { name = "leChar#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = CharT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ CharT ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ CharT ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ CharT ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ CharT ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = CharT, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "isTrue#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ CharT, CharT ] :-> Int32T, id = Id
     { name = "leChar#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = CharT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = CharT, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ CharT, CharT ] :-> Int32T, Assign
    ( Meta
     { meta = [ CharT ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ CharT ] :->
        ( [ CharT ] :-> Int32T ), id = Id
        { name = "malgo_le_char", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = CharT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ CharT ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ CharT ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ CharT ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ CharT ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = CharT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ DoubleT, DoubleT ] :-> Int32T, id = Id
     { name = "leDouble#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = DoubleT, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ DoubleT, DoubleT ] :-> Int32T, Assign
    ( Meta
     { meta = [ DoubleT ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ DoubleT ] :->
        ( [ DoubleT ] :-> Int32T ), id = Id
        { name = "malgo_le_double", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = DoubleT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ DoubleT ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ DoubleT ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ DoubleT ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ DoubleT ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ FloatT, FloatT ] :-> Int32T, id = Id
     { name = "leFloat#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = FloatT, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ FloatT, FloatT ] :-> Int32T, Assign
    ( Meta
     { meta = [ FloatT ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ FloatT ] :->
        ( [ FloatT ] :-> Int32T ), id = Id
        { name = "malgo_le_float", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = FloatT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ FloatT ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ FloatT ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ FloatT ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ FloatT ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ Int32T, Int32T ] :-> Int32T, id = Id
     { name = "leInt32#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int32T, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int32T, Int32T ] :-> Int32T, Assign
    ( Meta
     { meta = [ Int32T ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ Int32T ] :->
        ( [ Int32T ] :-> Int32T ), id = Id
        { name = "malgo_le_int32_t", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = Int32T, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ Int32T ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ Int32T ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ Int32T ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ Int32T ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ Int64T, Int64T ] :-> Int32T, id = Id
     { name = "leInt64#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int64T, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int64T, Int64T ] :-> Int32T, Assign
    ( Meta
     { meta = [ Int64T ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ Int64T ] :->
        ( [ Int64T ] :-> Int32T ), id = Id
        { name = "malgo_le_int64_t", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = Int64T, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ Int64T ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ Int64T ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ Int64T ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ Int64T ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ StringT, StringT ] :-> Int32T, id = Id
     { name = "leString#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = StringT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = StringT, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ StringT, StringT ] :-> Int32T, Assign
    ( Meta
     { meta = [ StringT ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ StringT ] :->
        ( [ StringT ] :-> Int32T ), id = Id
        { name = "malgo_le_string", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = StringT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ StringT ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ StringT ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ StringT ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ StringT ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = StringT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ CharT, CharT ] :-> Int32T, id = Id
     { name = "ltChar#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = CharT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = CharT, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ CharT, CharT ] :-> Int32T, Assign
    ( Meta
     { meta = [ CharT ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ CharT ] :->
        ( [ CharT ] :-> Int32T ), id = Id
        { name = "malgo_lt_char", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = CharT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ CharT ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ CharT ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ CharT ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ CharT ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = CharT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ DoubleT, DoubleT ] :-> Int32T, id = Id
     { name = "ltDouble#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = DoubleT, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ DoubleT, DoubleT ] :-> Int32T, Assign
    ( Meta
     { meta = [ DoubleT ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ DoubleT ] :->
        ( [ DoubleT ] :-> Int32T ), id = Id
        { name = "malgo_lt_double", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = DoubleT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ DoubleT ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ DoubleT ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ DoubleT ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ DoubleT ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ FloatT, FloatT ] :-> Int32T, id = Id
     { name = "ltFloat#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = FloatT, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ FloatT, FloatT ] :-> Int32T, Assign
    ( Meta
     { meta = [ FloatT ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ FloatT ] :->
        ( [ FloatT ] :-> Int32T ), id = Id
        { name = "malgo_lt_float", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = FloatT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ FloatT ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ FloatT ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ FloatT ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ FloatT ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ Int32T, Int32T ] :-> Int32T, id = Id
     { name = "ltInt32#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int32T, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int32T, Int32T ] :-> Int32T, Assign
    ( Meta
     { meta = [ Int32T ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ Int32T ] :->
        ( [ Int32T ] :-> Int32T ), id = Id
        { name = "malgo_lt_int32_t", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = Int32T, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ Int32T ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ Int32T ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ Int32T ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ Int32T ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ Int64T, Int64T ] :-> Int32T, id = Id
     { name = "ltInt64#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int64T, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int64T, Int64T ] :-> Int32T, Assign
    ( Meta
     { meta = [ Int64T ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ Int64T ] :->
        ( [ Int64T ] :-> Int32T ), id = Id
        { name = "malgo_lt_int64_t", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = Int64T, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ Int64T ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ Int64T ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ Int64T ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ Int64T ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ StringT, StringT ] :-> Int32T, id = Id
     { name = "ltString#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = StringT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = StringT, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ StringT, StringT ] :-> Int32T, Assign
    ( Meta
     { meta = [ StringT ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ StringT ] :->
        ( [ StringT ] :-> Int32T ), id = Id
        { name = "malgo_lt_string", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = StringT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ StringT ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ StringT ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ StringT ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ StringT ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = StringT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "mulDouble_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "double#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "double#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "double#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Double#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] )
       [ Meta
        { meta = DoubleT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "double#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Double#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] )
           [ Meta
            { meta = DoubleT, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ DoubleT ] :-> DoubleT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ DoubleT ] :->
                ( [ DoubleT ] :-> DoubleT ), id = Id
                { name = "mulDouble#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = DoubleT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ DoubleT ] :-> DoubleT, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ DoubleT ] :-> DoubleT )
              ( Var
               ( Meta
                { meta = [ DoubleT ] :-> DoubleT, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = DoubleT, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ DoubleT ] :-> DoubleT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = DoubleT, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = DoubleT, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast DoubleT
                ( Var
                 ( Meta
                  { meta = DoubleT, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ DoubleT ] :-> AnyT, id = Id
                    { name = "Double#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = DoubleT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ DoubleT, DoubleT ] :-> DoubleT, id = Id
     { name = "mulDouble#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = DoubleT, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ DoubleT, DoubleT ] :-> DoubleT, Assign
    ( Meta
     { meta = [ DoubleT ] :-> DoubleT, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ DoubleT ] :->
        ( [ DoubleT ] :-> DoubleT ), id = Id
        { name = "malgo_mul_double", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = DoubleT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ DoubleT ] :-> DoubleT, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ DoubleT ] :-> DoubleT )
      ( Var
       ( Meta
        { meta = [ DoubleT ] :-> DoubleT, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = DoubleT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ DoubleT ] :-> DoubleT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast DoubleT
       ( Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "mulFloat_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "float#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "float#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "float#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Float#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] )
       [ Meta
        { meta = FloatT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "float#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Float#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] )
           [ Meta
            { meta = FloatT, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ FloatT ] :-> FloatT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ FloatT ] :->
                ( [ FloatT ] :-> FloatT ), id = Id
                { name = "mulFloat#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = FloatT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ FloatT ] :-> FloatT, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ FloatT ] :-> FloatT )
              ( Var
               ( Meta
                { meta = [ FloatT ] :-> FloatT, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = FloatT, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ FloatT ] :-> FloatT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = FloatT, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = FloatT, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast FloatT
                ( Var
                 ( Meta
                  { meta = FloatT, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ FloatT ] :-> AnyT, id = Id
                    { name = "Float#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = FloatT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ FloatT, FloatT ] :-> FloatT, id = Id
     { name = "mulFloat#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = FloatT, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ FloatT, FloatT ] :-> FloatT, Assign
    ( Meta
     { meta = [ FloatT ] :-> FloatT, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ FloatT ] :->
        ( [ FloatT ] :-> FloatT ), id = Id
        { name = "malgo_mul_float", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = FloatT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ FloatT ] :-> FloatT, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ FloatT ] :-> FloatT )
      ( Var
       ( Meta
        { meta = [ FloatT ] :-> FloatT, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = FloatT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ FloatT ] :-> FloatT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast FloatT
       ( Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "mulInt32_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int32#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "int32#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "int32#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Int32#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] )
       [ Meta
        { meta = Int32T, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "int32#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Int32#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] )
           [ Meta
            { meta = Int32T, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ Int32T ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ Int32T ] :->
                ( [ Int32T ] :-> Int32T ), id = Id
                { name = "mulInt32#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = Int32T, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ Int32T ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ Int32T ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ Int32T ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ Int32T ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = Int32T, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "Int32#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ Int32T, Int32T ] :-> Int32T, id = Id
     { name = "mulInt32#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int32T, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int32T, Int32T ] :-> Int32T, Assign
    ( Meta
     { meta = [ Int32T ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ Int32T ] :->
        ( [ Int32T ] :-> Int32T ), id = Id
        { name = "malgo_mul_int32_t", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = Int32T, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ Int32T ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ Int32T ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ Int32T ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ Int32T ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "mulInt64_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int64#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "int64#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "int64#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Int64#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] )
       [ Meta
        { meta = Int64T, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "int64#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Int64#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] )
           [ Meta
            { meta = Int64T, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ Int64T ] :-> Int64T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ Int64T ] :->
                ( [ Int64T ] :-> Int64T ), id = Id
                { name = "mulInt64#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = Int64T, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ Int64T ] :-> Int64T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ Int64T ] :-> Int64T )
              ( Var
               ( Meta
                { meta = [ Int64T ] :-> Int64T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int64T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ Int64T ] :-> Int64T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = Int64T, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int64T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int64T
                ( Var
                 ( Meta
                  { meta = Int64T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int64T ] :-> AnyT, id = Id
                    { name = "Int64#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int64T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ Int64T, Int64T ] :-> Int64T, id = Id
     { name = "mulInt64#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int64T, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int64T, Int64T ] :-> Int64T, Assign
    ( Meta
     { meta = [ Int64T ] :-> Int64T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ Int64T ] :->
        ( [ Int64T ] :-> Int64T ), id = Id
        { name = "malgo_mul_int64_t", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = Int64T, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ Int64T ] :-> Int64T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ Int64T ] :-> Int64T )
      ( Var
       ( Meta
        { meta = [ Int64T ] :-> Int64T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int64T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ Int64T ] :-> Int64T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int64T
       ( Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ CharT, CharT ] :-> Int32T, id = Id
     { name = "neChar#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = CharT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = CharT, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ CharT, CharT ] :-> Int32T, Assign
    ( Meta
     { meta = [ CharT ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ CharT ] :->
        ( [ CharT ] :-> Int32T ), id = Id
        { name = "malgo_ne_char", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = CharT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ CharT ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ CharT ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ CharT ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ CharT ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = CharT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ DoubleT, DoubleT ] :-> Int32T, id = Id
     { name = "neDouble#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = DoubleT, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ DoubleT, DoubleT ] :-> Int32T, Assign
    ( Meta
     { meta = [ DoubleT ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ DoubleT ] :->
        ( [ DoubleT ] :-> Int32T ), id = Id
        { name = "malgo_ne_double", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = DoubleT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ DoubleT ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ DoubleT ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ DoubleT ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ DoubleT ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ FloatT, FloatT ] :-> Int32T, id = Id
     { name = "neFloat#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = FloatT, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ FloatT, FloatT ] :-> Int32T, Assign
    ( Meta
     { meta = [ FloatT ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ FloatT ] :->
        ( [ FloatT ] :-> Int32T ), id = Id
        { name = "malgo_ne_float", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = FloatT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ FloatT ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ FloatT ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ FloatT ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ FloatT ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ Int32T, Int32T ] :-> Int32T, id = Id
     { name = "neInt32#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int32T, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int32T, Int32T ] :-> Int32T, Assign
    ( Meta
     { meta = [ Int32T ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ Int32T ] :->
        ( [ Int32T ] :-> Int32T ), id = Id
        { name = "malgo_ne_int32_t", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = Int32T, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ Int32T ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ Int32T ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ Int32T ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ Int32T ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ Int64T, Int64T ] :-> Int32T, id = Id
     { name = "neInt64#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int64T, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int64T, Int64T ] :-> Int32T, Assign
    ( Meta
     { meta = [ Int64T ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ Int64T ] :->
        ( [ Int64T ] :-> Int32T ), id = Id
        { name = "malgo_ne_int64_t", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = Int64T, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ Int64T ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ Int64T ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ Int64T ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ Int64T ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ StringT, StringT ] :-> Int32T, id = Id
     { name = "neString#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = StringT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = StringT, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ StringT, StringT ] :-> Int32T, Assign
    ( Meta
     { meta = [ StringT ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ StringT ] :->
        ( [ StringT ] :-> Int32T ), id = Id
        { name = "malgo_ne_string", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = StringT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ StringT ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ StringT ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ StringT ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ StringT ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = StringT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "subDouble_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "double#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "double#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "double#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Double#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] )
       [ Meta
        { meta = DoubleT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "double#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Double#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] )
           [ Meta
            { meta = DoubleT, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ DoubleT ] :-> DoubleT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ DoubleT ] :->
                ( [ DoubleT ] :-> DoubleT ), id = Id
                { name = "subDouble#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = DoubleT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ DoubleT ] :-> DoubleT, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ DoubleT ] :-> DoubleT )
              ( Var
               ( Meta
                { meta = [ DoubleT ] :-> DoubleT, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = DoubleT, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ DoubleT ] :-> DoubleT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = DoubleT, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = DoubleT, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast DoubleT
                ( Var
                 ( Meta
                  { meta = DoubleT, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ DoubleT ] :-> AnyT, id = Id
                    { name = "Double#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = DoubleT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ DoubleT, DoubleT ] :-> DoubleT, id = Id
     { name = "subDouble#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = DoubleT, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ DoubleT, DoubleT ] :-> DoubleT, Assign
    ( Meta
     { meta = [ DoubleT ] :-> DoubleT, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ DoubleT ] :->
        ( [ DoubleT ] :-> DoubleT ), id = Id
        { name = "malgo_sub_double", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = DoubleT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ DoubleT ] :-> DoubleT, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ DoubleT ] :-> DoubleT )
      ( Var
       ( Meta
        { meta = [ DoubleT ] :-> DoubleT, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = DoubleT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ DoubleT ] :-> DoubleT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast DoubleT
       ( Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "subFloat_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "float#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "float#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "float#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Float#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] )
       [ Meta
        { meta = FloatT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "float#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Float#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] )
           [ Meta
            { meta = FloatT, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ FloatT ] :-> FloatT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ FloatT ] :->
                ( [ FloatT ] :-> FloatT ), id = Id
                { name = "subFloat#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = FloatT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ FloatT ] :-> FloatT, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ FloatT ] :-> FloatT )
              ( Var
               ( Meta
                { meta = [ FloatT ] :-> FloatT, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = FloatT, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ FloatT ] :-> FloatT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = FloatT, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = FloatT, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast FloatT
                ( Var
                 ( Meta
                  { meta = FloatT, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ FloatT ] :-> AnyT, id = Id
                    { name = "Float#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = FloatT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ FloatT, FloatT ] :-> FloatT, id = Id
     { name = "subFloat#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = FloatT, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ FloatT, FloatT ] :-> FloatT, Assign
    ( Meta
     { meta = [ FloatT ] :-> FloatT, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ FloatT ] :->
        ( [ FloatT ] :-> FloatT ), id = Id
        { name = "malgo_sub_float", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = FloatT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ FloatT ] :-> FloatT, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ FloatT ] :-> FloatT )
      ( Var
       ( Meta
        { meta = [ FloatT ] :-> FloatT, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = FloatT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ FloatT ] :-> FloatT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast FloatT
       ( Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "subInt32_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int32#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "int32#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "int32#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Int32#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] )
       [ Meta
        { meta = Int32T, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "int32#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Int32#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] )
           [ Meta
            { meta = Int32T, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ Int32T ] :-> Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ Int32T ] :->
                ( [ Int32T ] :-> Int32T ), id = Id
                { name = "subInt32#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = Int32T, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ Int32T ] :-> Int32T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ Int32T ] :-> Int32T )
              ( Var
               ( Meta
                { meta = [ Int32T ] :-> Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int32T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ Int32T ] :-> Int32T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = Int32T, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int32T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int32T
                ( Var
                 ( Meta
                  { meta = Int32T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int32T ] :-> AnyT, id = Id
                    { name = "Int32#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int32T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ Int32T, Int32T ] :-> Int32T, id = Id
     { name = "subInt32#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int32T, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int32T, Int32T ] :-> Int32T, Assign
    ( Meta
     { meta = [ Int32T ] :-> Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ Int32T ] :->
        ( [ Int32T ] :-> Int32T ), id = Id
        { name = "malgo_sub_int32_t", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = Int32T, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ Int32T ] :-> Int32T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ Int32T ] :-> Int32T )
      ( Var
       ( Meta
        { meta = [ Int32T ] :-> Int32T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ Int32T ] :-> Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int32T
       ( Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "subInt64_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int64#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "int64#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "int64#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Int64#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] )
       [ Meta
        { meta = Int64T, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "int64#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Int64#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] )
           [ Meta
            { meta = Int64T, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ Int64T ] :-> Int64T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ Int64T ] :->
                ( [ Int64T ] :-> Int64T ), id = Id
                { name = "subInt64#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = Int64T, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ Int64T ] :-> Int64T, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ Int64T ] :-> Int64T )
              ( Var
               ( Meta
                { meta = [ Int64T ] :-> Int64T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = Int64T, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ Int64T ] :-> Int64T, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = Int64T, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = Int64T, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
               ( Cast Int64T
                ( Var
                 ( Meta
                  { meta = Int64T, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ Int64T ] :-> AnyT, id = Id
                    { name = "Int64#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = Int64T, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ Int64T, Int64T ] :-> Int64T, id = Id
     { name = "subInt64#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int64T, id = Id
      { name = "y", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int64T, Int64T ] :-> Int64T, Assign
    ( Meta
     { meta = [ Int64T ] :-> Int64T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ Int64T ] :->
        ( [ Int64T ] :-> Int64T ), id = Id
        { name = "malgo_sub_int64_t", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = Int64T, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ Int64T ] :-> Int64T, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ Int64T ] :-> Int64T )
      ( Var
       ( Meta
        { meta = [ Int64T ] :-> Int64T, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = Int64T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ Int64T ] :-> Int64T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Cast Int64T
       ( Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT, AnyT ] :-> AnyT, id = Id
     { name = "substring_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "string#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "int64#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "int64#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "string#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.String#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] )
       [ Meta
        { meta = StringT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "int64#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Builtin.mlg.Int64#", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] )
           [ Meta
            { meta = Int64T, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
            ( Cast
             ( SumT
              [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ] )
             ( Var
              ( Meta
               { meta = AnyT, id = Id
                { name = "int64#", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
            ( Switch
             ( Var
              ( Meta
               { meta = SumT
                [ Con
                 ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
                { name = "scrutinee", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
             [
              ( Data "runtime/malgo/Builtin.mlg.Int64#", Destruct
               ( Var
                ( Meta
                 { meta = SumT
                  [ Con
                   ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
                  { name = "scrutinee", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
               ( Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] )
               [ Meta
                { meta = Int64T, id = Id
                 { name = "p", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
               ( Assign
                ( Meta
                 { meta = [ Int64T ] :->
                  ( [ Int64T ] :-> StringT ), id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ StringT ] :->
                    ( [ Int64T ] :-> ( [ Int64T ] :-> StringT ) ), id = Id
                    { name = "substring#", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = StringT, id = Id
                    { name = "p", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                ( Assign
                 ( Meta
                  { meta = [ Int64T ] :->
                   ( [ Int64T ] :-> StringT ), id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                 ( Cast
                  ( [ Int64T ] :-> ( [ Int64T ] :-> StringT ) )
                  ( Var
                   ( Meta
                    { meta = [ Int64T ] :->
                     ( [ Int64T ] :-> StringT ), id = Id
                     { name = "d", moduleName = Artifact
                      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
                 ( Assign
                  ( Meta
                   { meta = [ Int64T ] :-> StringT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                  ( Call
                   ( Var
                    ( Meta
                     { meta = [ Int64T ] :->
                      ( [ Int64T ] :-> StringT ), id = Id
                      { name = "d", moduleName = Artifact
                       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
                   [ Var
                    ( Meta
                     { meta = Int64T, id = Id
                      { name = "p", moduleName = Artifact
                       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                  ( Assign
                   ( Meta
                    { meta = [ Int64T ] :-> StringT, id = Id
                     { name = "d", moduleName = Artifact
                      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                   ( Cast
                    ( [ Int64T ] :-> StringT )
                    ( Var
                     ( Meta
                      { meta = [ Int64T ] :-> StringT, id = Id
                       { name = "d", moduleName = Artifact
                        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
                   ( Assign
                    ( Meta
                     { meta = StringT, id = Id
                      { name = "d", moduleName = Artifact
                       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                    ( Call
                     ( Var
                      ( Meta
                       { meta = [ Int64T ] :-> StringT, id = Id
                        { name = "d", moduleName = Artifact
                         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
                     [ Var
                      ( Meta
                       { meta = Int64T, id = Id
                        { name = "p", moduleName = Artifact
                         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                    ( Assign
                     ( Meta
                      { meta = StringT, id = Id
                       { name = "d", moduleName = Artifact
                        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                     ( Cast StringT
                      ( Var
                       ( Meta
                        { meta = StringT, id = Id
                         { name = "d", moduleName = Artifact
                          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
                     ( Assign
                      ( Meta
                       { meta = AnyT, id = Id
                        { name = "d", moduleName = Artifact
                         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
                      ( Call
                       ( Var
                        ( Meta
                         { meta = [ StringT ] :-> AnyT, id = Id
                          { name = "String#", moduleName = Artifact
                           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                       [ Var
                        ( Meta
                         { meta = StringT, id = Id
                          { name = "d", moduleName = Artifact
                           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
                      ( Cast AnyT
                       ( Var
                        ( Meta
                         { meta = AnyT, id = Id
                          { name = "d", moduleName = Artifact
                           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ StringT, Int64T, Int64T ] :-> StringT, id = Id
     { name = "substring#_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = StringT, id = Id
      { name = "str", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int64T, id = Id
      { name = "start", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int64T, id = Id
      { name = "end", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ StringT, Int64T, Int64T ] :-> StringT, Assign
    ( Meta
     { meta = [ Int64T ] :->
      ( [ Int64T ] :-> StringT ), id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ StringT ] :->
        ( [ Int64T ] :-> ( [ Int64T ] :-> StringT ) ), id = Id
        { name = "malgo_substring", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = StringT, id = Id
        { name = "str", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ Int64T ] :->
       ( [ Int64T ] :-> StringT ), id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ Int64T ] :-> ( [ Int64T ] :-> StringT ) )
      ( Var
       ( Meta
        { meta = [ Int64T ] :->
         ( [ Int64T ] :-> StringT ), id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = [ Int64T ] :-> StringT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ Int64T ] :->
          ( [ Int64T ] :-> StringT ), id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       [ Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "start", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
      ( Assign
       ( Meta
        { meta = [ Int64T ] :-> StringT, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       ( Cast
        ( [ Int64T ] :-> StringT )
        ( Var
         ( Meta
          { meta = [ Int64T ] :-> StringT, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
       ( Assign
        ( Meta
         { meta = StringT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Call
         ( Var
          ( Meta
           { meta = [ Int64T ] :-> StringT, id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
         [ Var
          ( Meta
           { meta = Int64T, id = Id
            { name = "end", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
        ( Cast StringT
         ( Var
          ( Meta
           { meta = StringT, id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ),
   ( Meta
    { meta =
     [ StringT, Int64T, Int64T ] :-> StringT, id = Id
     { name = "malgo_substring_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = StringT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int64T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int64T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ StringT, Int64T, Int64T ] :-> StringT, RawCall "malgo_substring"
    ( [ StringT, Int64T, Int64T ] :-> StringT )
    [ Var
     ( Meta
      { meta = StringT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = Int64T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = Int64T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ StringT, StringT ] :-> StringT, id = Id
     { name = "malgo_string_append_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = StringT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = StringT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ StringT, StringT ] :-> StringT, RawCall "malgo_string_append"
    ( [ StringT, StringT ] :-> StringT )
    [ Var
     ( Meta
      { meta = StringT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = StringT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ CharT, StringT ] :-> StringT, id = Id
     { name = "malgo_string_cons_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = CharT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = StringT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ CharT, StringT ] :-> StringT, RawCall "malgo_string_cons"
    ( [ CharT, StringT ] :-> StringT )
    [ Var
     ( Meta
      { meta = CharT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = StringT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ Int64T, StringT ] :-> CharT, id = Id
     { name = "malgo_string_at_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = StringT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int64T, StringT ] :-> CharT, RawCall "malgo_string_at"
    ( [ Int64T, StringT ] :-> CharT )
    [ Var
     ( Meta
      { meta = Int64T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = StringT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ StringT, StringT ] :-> Int32T, id = Id
     { name = "malgo_ge_string_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = StringT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = StringT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ StringT, StringT ] :-> Int32T, RawCall "malgo_ge_string"
    ( [ StringT, StringT ] :-> Int32T )
    [ Var
     ( Meta
      { meta = StringT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = StringT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ StringT, StringT ] :-> Int32T, id = Id
     { name = "malgo_le_string_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = StringT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = StringT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ StringT, StringT ] :-> Int32T, RawCall "malgo_le_string"
    ( [ StringT, StringT ] :-> Int32T )
    [ Var
     ( Meta
      { meta = StringT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = StringT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ StringT, StringT ] :-> Int32T, id = Id
     { name = "malgo_gt_string_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = StringT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = StringT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ StringT, StringT ] :-> Int32T, RawCall "malgo_gt_string"
    ( [ StringT, StringT ] :-> Int32T )
    [ Var
     ( Meta
      { meta = StringT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = StringT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ StringT, StringT ] :-> Int32T, id = Id
     { name = "malgo_lt_string_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = StringT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = StringT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ StringT, StringT ] :-> Int32T, RawCall "malgo_lt_string"
    ( [ StringT, StringT ] :-> Int32T )
    [ Var
     ( Meta
      { meta = StringT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = StringT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ StringT, StringT ] :-> Int32T, id = Id
     { name = "malgo_ne_string_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = StringT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = StringT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ StringT, StringT ] :-> Int32T, RawCall "malgo_ne_string"
    ( [ StringT, StringT ] :-> Int32T )
    [ Var
     ( Meta
      { meta = StringT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = StringT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ StringT, StringT ] :-> Int32T, id = Id
     { name = "malgo_eq_string_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = StringT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = StringT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ StringT, StringT ] :-> Int32T, RawCall "malgo_eq_string"
    ( [ StringT, StringT ] :-> Int32T )
    [ Var
     ( Meta
      { meta = StringT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = StringT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ CharT, CharT ] :-> Int32T, id = Id
     { name = "malgo_ge_char_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = CharT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = CharT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ CharT, CharT ] :-> Int32T, RawCall "malgo_ge_char"
    ( [ CharT, CharT ] :-> Int32T )
    [ Var
     ( Meta
      { meta = CharT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = CharT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ CharT, CharT ] :-> Int32T, id = Id
     { name = "malgo_le_char_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = CharT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = CharT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ CharT, CharT ] :-> Int32T, RawCall "malgo_le_char"
    ( [ CharT, CharT ] :-> Int32T )
    [ Var
     ( Meta
      { meta = CharT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = CharT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ CharT, CharT ] :-> Int32T, id = Id
     { name = "malgo_gt_char_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = CharT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = CharT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ CharT, CharT ] :-> Int32T, RawCall "malgo_gt_char"
    ( [ CharT, CharT ] :-> Int32T )
    [ Var
     ( Meta
      { meta = CharT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = CharT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ CharT, CharT ] :-> Int32T, id = Id
     { name = "malgo_lt_char_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = CharT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = CharT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ CharT, CharT ] :-> Int32T, RawCall "malgo_lt_char"
    ( [ CharT, CharT ] :-> Int32T )
    [ Var
     ( Meta
      { meta = CharT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = CharT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ CharT, CharT ] :-> Int32T, id = Id
     { name = "malgo_ne_char_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = CharT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = CharT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ CharT, CharT ] :-> Int32T, RawCall "malgo_ne_char"
    ( [ CharT, CharT ] :-> Int32T )
    [ Var
     ( Meta
      { meta = CharT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = CharT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ CharT, CharT ] :-> Int32T, id = Id
     { name = "malgo_eq_char_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = CharT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = CharT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ CharT, CharT ] :-> Int32T, RawCall "malgo_eq_char"
    ( [ CharT, CharT ] :-> Int32T )
    [ Var
     ( Meta
      { meta = CharT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = CharT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ DoubleT, DoubleT ] :-> Int32T, id = Id
     { name = "malgo_ge_double_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = DoubleT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ DoubleT, DoubleT ] :-> Int32T, RawCall "malgo_ge_double"
    ( [ DoubleT, DoubleT ] :-> Int32T )
    [ Var
     ( Meta
      { meta = DoubleT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = DoubleT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ DoubleT, DoubleT ] :-> Int32T, id = Id
     { name = "malgo_le_double_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = DoubleT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ DoubleT, DoubleT ] :-> Int32T, RawCall "malgo_le_double"
    ( [ DoubleT, DoubleT ] :-> Int32T )
    [ Var
     ( Meta
      { meta = DoubleT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = DoubleT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ DoubleT, DoubleT ] :-> Int32T, id = Id
     { name = "malgo_gt_double_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = DoubleT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ DoubleT, DoubleT ] :-> Int32T, RawCall "malgo_gt_double"
    ( [ DoubleT, DoubleT ] :-> Int32T )
    [ Var
     ( Meta
      { meta = DoubleT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = DoubleT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ DoubleT, DoubleT ] :-> Int32T, id = Id
     { name = "malgo_lt_double_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = DoubleT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ DoubleT, DoubleT ] :-> Int32T, RawCall "malgo_lt_double"
    ( [ DoubleT, DoubleT ] :-> Int32T )
    [ Var
     ( Meta
      { meta = DoubleT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = DoubleT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ DoubleT, DoubleT ] :-> Int32T, id = Id
     { name = "malgo_ne_double_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = DoubleT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ DoubleT, DoubleT ] :-> Int32T, RawCall "malgo_ne_double"
    ( [ DoubleT, DoubleT ] :-> Int32T )
    [ Var
     ( Meta
      { meta = DoubleT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = DoubleT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ DoubleT, DoubleT ] :-> Int32T, id = Id
     { name = "malgo_eq_double_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = DoubleT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ DoubleT, DoubleT ] :-> Int32T, RawCall "malgo_eq_double"
    ( [ DoubleT, DoubleT ] :-> Int32T )
    [ Var
     ( Meta
      { meta = DoubleT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = DoubleT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ FloatT, FloatT ] :-> Int32T, id = Id
     { name = "malgo_ge_float_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = FloatT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ FloatT, FloatT ] :-> Int32T, RawCall "malgo_ge_float"
    ( [ FloatT, FloatT ] :-> Int32T )
    [ Var
     ( Meta
      { meta = FloatT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = FloatT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ FloatT, FloatT ] :-> Int32T, id = Id
     { name = "malgo_le_float_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = FloatT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ FloatT, FloatT ] :-> Int32T, RawCall "malgo_le_float"
    ( [ FloatT, FloatT ] :-> Int32T )
    [ Var
     ( Meta
      { meta = FloatT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = FloatT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ FloatT, FloatT ] :-> Int32T, id = Id
     { name = "malgo_gt_float_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = FloatT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ FloatT, FloatT ] :-> Int32T, RawCall "malgo_gt_float"
    ( [ FloatT, FloatT ] :-> Int32T )
    [ Var
     ( Meta
      { meta = FloatT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = FloatT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ FloatT, FloatT ] :-> Int32T, id = Id
     { name = "malgo_lt_float_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = FloatT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ FloatT, FloatT ] :-> Int32T, RawCall "malgo_lt_float"
    ( [ FloatT, FloatT ] :-> Int32T )
    [ Var
     ( Meta
      { meta = FloatT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = FloatT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ FloatT, FloatT ] :-> Int32T, id = Id
     { name = "malgo_ne_float_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = FloatT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ FloatT, FloatT ] :-> Int32T, RawCall "malgo_ne_float"
    ( [ FloatT, FloatT ] :-> Int32T )
    [ Var
     ( Meta
      { meta = FloatT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = FloatT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ FloatT, FloatT ] :-> Int32T, id = Id
     { name = "malgo_eq_float_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = FloatT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ FloatT, FloatT ] :-> Int32T, RawCall "malgo_eq_float"
    ( [ FloatT, FloatT ] :-> Int32T )
    [ Var
     ( Meta
      { meta = FloatT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = FloatT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ Int64T, Int64T ] :-> Int32T, id = Id
     { name = "malgo_ge_int64_t_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int64T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int64T, Int64T ] :-> Int32T, RawCall "malgo_ge_int64_t"
    ( [ Int64T, Int64T ] :-> Int32T )
    [ Var
     ( Meta
      { meta = Int64T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = Int64T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ Int64T, Int64T ] :-> Int32T, id = Id
     { name = "malgo_le_int64_t_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int64T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int64T, Int64T ] :-> Int32T, RawCall "malgo_le_int64_t"
    ( [ Int64T, Int64T ] :-> Int32T )
    [ Var
     ( Meta
      { meta = Int64T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = Int64T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ Int64T, Int64T ] :-> Int32T, id = Id
     { name = "malgo_gt_int64_t_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int64T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int64T, Int64T ] :-> Int32T, RawCall "malgo_gt_int64_t"
    ( [ Int64T, Int64T ] :-> Int32T )
    [ Var
     ( Meta
      { meta = Int64T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = Int64T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ Int64T, Int64T ] :-> Int32T, id = Id
     { name = "malgo_lt_int64_t_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int64T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int64T, Int64T ] :-> Int32T, RawCall "malgo_lt_int64_t"
    ( [ Int64T, Int64T ] :-> Int32T )
    [ Var
     ( Meta
      { meta = Int64T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = Int64T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ Int64T, Int64T ] :-> Int32T, id = Id
     { name = "malgo_ne_int64_t_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int64T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int64T, Int64T ] :-> Int32T, RawCall "malgo_ne_int64_t"
    ( [ Int64T, Int64T ] :-> Int32T )
    [ Var
     ( Meta
      { meta = Int64T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = Int64T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ Int64T, Int64T ] :-> Int32T, id = Id
     { name = "malgo_eq_int64_t_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int64T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int64T, Int64T ] :-> Int32T, RawCall "malgo_eq_int64_t"
    ( [ Int64T, Int64T ] :-> Int32T )
    [ Var
     ( Meta
      { meta = Int64T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = Int64T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ Int32T, Int32T ] :-> Int32T, id = Id
     { name = "malgo_ge_int32_t_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int32T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int32T, Int32T ] :-> Int32T, RawCall "malgo_ge_int32_t"
    ( [ Int32T, Int32T ] :-> Int32T )
    [ Var
     ( Meta
      { meta = Int32T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = Int32T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ Int32T, Int32T ] :-> Int32T, id = Id
     { name = "malgo_le_int32_t_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int32T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int32T, Int32T ] :-> Int32T, RawCall "malgo_le_int32_t"
    ( [ Int32T, Int32T ] :-> Int32T )
    [ Var
     ( Meta
      { meta = Int32T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = Int32T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ Int32T, Int32T ] :-> Int32T, id = Id
     { name = "malgo_gt_int32_t_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int32T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int32T, Int32T ] :-> Int32T, RawCall "malgo_gt_int32_t"
    ( [ Int32T, Int32T ] :-> Int32T )
    [ Var
     ( Meta
      { meta = Int32T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = Int32T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ Int32T, Int32T ] :-> Int32T, id = Id
     { name = "malgo_lt_int32_t_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int32T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int32T, Int32T ] :-> Int32T, RawCall "malgo_lt_int32_t"
    ( [ Int32T, Int32T ] :-> Int32T )
    [ Var
     ( Meta
      { meta = Int32T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = Int32T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ Int32T, Int32T ] :-> Int32T, id = Id
     { name = "malgo_ne_int32_t_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int32T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int32T, Int32T ] :-> Int32T, RawCall "malgo_ne_int32_t"
    ( [ Int32T, Int32T ] :-> Int32T )
    [ Var
     ( Meta
      { meta = Int32T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = Int32T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ Int32T, Int32T ] :-> Int32T, id = Id
     { name = "malgo_eq_int32_t_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int32T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int32T, Int32T ] :-> Int32T, RawCall "malgo_eq_int32_t"
    ( [ Int32T, Int32T ] :-> Int32T )
    [ Var
     ( Meta
      { meta = Int32T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = Int32T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ DoubleT, DoubleT ] :-> DoubleT, id = Id
     { name = "malgo_div_double_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = DoubleT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ DoubleT, DoubleT ] :-> DoubleT, RawCall "malgo_div_double"
    ( [ DoubleT, DoubleT ] :-> DoubleT )
    [ Var
     ( Meta
      { meta = DoubleT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = DoubleT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ DoubleT, DoubleT ] :-> DoubleT, id = Id
     { name = "malgo_mul_double_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = DoubleT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ DoubleT, DoubleT ] :-> DoubleT, RawCall "malgo_mul_double"
    ( [ DoubleT, DoubleT ] :-> DoubleT )
    [ Var
     ( Meta
      { meta = DoubleT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = DoubleT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ DoubleT, DoubleT ] :-> DoubleT, id = Id
     { name = "malgo_sub_double_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = DoubleT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ DoubleT, DoubleT ] :-> DoubleT, RawCall "malgo_sub_double"
    ( [ DoubleT, DoubleT ] :-> DoubleT )
    [ Var
     ( Meta
      { meta = DoubleT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = DoubleT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ DoubleT, DoubleT ] :-> DoubleT, id = Id
     { name = "malgo_add_double_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = DoubleT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ DoubleT, DoubleT ] :-> DoubleT, RawCall "malgo_add_double"
    ( [ DoubleT, DoubleT ] :-> DoubleT )
    [ Var
     ( Meta
      { meta = DoubleT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = DoubleT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ FloatT, FloatT ] :-> FloatT, id = Id
     { name = "malgo_div_float_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = FloatT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ FloatT, FloatT ] :-> FloatT, RawCall "malgo_div_float"
    ( [ FloatT, FloatT ] :-> FloatT )
    [ Var
     ( Meta
      { meta = FloatT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = FloatT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ FloatT, FloatT ] :-> FloatT, id = Id
     { name = "malgo_mul_float_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = FloatT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ FloatT, FloatT ] :-> FloatT, RawCall "malgo_mul_float"
    ( [ FloatT, FloatT ] :-> FloatT )
    [ Var
     ( Meta
      { meta = FloatT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = FloatT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ FloatT, FloatT ] :-> FloatT, id = Id
     { name = "malgo_sub_float_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = FloatT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ FloatT, FloatT ] :-> FloatT, RawCall "malgo_sub_float"
    ( [ FloatT, FloatT ] :-> FloatT )
    [ Var
     ( Meta
      { meta = FloatT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = FloatT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ FloatT, FloatT ] :-> FloatT, id = Id
     { name = "malgo_add_float_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = FloatT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ FloatT, FloatT ] :-> FloatT, RawCall "malgo_add_float"
    ( [ FloatT, FloatT ] :-> FloatT )
    [ Var
     ( Meta
      { meta = FloatT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = FloatT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ Int64T, Int64T ] :-> Int64T, id = Id
     { name = "malgo_div_int64_t_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int64T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int64T, Int64T ] :-> Int64T, RawCall "malgo_div_int64_t"
    ( [ Int64T, Int64T ] :-> Int64T )
    [ Var
     ( Meta
      { meta = Int64T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = Int64T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ Int64T, Int64T ] :-> Int64T, id = Id
     { name = "malgo_mul_int64_t_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int64T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int64T, Int64T ] :-> Int64T, RawCall "malgo_mul_int64_t"
    ( [ Int64T, Int64T ] :-> Int64T )
    [ Var
     ( Meta
      { meta = Int64T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = Int64T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ Int64T, Int64T ] :-> Int64T, id = Id
     { name = "malgo_sub_int64_t_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int64T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int64T, Int64T ] :-> Int64T, RawCall "malgo_sub_int64_t"
    ( [ Int64T, Int64T ] :-> Int64T )
    [ Var
     ( Meta
      { meta = Int64T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = Int64T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ Int64T, Int64T ] :-> Int64T, id = Id
     { name = "malgo_add_int64_t_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int64T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int64T, Int64T ] :-> Int64T, RawCall "malgo_add_int64_t"
    ( [ Int64T, Int64T ] :-> Int64T )
    [ Var
     ( Meta
      { meta = Int64T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = Int64T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ Int32T, Int32T ] :-> Int32T, id = Id
     { name = "malgo_div_int32_t_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int32T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int32T, Int32T ] :-> Int32T, RawCall "malgo_div_int32_t"
    ( [ Int32T, Int32T ] :-> Int32T )
    [ Var
     ( Meta
      { meta = Int32T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = Int32T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ Int32T, Int32T ] :-> Int32T, id = Id
     { name = "malgo_mul_int32_t_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int32T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int32T, Int32T ] :-> Int32T, RawCall "malgo_mul_int32_t"
    ( [ Int32T, Int32T ] :-> Int32T )
    [ Var
     ( Meta
      { meta = Int32T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = Int32T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ Int32T, Int32T ] :-> Int32T, id = Id
     { name = "malgo_sub_int32_t_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int32T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int32T, Int32T ] :-> Int32T, RawCall "malgo_sub_int32_t"
    ( [ Int32T, Int32T ] :-> Int32T )
    [ Var
     ( Meta
      { meta = Int32T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = Int32T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ Int32T, Int32T ] :-> Int32T, id = Id
     { name = "malgo_add_int32_t_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, Meta
     { meta = Int32T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ Int32T, Int32T ] :-> Int32T, RawCall "malgo_add_int32_t"
    ( [ Int32T, Int32T ] :-> Int32T )
    [ Var
     ( Meta
      { meta = Int32T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
     ( Meta
      { meta = Int32T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta = [ Int32T ] :-> AnyT, id = Id
     { name = "Int32#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int32T ] :-> AnyT, Let
    [ LocalDef
     { _variable = Meta
      { meta = SumT
       [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = SumT
      [ Con
       ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], _object = Pack
      ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ] )
      ( Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] )
      [ Var
       ( Meta
        { meta = Int32T, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] } ]
    ( Cast AnyT
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int64T ] :-> AnyT, id = Id
     { name = "Int64#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int64T ] :-> AnyT, Let
    [ LocalDef
     { _variable = Meta
      { meta = SumT
       [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = SumT
      [ Con
       ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], _object = Pack
      ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ] )
      ( Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] )
      [ Var
       ( Meta
        { meta = Int64T, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] } ]
    ( Cast AnyT
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ FloatT ] :-> AnyT, id = Id
     { name = "Float#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ FloatT ] :-> AnyT, Let
    [ LocalDef
     { _variable = Meta
      { meta = SumT
       [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = SumT
      [ Con
       ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], _object = Pack
      ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ] )
      ( Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] )
      [ Var
       ( Meta
        { meta = FloatT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] } ]
    ( Cast AnyT
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ DoubleT ] :-> AnyT, id = Id
     { name = "Double#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ DoubleT ] :-> AnyT, Let
    [ LocalDef
     { _variable = Meta
      { meta = SumT
       [ Con
        ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = SumT
      [ Con
       ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], _object = Pack
      ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ] )
      ( Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] )
      [ Var
       ( Meta
        { meta = DoubleT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] } ]
    ( Cast AnyT
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ CharT ] :-> AnyT, id = Id
     { name = "Char#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = CharT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ CharT ] :-> AnyT, Let
    [ LocalDef
     { _variable = Meta
      { meta = SumT
       [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = SumT
      [ Con
       ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], _object = Pack
      ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ] )
      ( Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] )
      [ Var
       ( Meta
        { meta = CharT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] } ]
    ( Cast AnyT
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ StringT ] :-> AnyT, id = Id
     { name = "String#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = StringT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ StringT ] :-> AnyT, Let
    [ LocalDef
     { _variable = Meta
      { meta = SumT
       [ Con
        ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = SumT
      [ Con
       ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], _object = Pack
      ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ] )
      ( Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] )
      [ Var
       ( Meta
        { meta = StringT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] } ]
    ( Cast AnyT
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [] :-> AnyT, id = Id
     { name = "False", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } }, [], [] :-> AnyT, Let
    [ LocalDef
     { _variable = Meta
      { meta = SumT
       [ Con
        ( Data "runtime/malgo/Builtin.mlg.False" ) [], Con
        ( Data "runtime/malgo/Builtin.mlg.True" ) [] ], id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = SumT
      [ Con
       ( Data "runtime/malgo/Builtin.mlg.False" ) [], Con
       ( Data "runtime/malgo/Builtin.mlg.True" ) [] ], _object = Pack
      ( SumT
       [ Con
        ( Data "runtime/malgo/Builtin.mlg.False" ) [], Con
        ( Data "runtime/malgo/Builtin.mlg.True" ) [] ] )
      ( Con ( Data "runtime/malgo/Builtin.mlg.False" ) [] ) [] } ]
    ( Cast AnyT
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Builtin.mlg.False" ) [], Con
         ( Data "runtime/malgo/Builtin.mlg.True" ) [] ], id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [] :-> AnyT, id = Id
     { name = "True", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } }, [], [] :-> AnyT, Let
    [ LocalDef
     { _variable = Meta
      { meta = SumT
       [ Con
        ( Data "runtime/malgo/Builtin.mlg.False" ) [], Con
        ( Data "runtime/malgo/Builtin.mlg.True" ) [] ], id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = SumT
      [ Con
       ( Data "runtime/malgo/Builtin.mlg.False" ) [], Con
       ( Data "runtime/malgo/Builtin.mlg.True" ) [] ], _object = Pack
      ( SumT
       [ Con
        ( Data "runtime/malgo/Builtin.mlg.False" ) [], Con
        ( Data "runtime/malgo/Builtin.mlg.True" ) [] ] )
      ( Con ( Data "runtime/malgo/Builtin.mlg.True" ) [] ) [] } ]
    ( Cast AnyT
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Builtin.mlg.False" ) [], Con
         ( Data "runtime/malgo/Builtin.mlg.True" ) [] ], id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ StringT ] :-> AnyT, id = Id
     { name = "malgo_panic", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = StringT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ StringT ] :-> AnyT, RawCall "malgo_panic"
    ( [ StringT ] :-> AnyT )
    [ Var
     ( Meta
      { meta = StringT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta = [ AnyT ] :-> AnyT, id = Id
     { name = "malgo_unsafe_cast", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :-> AnyT, RawCall "malgo_unsafe_cast"
    ( [ AnyT ] :-> AnyT )
    [ Var
     ( Meta
      { meta = AnyT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta = [ Int32T ] :->
     ( [ Int32T ] :-> Int32T ), id = Id
     { name = "malgo_add_int32_t", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int32T ] :->
    ( [ Int32T ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int32T ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int32T ] :-> Int32T, _object = Fun
      [ Meta
       { meta = Int32T, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int32T, Int32T ] :-> Int32T, id = Id
         { name = "malgo_add_int32_t_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int32T ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int32T ] :->
     ( [ Int32T ] :-> Int32T ), id = Id
     { name = "malgo_sub_int32_t", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int32T ] :->
    ( [ Int32T ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int32T ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int32T ] :-> Int32T, _object = Fun
      [ Meta
       { meta = Int32T, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int32T, Int32T ] :-> Int32T, id = Id
         { name = "malgo_sub_int32_t_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int32T ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int32T ] :->
     ( [ Int32T ] :-> Int32T ), id = Id
     { name = "malgo_mul_int32_t", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int32T ] :->
    ( [ Int32T ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int32T ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int32T ] :-> Int32T, _object = Fun
      [ Meta
       { meta = Int32T, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int32T, Int32T ] :-> Int32T, id = Id
         { name = "malgo_mul_int32_t_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int32T ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int32T ] :->
     ( [ Int32T ] :-> Int32T ), id = Id
     { name = "malgo_div_int32_t", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int32T ] :->
    ( [ Int32T ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int32T ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int32T ] :-> Int32T, _object = Fun
      [ Meta
       { meta = Int32T, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int32T, Int32T ] :-> Int32T, id = Id
         { name = "malgo_div_int32_t_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int32T ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int64T ] :->
     ( [ Int64T ] :-> Int64T ), id = Id
     { name = "malgo_add_int64_t", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int64T ] :->
    ( [ Int64T ] :-> Int64T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int64T ] :-> Int64T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int64T ] :-> Int64T, _object = Fun
      [ Meta
       { meta = Int64T, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int64T, Int64T ] :-> Int64T, id = Id
         { name = "malgo_add_int64_t_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int64T ] :-> Int64T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int64T ] :->
     ( [ Int64T ] :-> Int64T ), id = Id
     { name = "malgo_sub_int64_t", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int64T ] :->
    ( [ Int64T ] :-> Int64T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int64T ] :-> Int64T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int64T ] :-> Int64T, _object = Fun
      [ Meta
       { meta = Int64T, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int64T, Int64T ] :-> Int64T, id = Id
         { name = "malgo_sub_int64_t_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int64T ] :-> Int64T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int64T ] :->
     ( [ Int64T ] :-> Int64T ), id = Id
     { name = "malgo_mul_int64_t", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int64T ] :->
    ( [ Int64T ] :-> Int64T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int64T ] :-> Int64T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int64T ] :-> Int64T, _object = Fun
      [ Meta
       { meta = Int64T, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int64T, Int64T ] :-> Int64T, id = Id
         { name = "malgo_mul_int64_t_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int64T ] :-> Int64T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int64T ] :->
     ( [ Int64T ] :-> Int64T ), id = Id
     { name = "malgo_div_int64_t", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int64T ] :->
    ( [ Int64T ] :-> Int64T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int64T ] :-> Int64T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int64T ] :-> Int64T, _object = Fun
      [ Meta
       { meta = Int64T, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int64T, Int64T ] :-> Int64T, id = Id
         { name = "malgo_div_int64_t_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int64T ] :-> Int64T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ FloatT ] :->
     ( [ FloatT ] :-> FloatT ), id = Id
     { name = "malgo_add_float", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ FloatT ] :->
    ( [ FloatT ] :-> FloatT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ FloatT ] :-> FloatT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ FloatT ] :-> FloatT, _object = Fun
      [ Meta
       { meta = FloatT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ FloatT, FloatT ] :-> FloatT, id = Id
         { name = "malgo_add_float_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ FloatT ] :-> FloatT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ FloatT ] :->
     ( [ FloatT ] :-> FloatT ), id = Id
     { name = "malgo_sub_float", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ FloatT ] :->
    ( [ FloatT ] :-> FloatT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ FloatT ] :-> FloatT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ FloatT ] :-> FloatT, _object = Fun
      [ Meta
       { meta = FloatT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ FloatT, FloatT ] :-> FloatT, id = Id
         { name = "malgo_sub_float_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ FloatT ] :-> FloatT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ FloatT ] :->
     ( [ FloatT ] :-> FloatT ), id = Id
     { name = "malgo_mul_float", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ FloatT ] :->
    ( [ FloatT ] :-> FloatT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ FloatT ] :-> FloatT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ FloatT ] :-> FloatT, _object = Fun
      [ Meta
       { meta = FloatT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ FloatT, FloatT ] :-> FloatT, id = Id
         { name = "malgo_mul_float_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ FloatT ] :-> FloatT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ FloatT ] :->
     ( [ FloatT ] :-> FloatT ), id = Id
     { name = "malgo_div_float", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ FloatT ] :->
    ( [ FloatT ] :-> FloatT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ FloatT ] :-> FloatT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ FloatT ] :-> FloatT, _object = Fun
      [ Meta
       { meta = FloatT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ FloatT, FloatT ] :-> FloatT, id = Id
         { name = "malgo_div_float_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ FloatT ] :-> FloatT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ DoubleT ] :->
     ( [ DoubleT ] :-> DoubleT ), id = Id
     { name = "malgo_add_double", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ DoubleT ] :->
    ( [ DoubleT ] :-> DoubleT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ DoubleT ] :-> DoubleT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ DoubleT ] :-> DoubleT, _object = Fun
      [ Meta
       { meta = DoubleT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ DoubleT, DoubleT ] :-> DoubleT, id = Id
         { name = "malgo_add_double_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ DoubleT ] :-> DoubleT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ DoubleT ] :->
     ( [ DoubleT ] :-> DoubleT ), id = Id
     { name = "malgo_sub_double", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ DoubleT ] :->
    ( [ DoubleT ] :-> DoubleT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ DoubleT ] :-> DoubleT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ DoubleT ] :-> DoubleT, _object = Fun
      [ Meta
       { meta = DoubleT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ DoubleT, DoubleT ] :-> DoubleT, id = Id
         { name = "malgo_sub_double_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ DoubleT ] :-> DoubleT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ DoubleT ] :->
     ( [ DoubleT ] :-> DoubleT ), id = Id
     { name = "malgo_mul_double", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ DoubleT ] :->
    ( [ DoubleT ] :-> DoubleT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ DoubleT ] :-> DoubleT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ DoubleT ] :-> DoubleT, _object = Fun
      [ Meta
       { meta = DoubleT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ DoubleT, DoubleT ] :-> DoubleT, id = Id
         { name = "malgo_mul_double_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ DoubleT ] :-> DoubleT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ DoubleT ] :->
     ( [ DoubleT ] :-> DoubleT ), id = Id
     { name = "malgo_div_double", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ DoubleT ] :->
    ( [ DoubleT ] :-> DoubleT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ DoubleT ] :-> DoubleT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ DoubleT ] :-> DoubleT, _object = Fun
      [ Meta
       { meta = DoubleT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ DoubleT, DoubleT ] :-> DoubleT, id = Id
         { name = "malgo_div_double_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ DoubleT ] :-> DoubleT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ FloatT ] :-> FloatT, id = Id
     { name = "sqrtf", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ FloatT ] :-> FloatT, RawCall "sqrtf"
    ( [ FloatT ] :-> FloatT )
    [ Var
     ( Meta
      { meta = FloatT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta = [ DoubleT ] :-> DoubleT, id = Id
     { name = "sqrt", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ DoubleT ] :-> DoubleT, RawCall "sqrt"
    ( [ DoubleT ] :-> DoubleT )
    [ Var
     ( Meta
      { meta = DoubleT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta = [ Int32T ] :->
     ( [ Int32T ] :-> Int32T ), id = Id
     { name = "malgo_eq_int32_t", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int32T ] :->
    ( [ Int32T ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int32T ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int32T ] :-> Int32T, _object = Fun
      [ Meta
       { meta = Int32T, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int32T, Int32T ] :-> Int32T, id = Id
         { name = "malgo_eq_int32_t_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int32T ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int32T ] :->
     ( [ Int32T ] :-> Int32T ), id = Id
     { name = "malgo_ne_int32_t", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int32T ] :->
    ( [ Int32T ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int32T ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int32T ] :-> Int32T, _object = Fun
      [ Meta
       { meta = Int32T, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int32T, Int32T ] :-> Int32T, id = Id
         { name = "malgo_ne_int32_t_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int32T ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int32T ] :->
     ( [ Int32T ] :-> Int32T ), id = Id
     { name = "malgo_lt_int32_t", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int32T ] :->
    ( [ Int32T ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int32T ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int32T ] :-> Int32T, _object = Fun
      [ Meta
       { meta = Int32T, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int32T, Int32T ] :-> Int32T, id = Id
         { name = "malgo_lt_int32_t_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int32T ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int32T ] :->
     ( [ Int32T ] :-> Int32T ), id = Id
     { name = "malgo_gt_int32_t", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int32T ] :->
    ( [ Int32T ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int32T ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int32T ] :-> Int32T, _object = Fun
      [ Meta
       { meta = Int32T, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int32T, Int32T ] :-> Int32T, id = Id
         { name = "malgo_gt_int32_t_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int32T ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int32T ] :->
     ( [ Int32T ] :-> Int32T ), id = Id
     { name = "malgo_le_int32_t", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int32T ] :->
    ( [ Int32T ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int32T ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int32T ] :-> Int32T, _object = Fun
      [ Meta
       { meta = Int32T, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int32T, Int32T ] :-> Int32T, id = Id
         { name = "malgo_le_int32_t_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int32T ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int32T ] :->
     ( [ Int32T ] :-> Int32T ), id = Id
     { name = "malgo_ge_int32_t", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int32T ] :->
    ( [ Int32T ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int32T ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int32T ] :-> Int32T, _object = Fun
      [ Meta
       { meta = Int32T, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int32T, Int32T ] :-> Int32T, id = Id
         { name = "malgo_ge_int32_t_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int32T ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int64T ] :->
     ( [ Int64T ] :-> Int32T ), id = Id
     { name = "malgo_eq_int64_t", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int64T ] :->
    ( [ Int64T ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int64T ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int64T ] :-> Int32T, _object = Fun
      [ Meta
       { meta = Int64T, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int64T, Int64T ] :-> Int32T, id = Id
         { name = "malgo_eq_int64_t_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int64T ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int64T ] :->
     ( [ Int64T ] :-> Int32T ), id = Id
     { name = "malgo_ne_int64_t", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int64T ] :->
    ( [ Int64T ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int64T ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int64T ] :-> Int32T, _object = Fun
      [ Meta
       { meta = Int64T, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int64T, Int64T ] :-> Int32T, id = Id
         { name = "malgo_ne_int64_t_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int64T ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int64T ] :->
     ( [ Int64T ] :-> Int32T ), id = Id
     { name = "malgo_lt_int64_t", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int64T ] :->
    ( [ Int64T ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int64T ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int64T ] :-> Int32T, _object = Fun
      [ Meta
       { meta = Int64T, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int64T, Int64T ] :-> Int32T, id = Id
         { name = "malgo_lt_int64_t_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int64T ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int64T ] :->
     ( [ Int64T ] :-> Int32T ), id = Id
     { name = "malgo_gt_int64_t", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int64T ] :->
    ( [ Int64T ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int64T ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int64T ] :-> Int32T, _object = Fun
      [ Meta
       { meta = Int64T, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int64T, Int64T ] :-> Int32T, id = Id
         { name = "malgo_gt_int64_t_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int64T ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int64T ] :->
     ( [ Int64T ] :-> Int32T ), id = Id
     { name = "malgo_le_int64_t", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int64T ] :->
    ( [ Int64T ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int64T ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int64T ] :-> Int32T, _object = Fun
      [ Meta
       { meta = Int64T, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int64T, Int64T ] :-> Int32T, id = Id
         { name = "malgo_le_int64_t_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int64T ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int64T ] :->
     ( [ Int64T ] :-> Int32T ), id = Id
     { name = "malgo_ge_int64_t", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int64T ] :->
    ( [ Int64T ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int64T ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int64T ] :-> Int32T, _object = Fun
      [ Meta
       { meta = Int64T, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int64T, Int64T ] :-> Int32T, id = Id
         { name = "malgo_ge_int64_t_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int64T ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ FloatT ] :->
     ( [ FloatT ] :-> Int32T ), id = Id
     { name = "malgo_eq_float", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ FloatT ] :->
    ( [ FloatT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ FloatT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ FloatT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = FloatT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ FloatT, FloatT ] :-> Int32T, id = Id
         { name = "malgo_eq_float_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ FloatT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ FloatT ] :->
     ( [ FloatT ] :-> Int32T ), id = Id
     { name = "malgo_ne_float", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ FloatT ] :->
    ( [ FloatT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ FloatT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ FloatT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = FloatT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ FloatT, FloatT ] :-> Int32T, id = Id
         { name = "malgo_ne_float_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ FloatT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ FloatT ] :->
     ( [ FloatT ] :-> Int32T ), id = Id
     { name = "malgo_lt_float", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ FloatT ] :->
    ( [ FloatT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ FloatT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ FloatT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = FloatT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ FloatT, FloatT ] :-> Int32T, id = Id
         { name = "malgo_lt_float_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ FloatT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ FloatT ] :->
     ( [ FloatT ] :-> Int32T ), id = Id
     { name = "malgo_gt_float", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ FloatT ] :->
    ( [ FloatT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ FloatT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ FloatT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = FloatT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ FloatT, FloatT ] :-> Int32T, id = Id
         { name = "malgo_gt_float_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ FloatT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ FloatT ] :->
     ( [ FloatT ] :-> Int32T ), id = Id
     { name = "malgo_le_float", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ FloatT ] :->
    ( [ FloatT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ FloatT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ FloatT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = FloatT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ FloatT, FloatT ] :-> Int32T, id = Id
         { name = "malgo_le_float_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ FloatT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ FloatT ] :->
     ( [ FloatT ] :-> Int32T ), id = Id
     { name = "malgo_ge_float", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ FloatT ] :->
    ( [ FloatT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ FloatT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ FloatT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = FloatT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ FloatT, FloatT ] :-> Int32T, id = Id
         { name = "malgo_ge_float_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ FloatT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ DoubleT ] :->
     ( [ DoubleT ] :-> Int32T ), id = Id
     { name = "malgo_eq_double", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ DoubleT ] :->
    ( [ DoubleT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ DoubleT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ DoubleT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = DoubleT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ DoubleT, DoubleT ] :-> Int32T, id = Id
         { name = "malgo_eq_double_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ DoubleT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ DoubleT ] :->
     ( [ DoubleT ] :-> Int32T ), id = Id
     { name = "malgo_ne_double", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ DoubleT ] :->
    ( [ DoubleT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ DoubleT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ DoubleT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = DoubleT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ DoubleT, DoubleT ] :-> Int32T, id = Id
         { name = "malgo_ne_double_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ DoubleT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ DoubleT ] :->
     ( [ DoubleT ] :-> Int32T ), id = Id
     { name = "malgo_lt_double", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ DoubleT ] :->
    ( [ DoubleT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ DoubleT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ DoubleT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = DoubleT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ DoubleT, DoubleT ] :-> Int32T, id = Id
         { name = "malgo_lt_double_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ DoubleT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ DoubleT ] :->
     ( [ DoubleT ] :-> Int32T ), id = Id
     { name = "malgo_gt_double", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ DoubleT ] :->
    ( [ DoubleT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ DoubleT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ DoubleT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = DoubleT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ DoubleT, DoubleT ] :-> Int32T, id = Id
         { name = "malgo_gt_double_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ DoubleT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ DoubleT ] :->
     ( [ DoubleT ] :-> Int32T ), id = Id
     { name = "malgo_le_double", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ DoubleT ] :->
    ( [ DoubleT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ DoubleT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ DoubleT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = DoubleT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ DoubleT, DoubleT ] :-> Int32T, id = Id
         { name = "malgo_le_double_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ DoubleT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ DoubleT ] :->
     ( [ DoubleT ] :-> Int32T ), id = Id
     { name = "malgo_ge_double", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ DoubleT ] :->
    ( [ DoubleT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ DoubleT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ DoubleT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = DoubleT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ DoubleT, DoubleT ] :-> Int32T, id = Id
         { name = "malgo_ge_double_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ DoubleT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ CharT ] :->
     ( [ CharT ] :-> Int32T ), id = Id
     { name = "malgo_eq_char", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = CharT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ CharT ] :->
    ( [ CharT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ CharT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ CharT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = CharT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ CharT, CharT ] :-> Int32T, id = Id
         { name = "malgo_eq_char_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = CharT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = CharT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ CharT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ CharT ] :->
     ( [ CharT ] :-> Int32T ), id = Id
     { name = "malgo_ne_char", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = CharT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ CharT ] :->
    ( [ CharT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ CharT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ CharT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = CharT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ CharT, CharT ] :-> Int32T, id = Id
         { name = "malgo_ne_char_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = CharT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = CharT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ CharT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ CharT ] :->
     ( [ CharT ] :-> Int32T ), id = Id
     { name = "malgo_lt_char", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = CharT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ CharT ] :->
    ( [ CharT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ CharT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ CharT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = CharT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ CharT, CharT ] :-> Int32T, id = Id
         { name = "malgo_lt_char_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = CharT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = CharT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ CharT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ CharT ] :->
     ( [ CharT ] :-> Int32T ), id = Id
     { name = "malgo_gt_char", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = CharT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ CharT ] :->
    ( [ CharT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ CharT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ CharT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = CharT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ CharT, CharT ] :-> Int32T, id = Id
         { name = "malgo_gt_char_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = CharT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = CharT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ CharT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ CharT ] :->
     ( [ CharT ] :-> Int32T ), id = Id
     { name = "malgo_le_char", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = CharT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ CharT ] :->
    ( [ CharT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ CharT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ CharT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = CharT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ CharT, CharT ] :-> Int32T, id = Id
         { name = "malgo_le_char_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = CharT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = CharT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ CharT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ CharT ] :->
     ( [ CharT ] :-> Int32T ), id = Id
     { name = "malgo_ge_char", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = CharT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ CharT ] :->
    ( [ CharT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ CharT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ CharT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = CharT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ CharT, CharT ] :-> Int32T, id = Id
         { name = "malgo_ge_char_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = CharT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = CharT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ CharT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ StringT ] :->
     ( [ StringT ] :-> Int32T ), id = Id
     { name = "malgo_eq_string", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = StringT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ StringT ] :->
    ( [ StringT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ StringT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ StringT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = StringT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ StringT, StringT ] :-> Int32T, id = Id
         { name = "malgo_eq_string_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = StringT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = StringT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ StringT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ StringT ] :->
     ( [ StringT ] :-> Int32T ), id = Id
     { name = "malgo_ne_string", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = StringT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ StringT ] :->
    ( [ StringT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ StringT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ StringT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = StringT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ StringT, StringT ] :-> Int32T, id = Id
         { name = "malgo_ne_string_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = StringT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = StringT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ StringT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ StringT ] :->
     ( [ StringT ] :-> Int32T ), id = Id
     { name = "malgo_lt_string", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = StringT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ StringT ] :->
    ( [ StringT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ StringT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ StringT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = StringT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ StringT, StringT ] :-> Int32T, id = Id
         { name = "malgo_lt_string_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = StringT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = StringT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ StringT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ StringT ] :->
     ( [ StringT ] :-> Int32T ), id = Id
     { name = "malgo_gt_string", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = StringT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ StringT ] :->
    ( [ StringT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ StringT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ StringT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = StringT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ StringT, StringT ] :-> Int32T, id = Id
         { name = "malgo_gt_string_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = StringT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = StringT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ StringT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ StringT ] :->
     ( [ StringT ] :-> Int32T ), id = Id
     { name = "malgo_le_string", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = StringT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ StringT ] :->
    ( [ StringT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ StringT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ StringT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = StringT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ StringT, StringT ] :-> Int32T, id = Id
         { name = "malgo_le_string_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = StringT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = StringT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ StringT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ StringT ] :->
     ( [ StringT ] :-> Int32T ), id = Id
     { name = "malgo_ge_string", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = StringT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ StringT ] :->
    ( [ StringT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ StringT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ StringT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = StringT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ StringT, StringT ] :-> Int32T, id = Id
         { name = "malgo_ge_string_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = StringT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = StringT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ StringT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ CharT ] :-> Int32T, id = Id
     { name = "malgo_char_ord", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = CharT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ CharT ] :-> Int32T, RawCall "malgo_char_ord"
    ( [ CharT ] :-> Int32T )
    [ Var
     ( Meta
      { meta = CharT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta = [ CharT ] :-> Int32T, id = Id
     { name = "malgo_is_digit", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = CharT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ CharT ] :-> Int32T, RawCall "malgo_is_digit"
    ( [ CharT ] :-> Int32T )
    [ Var
     ( Meta
      { meta = CharT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta = [ CharT ] :-> Int32T, id = Id
     { name = "malgo_is_lower", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = CharT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ CharT ] :-> Int32T, RawCall "malgo_is_lower"
    ( [ CharT ] :-> Int32T )
    [ Var
     ( Meta
      { meta = CharT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta = [ CharT ] :-> Int32T, id = Id
     { name = "malgo_is_upper", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = CharT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ CharT ] :-> Int32T, RawCall "malgo_is_upper"
    ( [ CharT ] :-> Int32T )
    [ Var
     ( Meta
      { meta = CharT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta = [ CharT ] :-> Int32T, id = Id
     { name = "malgo_is_alphanum", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = CharT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ CharT ] :-> Int32T, RawCall "malgo_is_alphanum"
    ( [ CharT ] :-> Int32T )
    [ Var
     ( Meta
      { meta = CharT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta = [ StringT ] :-> Int64T, id = Id
     { name = "malgo_string_length", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = StringT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ StringT ] :-> Int64T, RawCall "malgo_string_length"
    ( [ StringT ] :-> Int64T )
    [ Var
     ( Meta
      { meta = StringT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta = [ Int64T ] :->
     ( [ StringT ] :-> CharT ), id = Id
     { name = "malgo_string_at", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int64T ] :->
    ( [ StringT ] :-> CharT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ StringT ] :-> CharT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ StringT ] :-> CharT, _object = Fun
      [ Meta
       { meta = StringT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int64T, StringT ] :-> CharT, id = Id
         { name = "malgo_string_at_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = StringT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ StringT ] :-> CharT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ CharT ] :->
     ( [ StringT ] :-> StringT ), id = Id
     { name = "malgo_string_cons", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = CharT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ CharT ] :->
    ( [ StringT ] :-> StringT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ StringT ] :-> StringT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ StringT ] :-> StringT, _object = Fun
      [ Meta
       { meta = StringT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ CharT, StringT ] :-> StringT, id = Id
         { name = "malgo_string_cons_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = CharT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = StringT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ StringT ] :-> StringT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ StringT ] :->
     ( [ StringT ] :-> StringT ), id = Id
     { name = "malgo_string_append", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = StringT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ StringT ] :->
    ( [ StringT ] :-> StringT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ StringT ] :-> StringT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ StringT ] :-> StringT, _object = Fun
      [ Meta
       { meta = StringT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ StringT, StringT ] :-> StringT, id = Id
         { name = "malgo_string_append_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = StringT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = StringT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ StringT ] :-> StringT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ StringT ] :->
     ( [ Int64T ] :-> ( [ Int64T ] :-> StringT ) ), id = Id
     { name = "malgo_substring", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = StringT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ StringT ] :->
    ( [ Int64T ] :-> ( [ Int64T ] :-> StringT ) ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int64T ] :->
       ( [ Int64T ] :-> StringT ), id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int64T ] :->
      ( [ Int64T ] :-> StringT ), _object = Fun
      [ Meta
       { meta = Int64T, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( Let
       [ LocalDef
        { _variable = Meta
         { meta = [ Int64T ] :-> StringT, id = Id
          { name = "let", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int64T ] :-> StringT, _object = Fun
         [ Meta
          { meta = Int64T, id = Id
           { name = "p", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
         ( CallDirect
          ( Meta
           { meta =
            [ StringT, Int64T, Int64T ] :-> StringT, id = Id
            { name = "malgo_substring_curry", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
          [ Var
           ( Meta
            { meta = StringT, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
           ( Meta
            { meta = Int64T, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
           ( Meta
            { meta = Int64T, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
       ( Atom
        ( Var
         ( Meta
          { meta = [ Int64T ] :-> StringT, id = Id
           { name = "let", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int64T ] :->
        ( [ Int64T ] :-> StringT ), id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int32T ] :-> StringT, id = Id
     { name = "malgo_int32_t_to_string", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int32T ] :-> StringT, RawCall "malgo_int32_t_to_string"
    ( [ Int32T ] :-> StringT )
    [ Var
     ( Meta
      { meta = Int32T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta = [ Int64T ] :-> StringT, id = Id
     { name = "malgo_int64_t_to_string", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int64T ] :-> StringT, RawCall "malgo_int64_t_to_string"
    ( [ Int64T ] :-> StringT )
    [ Var
     ( Meta
      { meta = Int64T, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta = [ FloatT ] :-> StringT, id = Id
     { name = "malgo_float_to_string", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ FloatT ] :-> StringT, RawCall "malgo_float_to_string"
    ( [ FloatT ] :-> StringT )
    [ Var
     ( Meta
      { meta = FloatT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta = [ DoubleT ] :-> StringT, id = Id
     { name = "malgo_double_to_string", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ DoubleT ] :-> StringT, RawCall "malgo_double_to_string"
    ( [ DoubleT ] :-> StringT )
    [ Var
     ( Meta
      { meta = DoubleT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta = [ CharT ] :-> StringT, id = Id
     { name = "malgo_char_to_string", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = CharT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ CharT ] :-> StringT, RawCall "malgo_char_to_string"
    ( [ CharT ] :-> StringT )
    [ Var
     ( Meta
      { meta = CharT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
     { name = "malgo_exit_failure", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = SumT
      [ Con Tuple [] ], id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ SumT [ Con Tuple [] ] ] :-> AnyT, RawCall "malgo_exit_failure"
    ( [ SumT [ Con Tuple [] ] ] :-> AnyT )
    [ Var
     ( Meta
      { meta = SumT
       [ Con Tuple [] ], id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ SumT [ Con Tuple [] ] ] :-> SumT
     [ Con Tuple [] ], id = Id
     { name = "malgo_newline", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = SumT
      [ Con Tuple [] ], id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ SumT [ Con Tuple [] ] ] :-> SumT
    [ Con Tuple [] ], RawCall "malgo_newline"
    ( [ SumT [ Con Tuple [] ] ] :-> SumT [ Con Tuple [] ] )
    [ Var
     ( Meta
      { meta = SumT
       [ Con Tuple [] ], id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta = [ CharT ] :-> SumT
     [ Con Tuple [] ], id = Id
     { name = "malgo_print_char", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = CharT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ CharT ] :-> SumT
    [ Con Tuple [] ], RawCall "malgo_print_char"
    ( [ CharT ] :-> SumT [ Con Tuple [] ] )
    [ Var
     ( Meta
      { meta = CharT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta = [ StringT ] :-> SumT
     [ Con Tuple [] ], id = Id
     { name = "malgo_print_string", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = StringT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ StringT ] :-> SumT
    [ Con Tuple [] ], RawCall "malgo_print_string"
    ( [ StringT ] :-> SumT [ Con Tuple [] ] )
    [ Var
     ( Meta
      { meta = StringT, id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ SumT [ Con Tuple [] ] ] :-> SumT
     [ Con Tuple [] ], id = Id
     { name = "malgo_flush", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = SumT
      [ Con Tuple [] ], id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ SumT [ Con Tuple [] ] ] :-> SumT
    [ Con Tuple [] ], RawCall "malgo_flush"
    ( [ SumT [ Con Tuple [] ] ] :-> SumT [ Con Tuple [] ] )
    [ Var
     ( Meta
      { meta = SumT
       [ Con Tuple [] ], id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ SumT [ Con Tuple [] ] ] :-> CharT, id = Id
     { name = "malgo_get_char", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = SumT
      [ Con Tuple [] ], id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ SumT [ Con Tuple [] ] ] :-> CharT, RawCall "malgo_get_char"
    ( [ SumT [ Con Tuple [] ] ] :-> CharT )
    [ Var
     ( Meta
      { meta = SumT
       [ Con Tuple [] ], id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta =
     [ SumT [ Con Tuple [] ] ] :-> StringT, id = Id
     { name = "malgo_get_contents", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = SumT
      [ Con Tuple [] ], id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ SumT [ Con Tuple [] ] ] :-> StringT, RawCall "malgo_get_contents"
    ( [ SumT [ Con Tuple [] ] ] :-> StringT )
    [ Var
     ( Meta
      { meta = SumT
       [ Con Tuple [] ], id = Id
       { name = "p", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ),
   ( Meta
    { meta = [ Int64T ] :-> StringT, id = Id
     { name = "toStringInt64#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int64T ] :-> StringT, Assign
    ( Meta
     { meta = StringT, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ Int64T ] :-> StringT, id = Id
        { name = "malgo_int64_t_to_string", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = Int64T, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Cast StringT
     ( Var
      ( Meta
       { meta = StringT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :-> AnyT, id = Id
     { name = "toStringInt64", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int64#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "int64#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Int64#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Int64#" ) [ Int64T ] )
       [ Meta
        { meta = Int64T, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = StringT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Call
         ( Var
          ( Meta
           { meta = [ Int64T ] :-> StringT, id = Id
            { name = "toStringInt64#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
         [ Var
          ( Meta
           { meta = Int64T, id = Id
            { name = "p", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
        ( Assign
         ( Meta
          { meta = StringT, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
         ( Cast StringT
          ( Var
           ( Meta
            { meta = StringT, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
         ( Assign
          ( Meta
           { meta = AnyT, id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
          ( Call
           ( Var
            ( Meta
             { meta = [ StringT ] :-> AnyT, id = Id
              { name = "String#", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
           [ Var
            ( Meta
             { meta = StringT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
          ( Cast AnyT
           ( Var
            ( Meta
             { meta = AnyT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta = [ Int32T ] :-> StringT, id = Id
     { name = "toStringInt32#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int32T ] :-> StringT, Assign
    ( Meta
     { meta = StringT, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ Int32T ] :-> StringT, id = Id
        { name = "malgo_int32_t_to_string", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = Int32T, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Cast StringT
     ( Var
      ( Meta
       { meta = StringT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :-> AnyT, id = Id
     { name = "toStringInt32", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int32#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "int32#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Int32#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Int32#" ) [ Int32T ] )
       [ Meta
        { meta = Int32T, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = StringT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Call
         ( Var
          ( Meta
           { meta = [ Int32T ] :-> StringT, id = Id
            { name = "toStringInt32#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
         [ Var
          ( Meta
           { meta = Int32T, id = Id
            { name = "p", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
        ( Assign
         ( Meta
          { meta = StringT, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
         ( Cast StringT
          ( Var
           ( Meta
            { meta = StringT, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
         ( Assign
          ( Meta
           { meta = AnyT, id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
          ( Call
           ( Var
            ( Meta
             { meta = [ StringT ] :-> AnyT, id = Id
              { name = "String#", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
           [ Var
            ( Meta
             { meta = StringT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
          ( Cast AnyT
           ( Var
            ( Meta
             { meta = AnyT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta = [ FloatT ] :-> StringT, id = Id
     { name = "toStringFloat#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ FloatT ] :-> StringT, Assign
    ( Meta
     { meta = StringT, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ FloatT ] :-> StringT, id = Id
        { name = "malgo_float_to_string", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = FloatT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Cast StringT
     ( Var
      ( Meta
       { meta = StringT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :-> AnyT, id = Id
     { name = "toStringFloat", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "float#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "float#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Float#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] )
       [ Meta
        { meta = FloatT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = StringT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Call
         ( Var
          ( Meta
           { meta = [ FloatT ] :-> StringT, id = Id
            { name = "toStringFloat#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
         [ Var
          ( Meta
           { meta = FloatT, id = Id
            { name = "p", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
        ( Assign
         ( Meta
          { meta = StringT, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
         ( Cast StringT
          ( Var
           ( Meta
            { meta = StringT, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
         ( Assign
          ( Meta
           { meta = AnyT, id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
          ( Call
           ( Var
            ( Meta
             { meta = [ StringT ] :-> AnyT, id = Id
              { name = "String#", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
           [ Var
            ( Meta
             { meta = StringT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
          ( Cast AnyT
           ( Var
            ( Meta
             { meta = AnyT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta = [ DoubleT ] :-> StringT, id = Id
     { name = "toStringDouble#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ DoubleT ] :-> StringT, Assign
    ( Meta
     { meta = StringT, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ DoubleT ] :-> StringT, id = Id
        { name = "malgo_double_to_string", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = DoubleT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Cast StringT
     ( Var
      ( Meta
       { meta = StringT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :-> AnyT, id = Id
     { name = "toStringDouble", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "double#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "double#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Double#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] )
       [ Meta
        { meta = DoubleT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = StringT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Call
         ( Var
          ( Meta
           { meta = [ DoubleT ] :-> StringT, id = Id
            { name = "toStringDouble#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
         [ Var
          ( Meta
           { meta = DoubleT, id = Id
            { name = "p", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
        ( Assign
         ( Meta
          { meta = StringT, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
         ( Cast StringT
          ( Var
           ( Meta
            { meta = StringT, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
         ( Assign
          ( Meta
           { meta = AnyT, id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
          ( Call
           ( Var
            ( Meta
             { meta = [ StringT ] :-> AnyT, id = Id
              { name = "String#", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
           [ Var
            ( Meta
             { meta = StringT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
          ( Cast AnyT
           ( Var
            ( Meta
             { meta = AnyT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta = [ CharT ] :-> StringT, id = Id
     { name = "toStringChar#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = CharT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ CharT ] :-> StringT, Assign
    ( Meta
     { meta = StringT, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ CharT ] :-> StringT, id = Id
        { name = "malgo_char_to_string", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = CharT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Cast StringT
     ( Var
      ( Meta
       { meta = StringT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :-> AnyT, id = Id
     { name = "toStringChar", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "char#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "char#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Char#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] )
       [ Meta
        { meta = CharT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = StringT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Call
         ( Var
          ( Meta
           { meta = [ CharT ] :-> StringT, id = Id
            { name = "toStringChar#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
         [ Var
          ( Meta
           { meta = CharT, id = Id
            { name = "p", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
        ( Assign
         ( Meta
          { meta = StringT, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
         ( Cast StringT
          ( Var
           ( Meta
            { meta = StringT, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
         ( Assign
          ( Meta
           { meta = AnyT, id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
          ( Call
           ( Var
            ( Meta
             { meta = [ StringT ] :-> AnyT, id = Id
              { name = "String#", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
           [ Var
            ( Meta
             { meta = StringT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
          ( Cast AnyT
           ( Var
            ( Meta
             { meta = AnyT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta = [ StringT ] :->
     ( [ Int64T ] :-> ( [ Int64T ] :-> StringT ) ), id = Id
     { name = "substring#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = StringT, id = Id
      { name = "str", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ StringT ] :->
    ( [ Int64T ] :-> ( [ Int64T ] :-> StringT ) ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int64T ] :->
       ( [ Int64T ] :-> StringT ), id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int64T ] :->
      ( [ Int64T ] :-> StringT ), _object = Fun
      [ Meta
       { meta = Int64T, id = Id
        { name = "start", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( Let
       [ LocalDef
        { _variable = Meta
         { meta = [ Int64T ] :-> StringT, id = Id
          { name = "let", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int64T ] :-> StringT, _object = Fun
         [ Meta
          { meta = Int64T, id = Id
           { name = "end", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
         ( CallDirect
          ( Meta
           { meta =
            [ StringT, Int64T, Int64T ] :-> StringT, id = Id
            { name = "substring#_curry", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
          [ Var
           ( Meta
            { meta = StringT, id = Id
             { name = "str", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
           ( Meta
            { meta = Int64T, id = Id
             { name = "start", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
           ( Meta
            { meta = Int64T, id = Id
             { name = "end", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
       ( Atom
        ( Var
         ( Meta
          { meta = [ Int64T ] :-> StringT, id = Id
           { name = "let", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int64T ] :->
        ( [ Int64T ] :-> StringT ), id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> ( [ AnyT ] :-> AnyT ) ), id = Id
     { name = "substring", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "string#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> ( [ AnyT ] :-> AnyT ) ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :->
       ( [ AnyT ] :-> AnyT ), id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :->
      ( [ AnyT ] :-> AnyT ), _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "int64#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( Let
       [ LocalDef
        { _variable = Meta
         { meta = [ AnyT ] :-> AnyT, id = Id
          { name = "let", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
         [ Meta
          { meta = AnyT, id = Id
           { name = "int64#", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
         ( CallDirect
          ( Meta
           { meta =
            [ AnyT, AnyT, AnyT ] :-> AnyT, id = Id
            { name = "substring_curry", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
          [ Var
           ( Meta
            { meta = AnyT, id = Id
             { name = "string#", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
           ( Meta
            { meta = AnyT, id = Id
             { name = "int64#", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
           ( Meta
            { meta = AnyT, id = Id
             { name = "int64#", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
       ( Atom
        ( Var
         ( Meta
          { meta = [ AnyT ] :-> AnyT, id = Id
           { name = "let", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :->
        ( [ AnyT ] :-> AnyT ), id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int64T ] :->
     ( [ Int64T ] :-> Int64T ), id = Id
     { name = "subInt64#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int64T ] :->
    ( [ Int64T ] :-> Int64T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int64T ] :-> Int64T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int64T ] :-> Int64T, _object = Fun
      [ Meta
       { meta = Int64T, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int64T, Int64T ] :-> Int64T, id = Id
         { name = "subInt64#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int64T ] :-> Int64T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "subInt64", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int64#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "int64#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "subInt64_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int64#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int64#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int32T ] :->
     ( [ Int32T ] :-> Int32T ), id = Id
     { name = "subInt32#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int32T ] :->
    ( [ Int32T ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int32T ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int32T ] :-> Int32T, _object = Fun
      [ Meta
       { meta = Int32T, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int32T, Int32T ] :-> Int32T, id = Id
         { name = "subInt32#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int32T ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "subInt32", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int32#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "int32#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "subInt32_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int32#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int32#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ FloatT ] :->
     ( [ FloatT ] :-> FloatT ), id = Id
     { name = "subFloat#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ FloatT ] :->
    ( [ FloatT ] :-> FloatT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ FloatT ] :-> FloatT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ FloatT ] :-> FloatT, _object = Fun
      [ Meta
       { meta = FloatT, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ FloatT, FloatT ] :-> FloatT, id = Id
         { name = "subFloat#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ FloatT ] :-> FloatT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "subFloat", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "float#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "float#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "subFloat_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "float#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "float#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ DoubleT ] :->
     ( [ DoubleT ] :-> DoubleT ), id = Id
     { name = "subDouble#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ DoubleT ] :->
    ( [ DoubleT ] :-> DoubleT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ DoubleT ] :-> DoubleT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ DoubleT ] :-> DoubleT, _object = Fun
      [ Meta
       { meta = DoubleT, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ DoubleT, DoubleT ] :-> DoubleT, id = Id
         { name = "subDouble#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ DoubleT ] :-> DoubleT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "subDouble", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "double#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "double#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "subDouble_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "double#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "double#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ StringT ] :-> AnyT, id = Id
     { name = "string#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = StringT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ StringT ] :-> AnyT, Assign
    ( Meta
     { meta = AnyT, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ StringT ] :-> AnyT, id = Id
        { name = "String#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = StringT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Cast AnyT
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ FloatT ] :-> FloatT, id = Id
     { name = "sqrtFloat#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ FloatT ] :-> FloatT, Assign
    ( Meta
     { meta = FloatT, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ FloatT ] :-> FloatT, id = Id
        { name = "sqrtf", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = FloatT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Cast FloatT
     ( Var
      ( Meta
       { meta = FloatT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :-> AnyT, id = Id
     { name = "sqrtFloat", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "float#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "float#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Float#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Float#" ) [ FloatT ] )
       [ Meta
        { meta = FloatT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = FloatT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Call
         ( Var
          ( Meta
           { meta = [ FloatT ] :-> FloatT, id = Id
            { name = "sqrtFloat#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
         [ Var
          ( Meta
           { meta = FloatT, id = Id
            { name = "p", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
        ( Assign
         ( Meta
          { meta = FloatT, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
         ( Cast FloatT
          ( Var
           ( Meta
            { meta = FloatT, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
         ( Assign
          ( Meta
           { meta = AnyT, id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
          ( Call
           ( Var
            ( Meta
             { meta = [ FloatT ] :-> AnyT, id = Id
              { name = "Float#", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
           [ Var
            ( Meta
             { meta = FloatT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
          ( Cast AnyT
           ( Var
            ( Meta
             { meta = AnyT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta = [ DoubleT ] :-> DoubleT, id = Id
     { name = "sqrtDouble#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ DoubleT ] :-> DoubleT, Assign
    ( Meta
     { meta = DoubleT, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ DoubleT ] :-> DoubleT, id = Id
        { name = "sqrt", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = DoubleT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Cast DoubleT
     ( Var
      ( Meta
       { meta = DoubleT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :-> AnyT, id = Id
     { name = "sqrtDouble", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "double#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "double#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Double#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Double#" ) [ DoubleT ] )
       [ Meta
        { meta = DoubleT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = DoubleT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Call
         ( Var
          ( Meta
           { meta = [ DoubleT ] :-> DoubleT, id = Id
            { name = "sqrtDouble#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
         [ Var
          ( Meta
           { meta = DoubleT, id = Id
            { name = "p", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
        ( Assign
         ( Meta
          { meta = DoubleT, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
         ( Cast DoubleT
          ( Var
           ( Meta
            { meta = DoubleT, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
         ( Assign
          ( Meta
           { meta = AnyT, id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
          ( Call
           ( Var
            ( Meta
             { meta = [ DoubleT ] :-> AnyT, id = Id
              { name = "Double#", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
           [ Var
            ( Meta
             { meta = DoubleT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
          ( Cast AnyT
           ( Var
            ( Meta
             { meta = AnyT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta = [ StringT ] :-> SumT
     [ Con Tuple [] ], id = Id
     { name = "printString#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = StringT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ StringT ] :-> SumT
    [ Con Tuple [] ], Assign
    ( Meta
     { meta = SumT
      [ Con Tuple [] ], id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ StringT ] :-> SumT
        [ Con Tuple [] ], id = Id
        { name = "malgo_print_string", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = StringT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Cast
     ( SumT [ Con Tuple [] ] )
     ( Var
      ( Meta
       { meta = SumT
        [ Con Tuple [] ], id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :-> SumT
     [ Con Tuple [] ], id = Id
     { name = "printString", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "string#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :-> SumT
    [ Con Tuple [] ], Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "string#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.String#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] )
       [ Meta
        { meta = StringT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con Tuple [] ], id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Call
         ( Var
          ( Meta
           { meta = [ StringT ] :-> SumT
            [ Con Tuple [] ], id = Id
            { name = "printString#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
         [ Var
          ( Meta
           { meta = StringT, id = Id
            { name = "p", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
        ( Cast
         ( SumT [ Con Tuple [] ] )
         ( Var
          ( Meta
           { meta = SumT
            [ Con Tuple [] ], id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ]
     ( Error ( SumT [ Con Tuple [] ] ) ) ) ),
   ( Meta
    { meta = [ CharT ] :-> SumT
     [ Con Tuple [] ], id = Id
     { name = "printChar#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = CharT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ CharT ] :-> SumT
    [ Con Tuple [] ], Assign
    ( Meta
     { meta = SumT
      [ Con Tuple [] ], id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ CharT ] :-> SumT
        [ Con Tuple [] ], id = Id
        { name = "malgo_print_char", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = CharT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Cast
     ( SumT [ Con Tuple [] ] )
     ( Var
      ( Meta
       { meta = SumT
        [ Con Tuple [] ], id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :-> SumT
     [ Con Tuple [] ], id = Id
     { name = "printChar", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "char#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :-> SumT
    [ Con Tuple [] ], Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "char#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Char#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] )
       [ Meta
        { meta = CharT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con Tuple [] ], id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Call
         ( Var
          ( Meta
           { meta = [ CharT ] :-> SumT
            [ Con Tuple [] ], id = Id
            { name = "printChar#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
         [ Var
          ( Meta
           { meta = CharT, id = Id
            { name = "p", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
        ( Cast
         ( SumT [ Con Tuple [] ] )
         ( Var
          ( Meta
           { meta = SumT
            [ Con Tuple [] ], id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ]
     ( Error ( SumT [ Con Tuple [] ] ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :-> AnyT, id = Id
     { name = "panic", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "string#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "string#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.String#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] )
       [ Meta
        { meta = StringT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = AnyT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Call
         ( Var
          ( Meta
           { meta = [ StringT ] :-> AnyT, id = Id
            { name = "malgo_panic", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
         [ Var
          ( Meta
           { meta = StringT, id = Id
            { name = "p", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
        ( Cast AnyT
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta = [ CharT ] :-> Int32T, id = Id
     { name = "ordChar#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = CharT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ CharT ] :-> Int32T, Assign
    ( Meta
     { meta = Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ CharT ] :-> Int32T, id = Id
        { name = "malgo_char_ord", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = CharT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Cast Int32T
     ( Var
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :-> AnyT, id = Id
     { name = "ordChar", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "char#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "char#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Char#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] )
       [ Meta
        { meta = CharT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Call
         ( Var
          ( Meta
           { meta = [ CharT ] :-> Int32T, id = Id
            { name = "ordChar#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
         [ Var
          ( Meta
           { meta = CharT, id = Id
            { name = "p", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
        ( Assign
         ( Meta
          { meta = Int32T, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
         ( Cast Int32T
          ( Var
           ( Meta
            { meta = Int32T, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
         ( Assign
          ( Meta
           { meta = AnyT, id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
          ( Call
           ( Var
            ( Meta
             { meta = [ Int32T ] :-> AnyT, id = Id
              { name = "Int32#", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
           [ Var
            ( Meta
             { meta = Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
          ( Cast AnyT
           ( Var
            ( Meta
             { meta = AnyT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta = [ AnyT ] :-> AnyT, id = Id
     { name = "not", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "true", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con
       ( Data "runtime/malgo/Builtin.mlg.False" ) [], Con
       ( Data "runtime/malgo/Builtin.mlg.True" ) [] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT
      [ Con
       ( Data "runtime/malgo/Builtin.mlg.False" ) [], Con
       ( Data "runtime/malgo/Builtin.mlg.True" ) [] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "true", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Builtin.mlg.False" ) [], Con
         ( Data "runtime/malgo/Builtin.mlg.True" ) [] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.False", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.False" ) [], Con
           ( Data "runtime/malgo/Builtin.mlg.True" ) [] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.False" ) [] ) []
       ( CallDirect
        ( Meta
         { meta = [] :-> AnyT, id = Id
          { name = "True", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) [] ) ),
      ( Data "runtime/malgo/Builtin.mlg.True", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.False" ) [], Con
           ( Data "runtime/malgo/Builtin.mlg.True" ) [] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.True" ) [] ) []
       ( CallDirect
        ( Meta
         { meta = [] :-> AnyT, id = Id
          { name = "False", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) [] ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta = [ AnyT ] :-> SumT
     [ Con Tuple [] ], id = Id
     { name = "newline", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "_", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :-> SumT
    [ Con Tuple [] ], Let
    [ LocalDef
     { _variable = Meta
      { meta = SumT
       [ Con Tuple [] ], id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = SumT
      [ Con Tuple [] ], _object = Pack
      ( SumT [ Con Tuple [] ] )
      ( Con Tuple [] ) [] } ]
    ( Assign
     ( Meta
      { meta = SumT
       [ Con Tuple [] ], id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Call
      ( Var
       ( Meta
        { meta =
         [ SumT [ Con Tuple [] ] ] :-> SumT
         [ Con Tuple [] ], id = Id
         { name = "malgo_newline", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
      [ Var
       ( Meta
        { meta = SumT
         [ Con Tuple [] ], id = Id
         { name = "let", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
     ( Cast
      ( SumT [ Con Tuple [] ] )
      ( Var
       ( Meta
        { meta = SumT
         [ Con Tuple [] ], id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ),
   ( Meta
    { meta = [ StringT ] :->
     ( [ StringT ] :-> Int32T ), id = Id
     { name = "neString#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = StringT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ StringT ] :->
    ( [ StringT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ StringT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ StringT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = StringT, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ StringT, StringT ] :-> Int32T, id = Id
         { name = "neString#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = StringT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = StringT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ StringT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int64T ] :->
     ( [ Int64T ] :-> Int32T ), id = Id
     { name = "neInt64#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int64T ] :->
    ( [ Int64T ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int64T ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int64T ] :-> Int32T, _object = Fun
      [ Meta
       { meta = Int64T, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int64T, Int64T ] :-> Int32T, id = Id
         { name = "neInt64#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int64T ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int32T ] :->
     ( [ Int32T ] :-> Int32T ), id = Id
     { name = "neInt32#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int32T ] :->
    ( [ Int32T ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int32T ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int32T ] :-> Int32T, _object = Fun
      [ Meta
       { meta = Int32T, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int32T, Int32T ] :-> Int32T, id = Id
         { name = "neInt32#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int32T ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ FloatT ] :->
     ( [ FloatT ] :-> Int32T ), id = Id
     { name = "neFloat#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ FloatT ] :->
    ( [ FloatT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ FloatT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ FloatT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = FloatT, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ FloatT, FloatT ] :-> Int32T, id = Id
         { name = "neFloat#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ FloatT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ DoubleT ] :->
     ( [ DoubleT ] :-> Int32T ), id = Id
     { name = "neDouble#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ DoubleT ] :->
    ( [ DoubleT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ DoubleT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ DoubleT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = DoubleT, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ DoubleT, DoubleT ] :-> Int32T, id = Id
         { name = "neDouble#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ DoubleT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ CharT ] :->
     ( [ CharT ] :-> Int32T ), id = Id
     { name = "neChar#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = CharT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ CharT ] :->
    ( [ CharT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ CharT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ CharT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = CharT, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ CharT, CharT ] :-> Int32T, id = Id
         { name = "neChar#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = CharT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = CharT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ CharT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int64T ] :->
     ( [ Int64T ] :-> Int64T ), id = Id
     { name = "mulInt64#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int64T ] :->
    ( [ Int64T ] :-> Int64T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int64T ] :-> Int64T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int64T ] :-> Int64T, _object = Fun
      [ Meta
       { meta = Int64T, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int64T, Int64T ] :-> Int64T, id = Id
         { name = "mulInt64#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int64T ] :-> Int64T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "mulInt64", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int64#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "int64#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "mulInt64_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int64#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int64#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int32T ] :->
     ( [ Int32T ] :-> Int32T ), id = Id
     { name = "mulInt32#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int32T ] :->
    ( [ Int32T ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int32T ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int32T ] :-> Int32T, _object = Fun
      [ Meta
       { meta = Int32T, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int32T, Int32T ] :-> Int32T, id = Id
         { name = "mulInt32#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int32T ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "mulInt32", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int32#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "int32#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "mulInt32_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int32#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int32#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ FloatT ] :->
     ( [ FloatT ] :-> FloatT ), id = Id
     { name = "mulFloat#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ FloatT ] :->
    ( [ FloatT ] :-> FloatT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ FloatT ] :-> FloatT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ FloatT ] :-> FloatT, _object = Fun
      [ Meta
       { meta = FloatT, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ FloatT, FloatT ] :-> FloatT, id = Id
         { name = "mulFloat#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ FloatT ] :-> FloatT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "mulFloat", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "float#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "float#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "mulFloat_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "float#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "float#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ DoubleT ] :->
     ( [ DoubleT ] :-> DoubleT ), id = Id
     { name = "mulDouble#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ DoubleT ] :->
    ( [ DoubleT ] :-> DoubleT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ DoubleT ] :-> DoubleT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ DoubleT ] :-> DoubleT, _object = Fun
      [ Meta
       { meta = DoubleT, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ DoubleT, DoubleT ] :-> DoubleT, id = Id
         { name = "mulDouble#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ DoubleT ] :-> DoubleT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "mulDouble", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "double#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "double#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "mulDouble_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "double#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "double#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ StringT ] :->
     ( [ StringT ] :-> Int32T ), id = Id
     { name = "ltString#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = StringT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ StringT ] :->
    ( [ StringT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ StringT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ StringT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = StringT, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ StringT, StringT ] :-> Int32T, id = Id
         { name = "ltString#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = StringT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = StringT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ StringT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int64T ] :->
     ( [ Int64T ] :-> Int32T ), id = Id
     { name = "ltInt64#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int64T ] :->
    ( [ Int64T ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int64T ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int64T ] :-> Int32T, _object = Fun
      [ Meta
       { meta = Int64T, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int64T, Int64T ] :-> Int32T, id = Id
         { name = "ltInt64#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int64T ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int32T ] :->
     ( [ Int32T ] :-> Int32T ), id = Id
     { name = "ltInt32#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int32T ] :->
    ( [ Int32T ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int32T ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int32T ] :-> Int32T, _object = Fun
      [ Meta
       { meta = Int32T, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int32T, Int32T ] :-> Int32T, id = Id
         { name = "ltInt32#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int32T ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ FloatT ] :->
     ( [ FloatT ] :-> Int32T ), id = Id
     { name = "ltFloat#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ FloatT ] :->
    ( [ FloatT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ FloatT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ FloatT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = FloatT, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ FloatT, FloatT ] :-> Int32T, id = Id
         { name = "ltFloat#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ FloatT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ DoubleT ] :->
     ( [ DoubleT ] :-> Int32T ), id = Id
     { name = "ltDouble#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ DoubleT ] :->
    ( [ DoubleT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ DoubleT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ DoubleT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = DoubleT, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ DoubleT, DoubleT ] :-> Int32T, id = Id
         { name = "ltDouble#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ DoubleT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ CharT ] :->
     ( [ CharT ] :-> Int32T ), id = Id
     { name = "ltChar#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = CharT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ CharT ] :->
    ( [ CharT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ CharT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ CharT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = CharT, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ CharT, CharT ] :-> Int32T, id = Id
         { name = "ltChar#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = CharT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = CharT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ CharT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ StringT ] :-> Int64T, id = Id
     { name = "lengthString#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = StringT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ StringT ] :-> Int64T, Assign
    ( Meta
     { meta = Int64T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ StringT ] :-> Int64T, id = Id
        { name = "malgo_string_length", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = StringT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Cast Int64T
     ( Var
      ( Meta
       { meta = Int64T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :-> AnyT, id = Id
     { name = "lengthString", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "string#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "string#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.String#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.String#" ) [ StringT ] )
       [ Meta
        { meta = StringT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = Int64T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Call
         ( Var
          ( Meta
           { meta = [ StringT ] :-> Int64T, id = Id
            { name = "lengthString#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
         [ Var
          ( Meta
           { meta = StringT, id = Id
            { name = "p", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
        ( Assign
         ( Meta
          { meta = Int64T, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
         ( Cast Int64T
          ( Var
           ( Meta
            { meta = Int64T, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
         ( Assign
          ( Meta
           { meta = AnyT, id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
          ( Call
           ( Var
            ( Meta
             { meta = [ Int64T ] :-> AnyT, id = Id
              { name = "Int64#", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
           [ Var
            ( Meta
             { meta = Int64T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
          ( Cast AnyT
           ( Var
            ( Meta
             { meta = AnyT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta = [ StringT ] :->
     ( [ StringT ] :-> Int32T ), id = Id
     { name = "leString#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = StringT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ StringT ] :->
    ( [ StringT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ StringT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ StringT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = StringT, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ StringT, StringT ] :-> Int32T, id = Id
         { name = "leString#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = StringT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = StringT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ StringT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int64T ] :->
     ( [ Int64T ] :-> Int32T ), id = Id
     { name = "leInt64#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int64T ] :->
    ( [ Int64T ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int64T ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int64T ] :-> Int32T, _object = Fun
      [ Meta
       { meta = Int64T, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int64T, Int64T ] :-> Int32T, id = Id
         { name = "leInt64#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int64T ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int32T ] :->
     ( [ Int32T ] :-> Int32T ), id = Id
     { name = "leInt32#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int32T ] :->
    ( [ Int32T ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int32T ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int32T ] :-> Int32T, _object = Fun
      [ Meta
       { meta = Int32T, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int32T, Int32T ] :-> Int32T, id = Id
         { name = "leInt32#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int32T ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ FloatT ] :->
     ( [ FloatT ] :-> Int32T ), id = Id
     { name = "leFloat#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ FloatT ] :->
    ( [ FloatT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ FloatT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ FloatT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = FloatT, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ FloatT, FloatT ] :-> Int32T, id = Id
         { name = "leFloat#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ FloatT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ DoubleT ] :->
     ( [ DoubleT ] :-> Int32T ), id = Id
     { name = "leDouble#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ DoubleT ] :->
    ( [ DoubleT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ DoubleT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ DoubleT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = DoubleT, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ DoubleT, DoubleT ] :-> Int32T, id = Id
         { name = "leDouble#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ DoubleT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ CharT ] :->
     ( [ CharT ] :-> Int32T ), id = Id
     { name = "leChar#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = CharT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ CharT ] :->
    ( [ CharT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ CharT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ CharT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = CharT, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ CharT, CharT ] :-> Int32T, id = Id
         { name = "leChar#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = CharT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = CharT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ CharT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ CharT ] :-> Int32T, id = Id
     { name = "isUpper#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = CharT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ CharT ] :-> Int32T, Assign
    ( Meta
     { meta = Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ CharT ] :-> Int32T, id = Id
        { name = "malgo_is_upper", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = CharT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Cast Int32T
     ( Var
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int32T ] :-> AnyT, id = Id
     { name = "isTrue#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "unboxed", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int32T ] :-> AnyT, SwitchUnboxed
    ( Var
     ( Meta
      { meta = Int32T, id = Id
       { name = "unboxed", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
    [
     ( Int32 1, CallDirect
      ( Meta
       { meta = [] :-> AnyT, id = Id
        { name = "True", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) [] ) ]
    ( CallDirect
     ( Meta
      { meta = [] :-> AnyT, id = Id
       { name = "False", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) [] ) ),
   ( Meta
    { meta = [ AnyT ] :-> AnyT, id = Id
     { name = "isUpper", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "char#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "char#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Char#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] )
       [ Meta
        { meta = CharT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Call
         ( Var
          ( Meta
           { meta = [ CharT ] :-> Int32T, id = Id
            { name = "isUpper#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
         [ Var
          ( Meta
           { meta = CharT, id = Id
            { name = "p", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
        ( Assign
         ( Meta
          { meta = Int32T, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
         ( Cast Int32T
          ( Var
           ( Meta
            { meta = Int32T, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
         ( Assign
          ( Meta
           { meta = AnyT, id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
          ( Call
           ( Var
            ( Meta
             { meta = [ Int32T ] :-> AnyT, id = Id
              { name = "isTrue#", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
           [ Var
            ( Meta
             { meta = Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
          ( Cast AnyT
           ( Var
            ( Meta
             { meta = AnyT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "leChar", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "char#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "char#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "leChar_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "char#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "char#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "leDouble", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "double#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "double#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "leDouble_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "double#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "double#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "leFloat", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "float#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "float#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "leFloat_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "float#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "float#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "leInt32", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int32#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "int32#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "leInt32_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int32#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int32#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "leInt64", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int64#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "int64#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "leInt64_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int64#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int64#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "leString", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "string#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "string#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "leString_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "string#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "string#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "ltChar", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "char#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "char#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "ltChar_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "char#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "char#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "ltDouble", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "double#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "double#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "ltDouble_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "double#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "double#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "ltFloat", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "float#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "float#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "ltFloat_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "float#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "float#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "ltInt32", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int32#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "int32#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "ltInt32_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int32#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int32#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "ltInt64", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int64#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "int64#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "ltInt64_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int64#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int64#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "ltString", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "string#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "string#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "ltString_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "string#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "string#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "neChar", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "char#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "char#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "neChar_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "char#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "char#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "neDouble", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "double#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "double#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "neDouble_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "double#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "double#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "neFloat", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "float#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "float#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "neFloat_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "float#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "float#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "neInt32", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int32#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "int32#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "neInt32_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int32#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int32#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "neInt64", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int64#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "int64#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "neInt64_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int64#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int64#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "neString", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "string#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "string#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "neString_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "string#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "string#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ CharT ] :-> Int32T, id = Id
     { name = "isLower#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = CharT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ CharT ] :-> Int32T, Assign
    ( Meta
     { meta = Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ CharT ] :-> Int32T, id = Id
        { name = "malgo_is_lower", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = CharT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Cast Int32T
     ( Var
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :-> AnyT, id = Id
     { name = "isLower", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "char#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "char#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Char#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] )
       [ Meta
        { meta = CharT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Call
         ( Var
          ( Meta
           { meta = [ CharT ] :-> Int32T, id = Id
            { name = "isLower#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
         [ Var
          ( Meta
           { meta = CharT, id = Id
            { name = "p", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
        ( Assign
         ( Meta
          { meta = Int32T, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
         ( Cast Int32T
          ( Var
           ( Meta
            { meta = Int32T, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
         ( Assign
          ( Meta
           { meta = AnyT, id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
          ( Call
           ( Var
            ( Meta
             { meta = [ Int32T ] :-> AnyT, id = Id
              { name = "isTrue#", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
           [ Var
            ( Meta
             { meta = Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
          ( Cast AnyT
           ( Var
            ( Meta
             { meta = AnyT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta = [ CharT ] :-> Int32T, id = Id
     { name = "isDigit#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = CharT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ CharT ] :-> Int32T, Assign
    ( Meta
     { meta = Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ CharT ] :-> Int32T, id = Id
        { name = "malgo_is_digit", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = CharT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Cast Int32T
     ( Var
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :-> AnyT, id = Id
     { name = "isDigit", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "char#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "char#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Char#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] )
       [ Meta
        { meta = CharT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Call
         ( Var
          ( Meta
           { meta = [ CharT ] :-> Int32T, id = Id
            { name = "isDigit#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
         [ Var
          ( Meta
           { meta = CharT, id = Id
            { name = "p", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
        ( Assign
         ( Meta
          { meta = Int32T, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
         ( Cast Int32T
          ( Var
           ( Meta
            { meta = Int32T, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
         ( Assign
          ( Meta
           { meta = AnyT, id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
          ( Call
           ( Var
            ( Meta
             { meta = [ Int32T ] :-> AnyT, id = Id
              { name = "isTrue#", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
           [ Var
            ( Meta
             { meta = Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
          ( Cast AnyT
           ( Var
            ( Meta
             { meta = AnyT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta = [ CharT ] :-> Int32T, id = Id
     { name = "isAlphanum#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = CharT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ CharT ] :-> Int32T, Assign
    ( Meta
     { meta = Int32T, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ CharT ] :-> Int32T, id = Id
        { name = "malgo_is_alphanum", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = CharT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Cast Int32T
     ( Var
      ( Meta
       { meta = Int32T, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :-> AnyT, id = Id
     { name = "isAlphanum", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "char#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "char#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Char#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] )
       [ Meta
        { meta = CharT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = Int32T, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
        ( Call
         ( Var
          ( Meta
           { meta = [ CharT ] :-> Int32T, id = Id
            { name = "isAlphanum#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
         [ Var
          ( Meta
           { meta = CharT, id = Id
            { name = "p", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
        ( Assign
         ( Meta
          { meta = Int32T, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
         ( Cast Int32T
          ( Var
           ( Meta
            { meta = Int32T, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
         ( Assign
          ( Meta
           { meta = AnyT, id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
          ( Call
           ( Var
            ( Meta
             { meta = [ Int32T ] :-> AnyT, id = Id
              { name = "isTrue#", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
           [ Var
            ( Meta
             { meta = Int32T, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
          ( Cast AnyT
           ( Var
            ( Meta
             { meta = AnyT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta = [ Int64T ] :-> AnyT, id = Id
     { name = "int64#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int64T ] :-> AnyT, Assign
    ( Meta
     { meta = AnyT, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ Int64T ] :-> AnyT, id = Id
        { name = "Int64#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = Int64T, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Cast AnyT
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int32T ] :-> AnyT, id = Id
     { name = "int32#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int32T ] :-> AnyT, Assign
    ( Meta
     { meta = AnyT, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ Int32T ] :-> AnyT, id = Id
        { name = "Int32#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = Int32T, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Cast AnyT
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ StringT ] :->
     ( [ StringT ] :-> Int32T ), id = Id
     { name = "gtString#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = StringT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ StringT ] :->
    ( [ StringT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ StringT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ StringT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = StringT, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ StringT, StringT ] :-> Int32T, id = Id
         { name = "gtString#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = StringT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = StringT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ StringT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "gtString", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "string#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "string#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "gtString_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "string#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "string#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int64T ] :->
     ( [ Int64T ] :-> Int32T ), id = Id
     { name = "gtInt64#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int64T ] :->
    ( [ Int64T ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int64T ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int64T ] :-> Int32T, _object = Fun
      [ Meta
       { meta = Int64T, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int64T, Int64T ] :-> Int32T, id = Id
         { name = "gtInt64#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int64T ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "gtInt64", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int64#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "int64#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "gtInt64_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int64#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int64#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int32T ] :->
     ( [ Int32T ] :-> Int32T ), id = Id
     { name = "gtInt32#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int32T ] :->
    ( [ Int32T ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int32T ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int32T ] :-> Int32T, _object = Fun
      [ Meta
       { meta = Int32T, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int32T, Int32T ] :-> Int32T, id = Id
         { name = "gtInt32#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int32T ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "gtInt32", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int32#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "int32#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "gtInt32_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int32#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int32#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ FloatT ] :->
     ( [ FloatT ] :-> Int32T ), id = Id
     { name = "gtFloat#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ FloatT ] :->
    ( [ FloatT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ FloatT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ FloatT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = FloatT, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ FloatT, FloatT ] :-> Int32T, id = Id
         { name = "gtFloat#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ FloatT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "gtFloat", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "float#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "float#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "gtFloat_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "float#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "float#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ DoubleT ] :->
     ( [ DoubleT ] :-> Int32T ), id = Id
     { name = "gtDouble#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ DoubleT ] :->
    ( [ DoubleT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ DoubleT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ DoubleT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = DoubleT, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ DoubleT, DoubleT ] :-> Int32T, id = Id
         { name = "gtDouble#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ DoubleT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "gtDouble", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "double#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "double#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "gtDouble_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "double#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "double#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ CharT ] :->
     ( [ CharT ] :-> Int32T ), id = Id
     { name = "gtChar#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = CharT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ CharT ] :->
    ( [ CharT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ CharT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ CharT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = CharT, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ CharT, CharT ] :-> Int32T, id = Id
         { name = "gtChar#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = CharT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = CharT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ CharT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "gtChar", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "char#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "char#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "gtChar_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "char#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "char#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :-> AnyT, id = Id
     { name = "getContents", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "_", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :-> AnyT, Let
    [ LocalDef
     { _variable = Meta
      { meta = SumT
       [ Con Tuple [] ], id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = SumT
      [ Con Tuple [] ], _object = Pack
      ( SumT [ Con Tuple [] ] )
      ( Con Tuple [] ) [] } ]
    ( Assign
     ( Meta
      { meta = StringT, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Call
      ( Var
       ( Meta
        { meta =
         [ SumT [ Con Tuple [] ] ] :-> StringT, id = Id
         { name = "malgo_get_contents", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
      [ Var
       ( Meta
        { meta = SumT
         [ Con Tuple [] ], id = Id
         { name = "let", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
     ( Assign
      ( Meta
       { meta = StringT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Cast StringT
       ( Var
        ( Meta
         { meta = StringT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
      ( Assign
       ( Meta
        { meta = AnyT, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       ( Call
        ( Var
         ( Meta
          { meta = [ StringT ] :-> AnyT, id = Id
           { name = "String#", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
        [ Var
         ( Meta
          { meta = StringT, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
       ( Cast AnyT
        ( Var
         ( Meta
          { meta = AnyT, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :-> AnyT, id = Id
     { name = "getChar", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "_", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :-> AnyT, Let
    [ LocalDef
     { _variable = Meta
      { meta = SumT
       [ Con Tuple [] ], id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = SumT
      [ Con Tuple [] ], _object = Pack
      ( SumT [ Con Tuple [] ] )
      ( Con Tuple [] ) [] } ]
    ( Assign
     ( Meta
      { meta = CharT, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Call
      ( Var
       ( Meta
        { meta =
         [ SumT [ Con Tuple [] ] ] :-> CharT, id = Id
         { name = "malgo_get_char", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
      [ Var
       ( Meta
        { meta = SumT
         [ Con Tuple [] ], id = Id
         { name = "let", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
     ( Assign
      ( Meta
       { meta = CharT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
      ( Cast CharT
       ( Var
        ( Meta
         { meta = CharT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) )
      ( Assign
       ( Meta
        { meta = AnyT, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       ( Call
        ( Var
         ( Meta
          { meta = [ CharT ] :-> AnyT, id = Id
           { name = "Char#", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
        [ Var
         ( Meta
          { meta = CharT, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
       ( Cast AnyT
        ( Var
         ( Meta
          { meta = AnyT, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ) ) ),
   ( Meta
    { meta = [ StringT ] :->
     ( [ StringT ] :-> Int32T ), id = Id
     { name = "geString#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = StringT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ StringT ] :->
    ( [ StringT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ StringT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ StringT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = StringT, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ StringT, StringT ] :-> Int32T, id = Id
         { name = "geString#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = StringT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = StringT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ StringT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "geString", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "string#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "string#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "geString_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "string#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "string#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int64T ] :->
     ( [ Int64T ] :-> Int32T ), id = Id
     { name = "geInt64#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int64T ] :->
    ( [ Int64T ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int64T ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int64T ] :-> Int32T, _object = Fun
      [ Meta
       { meta = Int64T, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int64T, Int64T ] :-> Int32T, id = Id
         { name = "geInt64#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int64T ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "geInt64", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int64#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "int64#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "geInt64_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int64#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int64#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int32T ] :->
     ( [ Int32T ] :-> Int32T ), id = Id
     { name = "geInt32#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int32T ] :->
    ( [ Int32T ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int32T ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int32T ] :-> Int32T, _object = Fun
      [ Meta
       { meta = Int32T, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int32T, Int32T ] :-> Int32T, id = Id
         { name = "geInt32#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int32T ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "geInt32", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int32#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "int32#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "geInt32_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int32#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int32#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ FloatT ] :->
     ( [ FloatT ] :-> Int32T ), id = Id
     { name = "geFloat#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ FloatT ] :->
    ( [ FloatT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ FloatT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ FloatT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = FloatT, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ FloatT, FloatT ] :-> Int32T, id = Id
         { name = "geFloat#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ FloatT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "geFloat", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "float#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "float#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "geFloat_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "float#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "float#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ DoubleT ] :->
     ( [ DoubleT ] :-> Int32T ), id = Id
     { name = "geDouble#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ DoubleT ] :->
    ( [ DoubleT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ DoubleT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ DoubleT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = DoubleT, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ DoubleT, DoubleT ] :-> Int32T, id = Id
         { name = "geDouble#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ DoubleT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "geDouble", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "double#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "double#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "geDouble_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "double#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "double#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ CharT ] :->
     ( [ CharT ] :-> Int32T ), id = Id
     { name = "geChar#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = CharT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ CharT ] :->
    ( [ CharT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ CharT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ CharT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = CharT, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ CharT, CharT ] :-> Int32T, id = Id
         { name = "geChar#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = CharT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = CharT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ CharT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "geChar", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "char#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "char#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "geChar_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "char#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "char#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :-> SumT
     [ Con Tuple [] ], id = Id
     { name = "flush", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "_", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :-> SumT
    [ Con Tuple [] ], Let
    [ LocalDef
     { _variable = Meta
      { meta = SumT
       [ Con Tuple [] ], id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = SumT
      [ Con Tuple [] ], _object = Pack
      ( SumT [ Con Tuple [] ] )
      ( Con Tuple [] ) [] } ]
    ( Assign
     ( Meta
      { meta = SumT
       [ Con Tuple [] ], id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Call
      ( Var
       ( Meta
        { meta =
         [ SumT [ Con Tuple [] ] ] :-> SumT
         [ Con Tuple [] ], id = Id
         { name = "malgo_flush", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
      [ Var
       ( Meta
        { meta = SumT
         [ Con Tuple [] ], id = Id
         { name = "let", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
     ( Cast
      ( SumT [ Con Tuple [] ] )
      ( Var
       ( Meta
        { meta = SumT
         [ Con Tuple [] ], id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ),
   ( Meta
    { meta = [ FloatT ] :-> AnyT, id = Id
     { name = "float#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ FloatT ] :-> AnyT, Assign
    ( Meta
     { meta = AnyT, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ FloatT ] :-> AnyT, id = Id
        { name = "Float#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = FloatT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Cast AnyT
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta =
     [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
     { name = "exitFailure", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = SumT
      [ Con Tuple [] ], id = Id
      { name = "_", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ],
    [ SumT [ Con Tuple [] ] ] :-> AnyT, Let
    [ LocalDef
     { _variable = Meta
      { meta = SumT
       [ Con Tuple [] ], id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = SumT
      [ Con Tuple [] ], _object = Pack
      ( SumT [ Con Tuple [] ] )
      ( Con Tuple [] ) [] } ]
    ( Assign
     ( Meta
      { meta = AnyT, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
     ( Call
      ( Var
       ( Meta
        { meta =
         [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
         { name = "malgo_exit_failure", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
      [ Var
       ( Meta
        { meta = SumT
         [ Con Tuple [] ], id = Id
         { name = "let", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
     ( Cast AnyT
      ( Var
       ( Meta
        { meta = AnyT, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ) ),
   ( Meta
    { meta = [ StringT ] :->
     ( [ StringT ] :-> Int32T ), id = Id
     { name = "eqString#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = StringT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ StringT ] :->
    ( [ StringT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ StringT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ StringT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = StringT, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ StringT, StringT ] :-> Int32T, id = Id
         { name = "eqString#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = StringT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = StringT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ StringT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "eqString", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "string#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "string#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "eqString_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "string#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "string#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int64T ] :->
     ( [ Int64T ] :-> Int32T ), id = Id
     { name = "eqInt64#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int64T ] :->
    ( [ Int64T ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int64T ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int64T ] :-> Int32T, _object = Fun
      [ Meta
       { meta = Int64T, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int64T, Int64T ] :-> Int32T, id = Id
         { name = "eqInt64#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int64T ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "eqInt64", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int64#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "int64#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "eqInt64_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int64#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int64#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int32T ] :->
     ( [ Int32T ] :-> Int32T ), id = Id
     { name = "eqInt32#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int32T ] :->
    ( [ Int32T ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int32T ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int32T ] :-> Int32T, _object = Fun
      [ Meta
       { meta = Int32T, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int32T, Int32T ] :-> Int32T, id = Id
         { name = "eqInt32#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int32T ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "eqInt32", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int32#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "int32#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "eqInt32_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int32#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int32#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ FloatT ] :->
     ( [ FloatT ] :-> Int32T ), id = Id
     { name = "eqFloat#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ FloatT ] :->
    ( [ FloatT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ FloatT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ FloatT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = FloatT, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ FloatT, FloatT ] :-> Int32T, id = Id
         { name = "eqFloat#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ FloatT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "eqFloat", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "float#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "float#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "eqFloat_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "float#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "float#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ DoubleT ] :->
     ( [ DoubleT ] :-> Int32T ), id = Id
     { name = "eqDouble#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ DoubleT ] :->
    ( [ DoubleT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ DoubleT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ DoubleT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = DoubleT, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ DoubleT, DoubleT ] :-> Int32T, id = Id
         { name = "eqDouble#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ DoubleT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "eqDouble", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "double#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "double#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "eqDouble_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "double#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "double#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ CharT ] :->
     ( [ CharT ] :-> Int32T ), id = Id
     { name = "eqChar#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = CharT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ CharT ] :->
    ( [ CharT ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ CharT ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ CharT ] :-> Int32T, _object = Fun
      [ Meta
       { meta = CharT, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ CharT, CharT ] :-> Int32T, id = Id
         { name = "eqChar#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = CharT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = CharT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ CharT ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "eqChar", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "char#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "char#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "eqChar_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "char#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "char#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ DoubleT ] :-> AnyT, id = Id
     { name = "double#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ DoubleT ] :-> AnyT, Assign
    ( Meta
     { meta = AnyT, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ DoubleT ] :-> AnyT, id = Id
        { name = "Double#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = DoubleT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Cast AnyT
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int64T ] :->
     ( [ Int64T ] :-> Int64T ), id = Id
     { name = "divInt64#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int64T ] :->
    ( [ Int64T ] :-> Int64T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int64T ] :-> Int64T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int64T ] :-> Int64T, _object = Fun
      [ Meta
       { meta = Int64T, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int64T, Int64T ] :-> Int64T, id = Id
         { name = "divInt64#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int64T ] :-> Int64T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "divInt64", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int64#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "int64#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "divInt64_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int64#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int64#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int32T ] :->
     ( [ Int32T ] :-> Int32T ), id = Id
     { name = "divInt32#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int32T ] :->
    ( [ Int32T ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int32T ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int32T ] :-> Int32T, _object = Fun
      [ Meta
       { meta = Int32T, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int32T, Int32T ] :-> Int32T, id = Id
         { name = "divInt32#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int32T ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "divInt32", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int32#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "int32#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "divInt32_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int32#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int32#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ FloatT ] :->
     ( [ FloatT ] :-> FloatT ), id = Id
     { name = "divFloat#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ FloatT ] :->
    ( [ FloatT ] :-> FloatT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ FloatT ] :-> FloatT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ FloatT ] :-> FloatT, _object = Fun
      [ Meta
       { meta = FloatT, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ FloatT, FloatT ] :-> FloatT, id = Id
         { name = "divFloat#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ FloatT ] :-> FloatT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "divFloat", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "float#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "float#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "divFloat_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "float#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "float#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ DoubleT ] :->
     ( [ DoubleT ] :-> DoubleT ), id = Id
     { name = "divDouble#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ DoubleT ] :->
    ( [ DoubleT ] :-> DoubleT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ DoubleT ] :-> DoubleT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ DoubleT ] :-> DoubleT, _object = Fun
      [ Meta
       { meta = DoubleT, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ DoubleT, DoubleT ] :-> DoubleT, id = Id
         { name = "divDouble#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ DoubleT ] :-> DoubleT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "divDouble", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "double#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "double#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "divDouble_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "double#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "double#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ CharT ] :->
     ( [ StringT ] :-> StringT ), id = Id
     { name = "consString#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = CharT, id = Id
      { name = "c", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ CharT ] :->
    ( [ StringT ] :-> StringT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ StringT ] :-> StringT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ StringT ] :-> StringT, _object = Fun
      [ Meta
       { meta = StringT, id = Id
        { name = "cs", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ CharT, StringT ] :-> StringT, id = Id
         { name = "consString#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = CharT, id = Id
          { name = "c", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = StringT, id = Id
          { name = "cs", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ StringT ] :-> StringT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "consString", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "char#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "string#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "consString_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "char#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "string#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ CharT ] :-> AnyT, id = Id
     { name = "char#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = CharT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ CharT ] :-> AnyT, Assign
    ( Meta
     { meta = AnyT, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ CharT ] :-> AnyT, id = Id
        { name = "Char#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = CharT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] )
    ( Cast AnyT
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int64T ] :->
     ( [ StringT ] :-> CharT ), id = Id
     { name = "atString#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "i", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int64T ] :->
    ( [ StringT ] :-> CharT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ StringT ] :-> CharT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ StringT ] :-> CharT, _object = Fun
      [ Meta
       { meta = StringT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int64T, StringT ] :-> CharT, id = Id
         { name = "atString#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "i", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = StringT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ StringT ] :-> CharT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "atString", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int64#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "string#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "atString_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int64#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "string#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ StringT ] :->
     ( [ StringT ] :-> StringT ), id = Id
     { name = "appendString#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = StringT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ StringT ] :->
    ( [ StringT ] :-> StringT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ StringT ] :-> StringT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ StringT ] :-> StringT, _object = Fun
      [ Meta
       { meta = StringT, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ StringT, StringT ] :-> StringT, id = Id
         { name = "appendString#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = StringT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = StringT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ StringT ] :-> StringT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "appendString", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "string#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "string#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "appendString_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "string#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "string#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int64T ] :->
     ( [ Int64T ] :-> Int64T ), id = Id
     { name = "addInt64#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int64T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int64T ] :->
    ( [ Int64T ] :-> Int64T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int64T ] :-> Int64T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int64T ] :-> Int64T, _object = Fun
      [ Meta
       { meta = Int64T, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int64T, Int64T ] :-> Int64T, id = Id
         { name = "addInt64#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int64T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int64T ] :-> Int64T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "addInt64", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int64#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "int64#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "addInt64_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int64#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int64#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ Int32T ] :->
     ( [ Int32T ] :-> Int32T ), id = Id
     { name = "addInt32#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = Int32T, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ Int32T ] :->
    ( [ Int32T ] :-> Int32T ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ Int32T ] :-> Int32T, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ Int32T ] :-> Int32T, _object = Fun
      [ Meta
       { meta = Int32T, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ Int32T, Int32T ] :-> Int32T, id = Id
         { name = "addInt32#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = Int32T, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ Int32T ] :-> Int32T, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "addInt32", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "int32#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "int32#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "addInt32_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int32#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "int32#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ FloatT ] :->
     ( [ FloatT ] :-> FloatT ), id = Id
     { name = "addFloat#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = FloatT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ FloatT ] :->
    ( [ FloatT ] :-> FloatT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ FloatT ] :-> FloatT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ FloatT ] :-> FloatT, _object = Fun
      [ Meta
       { meta = FloatT, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ FloatT, FloatT ] :-> FloatT, id = Id
         { name = "addFloat#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = FloatT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ FloatT ] :-> FloatT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "addFloat", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "float#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "float#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "addFloat_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "float#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "float#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ DoubleT ] :->
     ( [ DoubleT ] :-> DoubleT ), id = Id
     { name = "addDouble#", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = DoubleT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ DoubleT ] :->
    ( [ DoubleT ] :-> DoubleT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ DoubleT ] :-> DoubleT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ DoubleT ] :-> DoubleT, _object = Fun
      [ Meta
       { meta = DoubleT, id = Id
        { name = "y", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ DoubleT, DoubleT ] :-> DoubleT, id = Id
         { name = "addDouble#_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = DoubleT, id = Id
          { name = "y", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ DoubleT ] :-> DoubleT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "addDouble", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "double#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "double#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "addDouble_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "double#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "double#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta =
     [ [ AnyT ] :-> AnyT, [ AnyT ] :-> AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "._curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } },
    [ Meta
     { meta = [ AnyT ] :-> AnyT, id = Id
      { name = "f", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, Meta
     { meta = [ AnyT ] :-> AnyT, id = Id
      { name = "g", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ],
    [ [ AnyT ] :-> AnyT, [ AnyT ] :-> AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "fun", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
      ( Assign
       ( Meta
        { meta = AnyT, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
       ( Call
        ( Var
         ( Meta
          { meta = [ AnyT ] :-> AnyT, id = Id
           { name = "g", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
        [ Var
         ( Meta
          { meta = AnyT, id = Id
           { name = "x", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
       ( Assign
        ( Meta
         { meta = AnyT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
        ( Cast AnyT
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
        ( Assign
         ( Meta
          { meta = AnyT, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
         ( Call
          ( Var
           ( Meta
            { meta = [ AnyT ] :-> AnyT, id = Id
             { name = "f", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
          [ Var
           ( Meta
            { meta = AnyT, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
         ( Cast AnyT
          ( Var
           ( Meta
            { meta = AnyT, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ) ) ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "fun", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta =
     [ [ AnyT ] :-> AnyT, AnyT ] :-> AnyT, id = Id
     { name = "<|_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } },
    [ Meta
     { meta = [ AnyT ] :-> AnyT, id = Id
      { name = "f", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ],
    [ [ AnyT ] :-> AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = AnyT, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "f", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
     [ Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
    ( Cast AnyT
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta =
     [ [ AnyT ] :-> AnyT, AnyT ] :-> AnyT, id = Id
     { name = "takeWhileString_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } },
    [ Meta
     { meta = [ AnyT ] :-> AnyT, id = Id
      { name = "pred", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "str", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ],
    [ [ AnyT ] :-> AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = AnyT, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "headString", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "str", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = AnyT, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
     ( Cast AnyT
      ( Var
       ( Meta
        { meta = AnyT, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta =
        [ [ AnyT ] :-> AnyT ] :-> AnyT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ AnyT ] :->
          ( [ [ AnyT ] :-> AnyT ] :-> AnyT ), id = Id
          { name = "case", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } } ) )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
      ( Assign
       ( Meta
        { meta =
         [ [ AnyT ] :-> AnyT ] :-> AnyT, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
       ( Cast
        ( [ [ AnyT ] :-> AnyT ] :-> AnyT )
        ( Var
         ( Meta
          { meta =
           [ [ AnyT ] :-> AnyT ] :-> AnyT, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
       ( Let
        [ LocalDef
         { _variable = Meta
          { meta = [ AnyT ] :-> AnyT, id = Id
           { name = "fun", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
          [ Meta
           { meta = AnyT, id = Id
            { name = "nothing", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
          ( Assign
           ( Meta
            { meta = SumT
             [ Con
              ( Data "runtime/malgo/Prelude.mlg.Nothing" ) [], Con
              ( Data "runtime/malgo/Prelude.mlg.Just" ) [ AnyT ] ], id = Id
             { name = "scrutinee", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
           ( Cast
            ( SumT
             [ Con
              ( Data "runtime/malgo/Prelude.mlg.Nothing" ) [], Con
              ( Data "runtime/malgo/Prelude.mlg.Just" ) [ AnyT ] ] )
            ( Var
             ( Meta
              { meta = AnyT, id = Id
               { name = "nothing", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
           ( Switch
            ( Var
             ( Meta
              { meta = SumT
               [ Con
                ( Data "runtime/malgo/Prelude.mlg.Nothing" ) [], Con
                ( Data "runtime/malgo/Prelude.mlg.Just" ) [ AnyT ] ], id = Id
               { name = "scrutinee", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
            [
             ( Data "runtime/malgo/Prelude.mlg.Nothing", Destruct
              ( Var
               ( Meta
                { meta = SumT
                 [ Con
                  ( Data "runtime/malgo/Prelude.mlg.Nothing" ) [], Con
                  ( Data "runtime/malgo/Prelude.mlg.Just" ) [ AnyT ] ], id = Id
                 { name = "scrutinee", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
              ( Con ( Data "runtime/malgo/Prelude.mlg.Nothing" ) [] ) []
              ( Atom
               ( Var
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "str", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ),
             ( Data "runtime/malgo/Prelude.mlg.Just", Destruct
              ( Var
               ( Meta
                { meta = SumT
                 [ Con
                  ( Data "runtime/malgo/Prelude.mlg.Nothing" ) [], Con
                  ( Data "runtime/malgo/Prelude.mlg.Just" ) [ AnyT ] ], id = Id
                 { name = "scrutinee", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
              ( Con ( Data "runtime/malgo/Prelude.mlg.Just" ) [ AnyT ] )
              [ Meta
               { meta = AnyT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
              ( Assign
               ( Meta
                { meta = AnyT, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
               ( Call
                ( Var
                 ( Meta
                  { meta = [ AnyT ] :-> AnyT, id = Id
                   { name = "pred", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
                [ Var
                 ( Meta
                  { meta = AnyT, id = Id
                   { name = "p", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
                ( Assign
                 ( Meta
                  { meta =
                   [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :->
                   ( [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ), id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                 ( Call
                  ( Var
                   ( Meta
                    { meta = [ AnyT ] :->
                     (
                      [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :->
                      (
                       [
                        [ SumT
                         [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ) ), id = Id
                     { name = "if", moduleName = Artifact
                      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } } ) )
                  [ Var
                   ( Meta
                    { meta = AnyT, id = Id
                     { name = "d", moduleName = Artifact
                      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
                 ( Assign
                  ( Meta
                   { meta =
                    [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :->
                    (
                     [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ), id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                  ( Cast
                   (
                    [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :->
                    ( [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ) )
                   ( Var
                    ( Meta
                     { meta =
                      [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :->
                      (
                       [
                        [ SumT
                         [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ), id = Id
                      { name = "d", moduleName = Artifact
                       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
                  ( Let
                   [ LocalDef
                    { _variable = Meta
                     { meta =
                      [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
                      { name = "fun", moduleName = Artifact
                       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, typ =
                     [ SumT [ Con Tuple [] ] ] :-> AnyT, _object = Fun
                     [ Meta
                      { meta = SumT
                       [ Con Tuple [] ], id = Id
                       { name = "$_", moduleName = Artifact
                        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
                     ( Assign
                      ( Meta
                       { meta = [ AnyT ] :-> AnyT, id = Id
                        { name = "d", moduleName = Artifact
                         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                      ( Call
                       ( Var
                        ( Meta
                         { meta = [ AnyT ] :->
                          ( [ AnyT ] :-> AnyT ), id = Id
                          { name = "consString", moduleName = Artifact
                           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                       [ Var
                        ( Meta
                         { meta = AnyT, id = Id
                          { name = "p", moduleName = Artifact
                           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
                      ( Assign
                       ( Meta
                        { meta = [ AnyT ] :-> AnyT, id = Id
                         { name = "d", moduleName = Artifact
                          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                       ( Cast
                        ( [ AnyT ] :-> AnyT )
                        ( Var
                         ( Meta
                          { meta = [ AnyT ] :-> AnyT, id = Id
                           { name = "d", moduleName = Artifact
                            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
                       ( Assign
                        ( Meta
                         { meta = [ AnyT ] :-> AnyT, id = Id
                          { name = "d", moduleName = Artifact
                           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                        ( Call
                         ( Var
                          ( Meta
                           { meta =
                            [ [ AnyT ] :-> AnyT ] :->
                            ( [ AnyT ] :-> AnyT ), id = Id
                            { name = "takeWhileString", moduleName = Artifact
                             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } } ) )
                         [ Var
                          ( Meta
                           { meta = [ AnyT ] :-> AnyT, id = Id
                            { name = "pred", moduleName = Artifact
                             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
                        ( Assign
                         ( Meta
                          { meta = [ AnyT ] :-> AnyT, id = Id
                           { name = "d", moduleName = Artifact
                            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                         ( Cast
                          ( [ AnyT ] :-> AnyT )
                          ( Var
                           ( Meta
                            { meta = [ AnyT ] :-> AnyT, id = Id
                             { name = "d", moduleName = Artifact
                              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
                         ( Assign
                          ( Meta
                           { meta = AnyT, id = Id
                            { name = "d", moduleName = Artifact
                             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                          ( Call
                           ( Var
                            ( Meta
                             { meta = [ AnyT ] :-> AnyT, id = Id
                              { name = "tailString", moduleName = Artifact
                               ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } } ) )
                           [ Var
                            ( Meta
                             { meta = AnyT, id = Id
                              { name = "str", moduleName = Artifact
                               ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
                          ( Assign
                           ( Meta
                            { meta = AnyT, id = Id
                             { name = "d", moduleName = Artifact
                              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                           ( Cast AnyT
                            ( Var
                             ( Meta
                              { meta = AnyT, id = Id
                               { name = "d", moduleName = Artifact
                                ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
                           ( Assign
                            ( Meta
                             { meta = AnyT, id = Id
                              { name = "d", moduleName = Artifact
                               ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                            ( Call
                             ( Var
                              ( Meta
                               { meta = [ AnyT ] :-> AnyT, id = Id
                                { name = "d", moduleName = Artifact
                                 ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
                             [ Var
                              ( Meta
                               { meta = AnyT, id = Id
                                { name = "d", moduleName = Artifact
                                 ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
                            ( Assign
                             ( Meta
                              { meta = AnyT, id = Id
                               { name = "d", moduleName = Artifact
                                ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                             ( Cast AnyT
                              ( Var
                               ( Meta
                                { meta = AnyT, id = Id
                                 { name = "d", moduleName = Artifact
                                  ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
                             ( Assign
                              ( Meta
                               { meta = AnyT, id = Id
                                { name = "d", moduleName = Artifact
                                 ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                              ( Call
                               ( Var
                                ( Meta
                                 { meta = [ AnyT ] :-> AnyT, id = Id
                                  { name = "d", moduleName = Artifact
                                   ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
                               [ Var
                                ( Meta
                                 { meta = AnyT, id = Id
                                  { name = "d", moduleName = Artifact
                                   ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
                              ( Cast AnyT
                               ( Var
                                ( Meta
                                 { meta = AnyT, id = Id
                                  { name = "d", moduleName = Artifact
                                   ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ) ) ) } ]
                   ( Assign
                    ( Meta
                     { meta =
                      [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT, id = Id
                      { name = "d", moduleName = Artifact
                       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                    ( Call
                     ( Var
                      ( Meta
                       { meta =
                        [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :->
                        (
                         [
                          [ SumT
                           [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ), id = Id
                        { name = "d", moduleName = Artifact
                         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
                     [ Var
                      ( Meta
                       { meta =
                        [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
                        { name = "fun", moduleName = Artifact
                         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
                    ( Assign
                     ( Meta
                      { meta =
                       [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT, id = Id
                       { name = "d", moduleName = Artifact
                        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                     ( Cast
                      ( [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT )
                      ( Var
                       ( Meta
                        { meta =
                         [
                          [ SumT
                           [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT, id = Id
                         { name = "d", moduleName = Artifact
                          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
                     ( Let
                      [ LocalDef
                       { _variable = Meta
                        { meta =
                         [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
                         { name = "fun", moduleName = Artifact
                          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, typ =
                        [ SumT [ Con Tuple [] ] ] :-> AnyT, _object = Fun
                        [ Meta
                         { meta = SumT
                          [ Con Tuple [] ], id = Id
                          { name = "$_", moduleName = Artifact
                           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
                        ( Assign
                         ( Meta
                          { meta = AnyT, id = Id
                           { name = "d", moduleName = Artifact
                            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                         ( Call
                          ( Var
                           ( Meta
                            { meta = [ StringT ] :-> AnyT, id = Id
                             { name = "String#", moduleName = Artifact
                              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                          [ Unboxed ( String "" ) ] )
                         ( Cast AnyT
                          ( Var
                           ( Meta
                            { meta = AnyT, id = Id
                             { name = "d", moduleName = Artifact
                              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ) } ]
                      ( Assign
                       ( Meta
                        { meta = AnyT, id = Id
                         { name = "d", moduleName = Artifact
                          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                       ( Call
                        ( Var
                         ( Meta
                          { meta =
                           [
                            [ SumT
                             [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT, id = Id
                           { name = "d", moduleName = Artifact
                            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
                        [ Var
                         ( Meta
                          { meta =
                           [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
                           { name = "fun", moduleName = Artifact
                            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
                       ( Cast AnyT
                        ( Var
                         ( Meta
                          { meta = AnyT, id = Id
                           { name = "d", moduleName = Artifact
                            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) } ]
        ( Assign
         ( Meta
          { meta = AnyT, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
         ( Call
          ( Var
           ( Meta
            { meta =
             [ [ AnyT ] :-> AnyT ] :-> AnyT, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
          [ Var
           ( Meta
            { meta = [ AnyT ] :-> AnyT, id = Id
             { name = "fun", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
         ( Cast AnyT
          ( Var
           ( Meta
            { meta = AnyT, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ),
   ( Meta
    { meta =
     [ [ AnyT ] :-> AnyT, AnyT ] :-> AnyT, id = Id
     { name = "dropWhileString_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } },
    [ Meta
     { meta = [ AnyT ] :-> AnyT, id = Id
      { name = "pred", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "str", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ],
    [ [ AnyT ] :-> AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = AnyT, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "headString", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "str", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = AnyT, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
     ( Cast AnyT
      ( Var
       ( Meta
        { meta = AnyT, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta =
        [ [ AnyT ] :-> AnyT ] :-> AnyT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ AnyT ] :->
          ( [ [ AnyT ] :-> AnyT ] :-> AnyT ), id = Id
          { name = "case", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } } ) )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
      ( Assign
       ( Meta
        { meta =
         [ [ AnyT ] :-> AnyT ] :-> AnyT, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
       ( Cast
        ( [ [ AnyT ] :-> AnyT ] :-> AnyT )
        ( Var
         ( Meta
          { meta =
           [ [ AnyT ] :-> AnyT ] :-> AnyT, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
       ( Let
        [ LocalDef
         { _variable = Meta
          { meta = [ AnyT ] :-> AnyT, id = Id
           { name = "fun", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
          [ Meta
           { meta = AnyT, id = Id
            { name = "nothing", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
          ( Assign
           ( Meta
            { meta = SumT
             [ Con
              ( Data "runtime/malgo/Prelude.mlg.Nothing" ) [], Con
              ( Data "runtime/malgo/Prelude.mlg.Just" ) [ AnyT ] ], id = Id
             { name = "scrutinee", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
           ( Cast
            ( SumT
             [ Con
              ( Data "runtime/malgo/Prelude.mlg.Nothing" ) [], Con
              ( Data "runtime/malgo/Prelude.mlg.Just" ) [ AnyT ] ] )
            ( Var
             ( Meta
              { meta = AnyT, id = Id
               { name = "nothing", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
           ( Switch
            ( Var
             ( Meta
              { meta = SumT
               [ Con
                ( Data "runtime/malgo/Prelude.mlg.Nothing" ) [], Con
                ( Data "runtime/malgo/Prelude.mlg.Just" ) [ AnyT ] ], id = Id
               { name = "scrutinee", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
            [
             ( Data "runtime/malgo/Prelude.mlg.Nothing", Destruct
              ( Var
               ( Meta
                { meta = SumT
                 [ Con
                  ( Data "runtime/malgo/Prelude.mlg.Nothing" ) [], Con
                  ( Data "runtime/malgo/Prelude.mlg.Just" ) [ AnyT ] ], id = Id
                 { name = "scrutinee", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
              ( Con ( Data "runtime/malgo/Prelude.mlg.Nothing" ) [] ) []
              ( Atom
               ( Var
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "str", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ),
             ( Data "runtime/malgo/Prelude.mlg.Just", Destruct
              ( Var
               ( Meta
                { meta = SumT
                 [ Con
                  ( Data "runtime/malgo/Prelude.mlg.Nothing" ) [], Con
                  ( Data "runtime/malgo/Prelude.mlg.Just" ) [ AnyT ] ], id = Id
                 { name = "scrutinee", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
              ( Con ( Data "runtime/malgo/Prelude.mlg.Just" ) [ AnyT ] )
              [ Meta
               { meta = AnyT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
              ( Assign
               ( Meta
                { meta = AnyT, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
               ( Call
                ( Var
                 ( Meta
                  { meta = [ AnyT ] :-> AnyT, id = Id
                   { name = "pred", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
                [ Var
                 ( Meta
                  { meta = AnyT, id = Id
                   { name = "p", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
                ( Assign
                 ( Meta
                  { meta =
                   [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :->
                   ( [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ), id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                 ( Call
                  ( Var
                   ( Meta
                    { meta = [ AnyT ] :->
                     (
                      [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :->
                      (
                       [
                        [ SumT
                         [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ) ), id = Id
                     { name = "if", moduleName = Artifact
                      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } } ) )
                  [ Var
                   ( Meta
                    { meta = AnyT, id = Id
                     { name = "d", moduleName = Artifact
                      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
                 ( Assign
                  ( Meta
                   { meta =
                    [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :->
                    (
                     [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ), id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                  ( Cast
                   (
                    [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :->
                    ( [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ) )
                   ( Var
                    ( Meta
                     { meta =
                      [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :->
                      (
                       [
                        [ SumT
                         [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ), id = Id
                      { name = "d", moduleName = Artifact
                       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
                  ( Let
                   [ LocalDef
                    { _variable = Meta
                     { meta =
                      [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
                      { name = "fun", moduleName = Artifact
                       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, typ =
                     [ SumT [ Con Tuple [] ] ] :-> AnyT, _object = Fun
                     [ Meta
                      { meta = SumT
                       [ Con Tuple [] ], id = Id
                       { name = "$_", moduleName = Artifact
                        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
                     ( Assign
                      ( Meta
                       { meta = [ AnyT ] :-> AnyT, id = Id
                        { name = "d", moduleName = Artifact
                         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                      ( Call
                       ( Var
                        ( Meta
                         { meta =
                          [ [ AnyT ] :-> AnyT ] :->
                          ( [ AnyT ] :-> AnyT ), id = Id
                          { name = "dropWhileString", moduleName = Artifact
                           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } } ) )
                       [ Var
                        ( Meta
                         { meta = [ AnyT ] :-> AnyT, id = Id
                          { name = "pred", moduleName = Artifact
                           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
                      ( Assign
                       ( Meta
                        { meta = [ AnyT ] :-> AnyT, id = Id
                         { name = "d", moduleName = Artifact
                          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                       ( Cast
                        ( [ AnyT ] :-> AnyT )
                        ( Var
                         ( Meta
                          { meta = [ AnyT ] :-> AnyT, id = Id
                           { name = "d", moduleName = Artifact
                            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
                       ( Assign
                        ( Meta
                         { meta = AnyT, id = Id
                          { name = "d", moduleName = Artifact
                           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                        ( Call
                         ( Var
                          ( Meta
                           { meta = [ AnyT ] :-> AnyT, id = Id
                            { name = "tailString", moduleName = Artifact
                             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } } ) )
                         [ Var
                          ( Meta
                           { meta = AnyT, id = Id
                            { name = "str", moduleName = Artifact
                             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
                        ( Assign
                         ( Meta
                          { meta = AnyT, id = Id
                           { name = "d", moduleName = Artifact
                            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                         ( Cast AnyT
                          ( Var
                           ( Meta
                            { meta = AnyT, id = Id
                             { name = "d", moduleName = Artifact
                              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
                         ( Assign
                          ( Meta
                           { meta = AnyT, id = Id
                            { name = "d", moduleName = Artifact
                             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                          ( Call
                           ( Var
                            ( Meta
                             { meta = [ AnyT ] :-> AnyT, id = Id
                              { name = "d", moduleName = Artifact
                               ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
                           [ Var
                            ( Meta
                             { meta = AnyT, id = Id
                              { name = "d", moduleName = Artifact
                               ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
                          ( Cast AnyT
                           ( Var
                            ( Meta
                             { meta = AnyT, id = Id
                              { name = "d", moduleName = Artifact
                               ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) } ]
                   ( Assign
                    ( Meta
                     { meta =
                      [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT, id = Id
                      { name = "d", moduleName = Artifact
                       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                    ( Call
                     ( Var
                      ( Meta
                       { meta =
                        [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :->
                        (
                         [
                          [ SumT
                           [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ), id = Id
                        { name = "d", moduleName = Artifact
                         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
                     [ Var
                      ( Meta
                       { meta =
                        [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
                        { name = "fun", moduleName = Artifact
                         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
                    ( Assign
                     ( Meta
                      { meta =
                       [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT, id = Id
                       { name = "d", moduleName = Artifact
                        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                     ( Cast
                      ( [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT )
                      ( Var
                       ( Meta
                        { meta =
                         [
                          [ SumT
                           [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT, id = Id
                         { name = "d", moduleName = Artifact
                          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
                     ( Let
                      [ LocalDef
                       { _variable = Meta
                        { meta =
                         [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
                         { name = "fun", moduleName = Artifact
                          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, typ =
                        [ SumT [ Con Tuple [] ] ] :-> AnyT, _object = Fun
                        [ Meta
                         { meta = SumT
                          [ Con Tuple [] ], id = Id
                          { name = "$_", moduleName = Artifact
                           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
                        ( Atom
                         ( Var
                          ( Meta
                           { meta = AnyT, id = Id
                            { name = "str", moduleName = Artifact
                             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) } ]
                      ( Assign
                       ( Meta
                        { meta = AnyT, id = Id
                         { name = "d", moduleName = Artifact
                          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                       ( Call
                        ( Var
                         ( Meta
                          { meta =
                           [
                            [ SumT
                             [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT, id = Id
                           { name = "d", moduleName = Artifact
                            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
                        [ Var
                         ( Meta
                          { meta =
                           [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
                           { name = "fun", moduleName = Artifact
                            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
                       ( Cast AnyT
                        ( Var
                         ( Meta
                          { meta = AnyT, id = Id
                           { name = "d", moduleName = Artifact
                            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) } ]
        ( Assign
         ( Meta
          { meta = AnyT, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
         ( Call
          ( Var
           ( Meta
            { meta =
             [ [ AnyT ] :-> AnyT ] :-> AnyT, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
          [ Var
           ( Meta
            { meta = [ AnyT ] :-> AnyT, id = Id
             { name = "fun", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
         ( Cast AnyT
          ( Var
           ( Meta
            { meta = AnyT, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, [ AnyT ] :-> AnyT ] :-> AnyT, id = Id
     { name = "case_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, Meta
     { meta = [ AnyT ] :-> AnyT, id = Id
      { name = "f", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ],
    [ AnyT, [ AnyT ] :-> AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = AnyT, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "f", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
     [ Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
    ( Cast AnyT
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "const_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "a", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "_", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Atom
    ( Var
     ( Meta
      { meta = AnyT, id = Id
       { name = "a", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ),
   ( Meta
    { meta =
     [ [ AnyT ] :-> ( [ AnyT ] :-> AnyT ), AnyT, AnyT ] :-> AnyT, id = Id
     { name = "foldl_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } },
    [ Meta
     { meta = [ AnyT ] :->
      ( [ AnyT ] :-> AnyT ), id = Id
      { name = "_", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "z", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "nil", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ],
    [ [ AnyT ] :-> ( [ AnyT ] :-> AnyT ), AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con
       ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
       ( Data "runtime/malgo/Prelude.mlg.Cons" )
       [ AnyT, AnyT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT
      [ Con
       ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
       ( Data "runtime/malgo/Prelude.mlg.Cons" )
       [ AnyT, AnyT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "nil", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
         ( Data "runtime/malgo/Prelude.mlg.Cons" )
         [ AnyT, AnyT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Prelude.mlg.Nil", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
           ( Data "runtime/malgo/Prelude.mlg.Cons" )
           [ AnyT, AnyT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Prelude.mlg.Nil" ) [] ) []
       ( Atom
        ( Var
         ( Meta
          { meta = AnyT, id = Id
           { name = "z", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ),
      ( Data "runtime/malgo/Prelude.mlg.Cons", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
           ( Data "runtime/malgo/Prelude.mlg.Cons" )
           [ AnyT, AnyT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Prelude.mlg.Cons" ) [ AnyT, AnyT ] )
       [ Meta
        { meta = AnyT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, Meta
        { meta = AnyT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = [ AnyT ] :->
          ( [ AnyT ] :-> AnyT ), id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
        ( Call
         ( Var
          ( Meta
           { meta =
            [ [ AnyT ] :-> ( [ AnyT ] :-> AnyT ) ] :->
            ( [ AnyT ] :-> ( [ AnyT ] :-> AnyT ) ), id = Id
            { name = "foldl", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } } ) )
         [ Var
          ( Meta
           { meta = [ AnyT ] :->
            ( [ AnyT ] :-> AnyT ), id = Id
            { name = "_", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
        ( Assign
         ( Meta
          { meta = [ AnyT ] :->
           ( [ AnyT ] :-> AnyT ), id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
         ( Cast
          ( [ AnyT ] :-> ( [ AnyT ] :-> AnyT ) )
          ( Var
           ( Meta
            { meta = [ AnyT ] :->
             ( [ AnyT ] :-> AnyT ), id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
         ( Assign
          ( Meta
           { meta = [ AnyT ] :-> AnyT, id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
          ( Call
           ( Var
            ( Meta
             { meta = [ AnyT ] :->
              ( [ AnyT ] :-> AnyT ), id = Id
              { name = "_", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
           [ Var
            ( Meta
             { meta = AnyT, id = Id
              { name = "z", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
          ( Assign
           ( Meta
            { meta = [ AnyT ] :-> AnyT, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
           ( Cast
            ( [ AnyT ] :-> AnyT )
            ( Var
             ( Meta
              { meta = [ AnyT ] :-> AnyT, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
           ( Assign
            ( Meta
             { meta = AnyT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ AnyT ] :-> AnyT, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
             [ Var
              ( Meta
               { meta = AnyT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = AnyT, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
             ( Cast AnyT
              ( Var
               ( Meta
                { meta = AnyT, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = [ AnyT ] :-> AnyT, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ AnyT ] :->
                  ( [ AnyT ] :-> AnyT ), id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = [ AnyT ] :-> AnyT, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
               ( Cast
                ( [ AnyT ] :-> AnyT )
                ( Var
                 ( Meta
                  { meta = [ AnyT ] :-> AnyT, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ AnyT ] :-> AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
                 [ Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "p", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT, [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT, id = Id
     { name = "unless_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "c", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "tValue", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, Meta
     { meta =
      [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
      { name = "f", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT, [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT, Assign
    ( Meta
     { meta =
      [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :->
      ( [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ), id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ AnyT ] :->
        (
         [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :->
         ( [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ) ), id = Id
        { name = "if", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "c", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta =
       [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :->
       ( [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ), id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
     ( Cast
      (
       [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :->
       ( [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ) )
      ( Var
       ( Meta
        { meta =
         [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :->
         ( [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ), id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
     ( Let
      [ LocalDef
       { _variable = Meta
        { meta =
         [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
         { name = "fun", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, typ =
        [ SumT [ Con Tuple [] ] ] :-> AnyT, _object = Fun
        [ Meta
         { meta = SumT
          [ Con Tuple [] ], id = Id
          { name = "$_", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
        ( Atom
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "tValue", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) } ]
      ( Assign
       ( Meta
        { meta =
         [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
       ( Call
        ( Var
         ( Meta
          { meta =
           [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :->
           ( [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ), id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
        [ Var
         ( Meta
          { meta =
           [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
           { name = "fun", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
       ( Assign
        ( Meta
         { meta =
          [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
        ( Cast
         ( [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT )
         ( Var
          ( Meta
           { meta =
            [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT, id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
        ( Assign
         ( Meta
          { meta = AnyT, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
         ( Call
          ( Var
           ( Meta
            { meta =
             [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
          [ Var
           ( Meta
            { meta =
             [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
             { name = "f", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
         ( Cast AnyT
          ( Var
           ( Meta
            { meta = AnyT, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ),
   ( Meta
    { meta =
     [ AnyT,
      [ SumT [ Con Tuple [] ] ] :-> AnyT,
      [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT, id = Id
     { name = "if_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "true", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, Meta
     { meta =
      [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
      { name = "t", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, Meta
     { meta =
      [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
      { name = "_", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ],
    [ AnyT,
     [ SumT [ Con Tuple [] ] ] :-> AnyT,
     [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con
       ( Data "runtime/malgo/Builtin.mlg.False" ) [], Con
       ( Data "runtime/malgo/Builtin.mlg.True" ) [] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT
      [ Con
       ( Data "runtime/malgo/Builtin.mlg.False" ) [], Con
       ( Data "runtime/malgo/Builtin.mlg.True" ) [] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "true", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Builtin.mlg.False" ) [], Con
         ( Data "runtime/malgo/Builtin.mlg.True" ) [] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.False", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.False" ) [], Con
           ( Data "runtime/malgo/Builtin.mlg.True" ) [] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.False" ) [] ) []
       ( Let
        [ LocalDef
         { _variable = Meta
          { meta = SumT
           [ Con Tuple [] ], id = Id
           { name = "let", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, typ = SumT
          [ Con Tuple [] ], _object = Pack
          ( SumT [ Con Tuple [] ] )
          ( Con Tuple [] ) [] } ]
        ( Assign
         ( Meta
          { meta = AnyT, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
         ( Call
          ( Var
           ( Meta
            { meta =
             [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
             { name = "_", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
          [ Var
           ( Meta
            { meta = SumT
             [ Con Tuple [] ], id = Id
             { name = "let", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
         ( Cast AnyT
          ( Var
           ( Meta
            { meta = AnyT, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ) ) ),
      ( Data "runtime/malgo/Builtin.mlg.True", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Builtin.mlg.False" ) [], Con
           ( Data "runtime/malgo/Builtin.mlg.True" ) [] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.True" ) [] ) []
       ( Let
        [ LocalDef
         { _variable = Meta
          { meta = SumT
           [ Con Tuple [] ], id = Id
           { name = "let", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, typ = SumT
          [ Con Tuple [] ], _object = Pack
          ( SumT [ Con Tuple [] ] )
          ( Con Tuple [] ) [] } ]
        ( Assign
         ( Meta
          { meta = AnyT, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
         ( Call
          ( Var
           ( Meta
            { meta =
             [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
             { name = "t", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
          [ Var
           ( Meta
            { meta = SumT
             [ Con Tuple [] ], id = Id
             { name = "let", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
         ( Cast AnyT
          ( Var
           ( Meta
            { meta = AnyT, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ [ AnyT ] :-> AnyT, AnyT ] :-> AnyT, id = Id
     { name = "mapList_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } },
    [ Meta
     { meta = [ AnyT ] :-> AnyT, id = Id
      { name = "_", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "nil", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ],
    [ [ AnyT ] :-> AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con
       ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
       ( Data "runtime/malgo/Prelude.mlg.Cons" )
       [ AnyT, AnyT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT
      [ Con
       ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
       ( Data "runtime/malgo/Prelude.mlg.Cons" )
       [ AnyT, AnyT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "nil", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
         ( Data "runtime/malgo/Prelude.mlg.Cons" )
         [ AnyT, AnyT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Prelude.mlg.Nil", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
           ( Data "runtime/malgo/Prelude.mlg.Cons" )
           [ AnyT, AnyT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Prelude.mlg.Nil" ) [] ) []
       ( CallDirect
        ( Meta
         { meta = [] :-> AnyT, id = Id
          { name = "Nil", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } } ) [] ) ),
      ( Data "runtime/malgo/Prelude.mlg.Cons", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
           ( Data "runtime/malgo/Prelude.mlg.Cons" )
           [ AnyT, AnyT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Prelude.mlg.Cons" ) [ AnyT, AnyT ] )
       [ Meta
        { meta = AnyT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, Meta
        { meta = AnyT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = AnyT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
        ( Call
         ( Var
          ( Meta
           { meta = [ AnyT ] :-> AnyT, id = Id
            { name = "_", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
         [ Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "p", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
        ( Assign
         ( Meta
          { meta = AnyT, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
         ( Cast AnyT
          ( Var
           ( Meta
            { meta = AnyT, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
         ( Assign
          ( Meta
           { meta = [ AnyT ] :-> AnyT, id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
          ( Call
           ( Var
            ( Meta
             { meta = [ AnyT ] :->
              ( [ AnyT ] :-> AnyT ), id = Id
              { name = "Cons", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } } ) )
           [ Var
            ( Meta
             { meta = AnyT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
          ( Assign
           ( Meta
            { meta = [ AnyT ] :-> AnyT, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
           ( Cast
            ( [ AnyT ] :-> AnyT )
            ( Var
             ( Meta
              { meta = [ AnyT ] :-> AnyT, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
           ( Assign
            ( Meta
             { meta = [ AnyT ] :-> AnyT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta =
                [ [ AnyT ] :-> AnyT ] :->
                ( [ AnyT ] :-> AnyT ), id = Id
                { name = "mapList", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = [ AnyT ] :-> AnyT, id = Id
                { name = "_", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ AnyT ] :-> AnyT, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ AnyT ] :-> AnyT )
              ( Var
               ( Meta
                { meta = [ AnyT ] :-> AnyT, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = AnyT, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ AnyT ] :-> AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
               [ Var
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "p", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = AnyT, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
               ( Cast AnyT
                ( Var
                 ( Meta
                  { meta = AnyT, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ AnyT ] :-> AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
                 [ Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "punctuate_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "_", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "nil", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con
       ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
       ( Data "runtime/malgo/Prelude.mlg.Cons" )
       [ AnyT, AnyT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT
      [ Con
       ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
       ( Data "runtime/malgo/Prelude.mlg.Cons" )
       [ AnyT, AnyT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "nil", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
         ( Data "runtime/malgo/Prelude.mlg.Cons" )
         [ AnyT, AnyT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Prelude.mlg.Nil", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
           ( Data "runtime/malgo/Prelude.mlg.Cons" )
           [ AnyT, AnyT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Prelude.mlg.Nil" ) [] ) []
       ( CallDirect
        ( Meta
         { meta = [] :-> AnyT, id = Id
          { name = "Nil", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } } ) [] ) ),
      ( Data "runtime/malgo/Prelude.mlg.Cons", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
           ( Data "runtime/malgo/Prelude.mlg.Cons" )
           [ AnyT, AnyT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Prelude.mlg.Cons" ) [ AnyT, AnyT ] )
       [ Meta
        { meta = AnyT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, Meta
        { meta = AnyT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
           ( Data "runtime/malgo/Prelude.mlg.Cons" )
           [ AnyT, AnyT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
        ( Cast
         ( SumT
          [ Con
           ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
           ( Data "runtime/malgo/Prelude.mlg.Cons" )
           [ AnyT, AnyT ] ] )
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "p", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
        ( Switch
         ( Var
          ( Meta
           { meta = SumT
            [ Con
             ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
             ( Data "runtime/malgo/Prelude.mlg.Cons" )
             [ AnyT, AnyT ] ], id = Id
            { name = "scrutinee", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
         [
          ( Data "runtime/malgo/Prelude.mlg.Nil", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
               ( Data "runtime/malgo/Prelude.mlg.Cons" )
               [ AnyT, AnyT ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Prelude.mlg.Nil" ) [] ) []
           ( Assign
            ( Meta
             { meta = [ AnyT ] :-> AnyT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ AnyT ] :->
                ( [ AnyT ] :-> AnyT ), id = Id
                { name = "Cons", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = AnyT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ AnyT ] :-> AnyT, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ AnyT ] :-> AnyT )
              ( Var
               ( Meta
                { meta = [ AnyT ] :-> AnyT, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = AnyT, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
              ( CallDirect
               ( Meta
                { meta = [] :-> AnyT, id = Id
                 { name = "Nil", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } } ) [] )
              ( Assign
               ( Meta
                { meta = AnyT, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
               ( Call
                ( Var
                 ( Meta
                  { meta = [ AnyT ] :-> AnyT, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
                [ Var
                 ( Meta
                  { meta = AnyT, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
               ( Cast AnyT
                ( Var
                 ( Meta
                  { meta = AnyT, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ),
          ( Data "runtime/malgo/Prelude.mlg.Cons", Destruct
           ( Var
            ( Meta
             { meta = SumT
              [ Con
               ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
               ( Data "runtime/malgo/Prelude.mlg.Cons" )
               [ AnyT, AnyT ] ], id = Id
              { name = "scrutinee", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
           ( Con ( Data "runtime/malgo/Prelude.mlg.Cons" ) [ AnyT, AnyT ] )
           [ Meta
            { meta = AnyT, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, Meta
            { meta = AnyT, id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
           ( Assign
            ( Meta
             { meta = [ AnyT ] :-> AnyT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ AnyT ] :->
                ( [ AnyT ] :-> AnyT ), id = Id
                { name = "Cons", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } } ) )
             [ Var
              ( Meta
               { meta = AnyT, id = Id
                { name = "p", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
            ( Assign
             ( Meta
              { meta = [ AnyT ] :-> AnyT, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
             ( Cast
              ( [ AnyT ] :-> AnyT )
              ( Var
               ( Meta
                { meta = [ AnyT ] :-> AnyT, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
             ( Assign
              ( Meta
               { meta = [ AnyT ] :-> AnyT, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
              ( Call
               ( Var
                ( Meta
                 { meta = [ AnyT ] :->
                  ( [ AnyT ] :-> AnyT ), id = Id
                  { name = "Cons", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } } ) )
               [ Var
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "_", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
              ( Assign
               ( Meta
                { meta = [ AnyT ] :-> AnyT, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
               ( Cast
                ( [ AnyT ] :-> AnyT )
                ( Var
                 ( Meta
                  { meta = [ AnyT ] :-> AnyT, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
               ( Assign
                ( Meta
                 { meta = [ AnyT ] :-> AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT ), id = Id
                    { name = "punctuate", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } } ) )
                 [ Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "_", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
                ( Assign
                 ( Meta
                  { meta = [ AnyT ] :-> AnyT, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                 ( Cast
                  ( [ AnyT ] :-> AnyT )
                  ( Var
                   ( Meta
                    { meta = [ AnyT ] :-> AnyT, id = Id
                     { name = "d", moduleName = Artifact
                      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
                 ( Assign
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                  ( Call
                   ( Var
                    ( Meta
                     { meta = [ AnyT ] :-> AnyT, id = Id
                      { name = "d", moduleName = Artifact
                       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
                   [ Var
                    ( Meta
                     { meta = AnyT, id = Id
                      { name = "p", moduleName = Artifact
                       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
                  ( Assign
                   ( Meta
                    { meta = AnyT, id = Id
                     { name = "d", moduleName = Artifact
                      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                   ( Cast AnyT
                    ( Var
                     ( Meta
                      { meta = AnyT, id = Id
                       { name = "d", moduleName = Artifact
                        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
                   ( Assign
                    ( Meta
                     { meta = AnyT, id = Id
                      { name = "d", moduleName = Artifact
                       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                    ( Call
                     ( Var
                      ( Meta
                       { meta = [ AnyT ] :-> AnyT, id = Id
                        { name = "d", moduleName = Artifact
                         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
                     [ Var
                      ( Meta
                       { meta = AnyT, id = Id
                        { name = "d", moduleName = Artifact
                         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
                    ( Assign
                     ( Meta
                      { meta = AnyT, id = Id
                       { name = "d", moduleName = Artifact
                        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                     ( Cast AnyT
                      ( Var
                       ( Meta
                        { meta = AnyT, id = Id
                         { name = "d", moduleName = Artifact
                          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
                     ( Assign
                      ( Meta
                       { meta = AnyT, id = Id
                        { name = "d", moduleName = Artifact
                         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                      ( Call
                       ( Var
                        ( Meta
                         { meta = [ AnyT ] :-> AnyT, id = Id
                          { name = "d", moduleName = Artifact
                           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
                       [ Var
                        ( Meta
                         { meta = AnyT, id = Id
                          { name = "d", moduleName = Artifact
                           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
                      ( Cast AnyT
                       ( Var
                        ( Meta
                         { meta = AnyT, id = Id
                          { name = "d", moduleName = Artifact
                           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ AnyT, [ AnyT ] :-> AnyT ] :-> AnyT, id = Id
     { name = "|>_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, Meta
     { meta = [ AnyT ] :-> AnyT, id = Id
      { name = "f", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ],
    [ AnyT, [ AnyT ] :-> AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = AnyT, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "f", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
     [ Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
    ( Cast AnyT
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta =
     [ AnyT, AnyT ] :-> AnyT, id = Id
     { name = "Cons_curry", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, Meta
     { meta = AnyT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ],
    [ AnyT, AnyT ] :-> AnyT, Let
    [ LocalDef
     { _variable = Meta
      { meta = SumT
       [ Con
        ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
        ( Data "runtime/malgo/Prelude.mlg.Cons" )
        [ AnyT, AnyT ] ], id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, typ = SumT
      [ Con
       ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
       ( Data "runtime/malgo/Prelude.mlg.Cons" )
       [ AnyT, AnyT ] ], _object = Pack
      ( SumT
       [ Con
        ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
        ( Data "runtime/malgo/Prelude.mlg.Cons" )
        [ AnyT, AnyT ] ] )
      ( Con ( Data "runtime/malgo/Prelude.mlg.Cons" ) [ AnyT, AnyT ] )
      [ Var
       ( Meta
        { meta = AnyT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ), Var
       ( Meta
        { meta = AnyT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] } ]
    ( Cast AnyT
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
         ( Data "runtime/malgo/Prelude.mlg.Cons" )
         [ AnyT, AnyT ] ], id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [] :-> AnyT, id = Id
     { name = "Nothing", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } }, [], [] :-> AnyT, Let
    [ LocalDef
     { _variable = Meta
      { meta = SumT
       [ Con
        ( Data "runtime/malgo/Prelude.mlg.Nothing" ) [], Con
        ( Data "runtime/malgo/Prelude.mlg.Just" ) [ AnyT ] ], id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, typ = SumT
      [ Con
       ( Data "runtime/malgo/Prelude.mlg.Nothing" ) [], Con
       ( Data "runtime/malgo/Prelude.mlg.Just" ) [ AnyT ] ], _object = Pack
      ( SumT
       [ Con
        ( Data "runtime/malgo/Prelude.mlg.Nothing" ) [], Con
        ( Data "runtime/malgo/Prelude.mlg.Just" ) [ AnyT ] ] )
      ( Con ( Data "runtime/malgo/Prelude.mlg.Nothing" ) [] ) [] } ]
    ( Cast AnyT
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Prelude.mlg.Nothing" ) [], Con
         ( Data "runtime/malgo/Prelude.mlg.Just" ) [ AnyT ] ], id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :-> AnyT, id = Id
     { name = "Just", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ], [ AnyT ] :-> AnyT, Let
    [ LocalDef
     { _variable = Meta
      { meta = SumT
       [ Con
        ( Data "runtime/malgo/Prelude.mlg.Nothing" ) [], Con
        ( Data "runtime/malgo/Prelude.mlg.Just" ) [ AnyT ] ], id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, typ = SumT
      [ Con
       ( Data "runtime/malgo/Prelude.mlg.Nothing" ) [], Con
       ( Data "runtime/malgo/Prelude.mlg.Just" ) [ AnyT ] ], _object = Pack
      ( SumT
       [ Con
        ( Data "runtime/malgo/Prelude.mlg.Nothing" ) [], Con
        ( Data "runtime/malgo/Prelude.mlg.Just" ) [ AnyT ] ] )
      ( Con ( Data "runtime/malgo/Prelude.mlg.Just" ) [ AnyT ] )
      [ Var
       ( Meta
        { meta = AnyT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] } ]
    ( Cast AnyT
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Prelude.mlg.Nothing" ) [], Con
         ( Data "runtime/malgo/Prelude.mlg.Just" ) [ AnyT ] ], id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [] :-> AnyT, id = Id
     { name = "Nil", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } }, [], [] :-> AnyT, Let
    [ LocalDef
     { _variable = Meta
      { meta = SumT
       [ Con
        ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
        ( Data "runtime/malgo/Prelude.mlg.Cons" )
        [ AnyT, AnyT ] ], id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, typ = SumT
      [ Con
       ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
       ( Data "runtime/malgo/Prelude.mlg.Cons" )
       [ AnyT, AnyT ] ], _object = Pack
      ( SumT
       [ Con
        ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
        ( Data "runtime/malgo/Prelude.mlg.Cons" )
        [ AnyT, AnyT ] ] )
      ( Con ( Data "runtime/malgo/Prelude.mlg.Nil" ) [] ) [] } ]
    ( Cast AnyT
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
         ( Data "runtime/malgo/Prelude.mlg.Cons" )
         [ AnyT, AnyT ] ], id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "Cons", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "p", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "Cons_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ [ AnyT ] :-> AnyT ] :-> AnyT ), id = Id
     { name = "|>", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ [ AnyT ] :-> AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta =
       [ [ AnyT ] :-> AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, typ =
      [ [ AnyT ] :-> AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "f", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, [ AnyT ] :-> AnyT ] :-> AnyT, id = Id
         { name = "|>_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = [ AnyT ] :-> AnyT, id = Id
          { name = "f", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta =
        [ [ AnyT ] :-> AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :-> AnyT, id = Id
     { name = "tail", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "cons", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ], [ AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con
       ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
       ( Data "runtime/malgo/Prelude.mlg.Cons" )
       [ AnyT, AnyT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT
      [ Con
       ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
       ( Data "runtime/malgo/Prelude.mlg.Cons" )
       [ AnyT, AnyT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "cons", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
         ( Data "runtime/malgo/Prelude.mlg.Cons" )
         [ AnyT, AnyT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Prelude.mlg.Nil", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
           ( Data "runtime/malgo/Prelude.mlg.Cons" )
           [ AnyT, AnyT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Prelude.mlg.Nil" ) [] ) []
       ( Let
        [ LocalDef
         { _variable = Meta
          { meta = SumT
           [ Con Tuple [] ], id = Id
           { name = "let", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, typ = SumT
          [ Con Tuple [] ], _object = Pack
          ( SumT [ Con Tuple [] ] )
          ( Con Tuple [] ) [] } ]
        ( Assign
         ( Meta
          { meta = AnyT, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
         ( Call
          ( Var
           ( Meta
            { meta =
             [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
             { name = "exitFailure", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
          [ Var
           ( Meta
            { meta = SumT
             [ Con Tuple [] ], id = Id
             { name = "let", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
         ( Cast AnyT
          ( Var
           ( Meta
            { meta = AnyT, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ) ) ),
      ( Data "runtime/malgo/Prelude.mlg.Cons", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
           ( Data "runtime/malgo/Prelude.mlg.Cons" )
           [ AnyT, AnyT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Prelude.mlg.Cons" ) [ AnyT, AnyT ] )
       [ Meta
        { meta = AnyT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, Meta
        { meta = AnyT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
       ( Atom
        ( Var
         ( Meta
          { meta = AnyT, id = Id
           { name = "p", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ SumT [ Con Tuple [ AnyT, AnyT ] ] ] :-> AnyT, id = Id
     { name = "snd", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } },
    [ Meta
     { meta = SumT
      [ Con Tuple [ AnyT, AnyT ] ], id = Id
      { name = "tuple", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ],
    [ SumT [ Con Tuple [ AnyT, AnyT ] ] ] :-> AnyT, Switch
    ( Var
     ( Meta
      { meta = SumT
       [ Con Tuple [ AnyT, AnyT ] ], id = Id
       { name = "tuple", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
    [
     ( Tuple, Destruct
      ( Var
       ( Meta
        { meta = SumT
         [ Con Tuple [ AnyT, AnyT ] ], id = Id
         { name = "tuple", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
      ( Con Tuple [ AnyT, AnyT ] )
      [ Meta
       { meta = AnyT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, Meta
       { meta = AnyT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
      ( Atom
       ( Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ) ] ( Error AnyT ) ),
   ( Meta
    { meta = [ AnyT ] :-> SumT
     [ Con Tuple [] ], id = Id
     { name = "putStrLn", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "str", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ], [ AnyT ] :-> SumT
    [ Con Tuple [] ], Assign
    ( Meta
     { meta = SumT
      [ Con Tuple [] ], id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> SumT
        [ Con Tuple [] ], id = Id
        { name = "printString", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "str", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = SumT
       [ Con Tuple [] ], id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
     ( Cast
      ( SumT [ Con Tuple [] ] )
      ( Var
       ( Meta
        { meta = SumT
         [ Con Tuple [] ], id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
     ( Let
      [ LocalDef
       { _variable = Meta
        { meta = SumT
         [ Con Tuple [] ], id = Id
         { name = "let", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, typ = SumT
        [ Con Tuple [] ], _object = Pack
        ( SumT [ Con Tuple [] ] )
        ( Con Tuple [] ) [] } ]
      ( Assign
       ( Meta
        { meta = AnyT, id = Id
         { name = "cast", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
       ( Cast AnyT
        ( Var
         ( Meta
          { meta = SumT
           [ Con Tuple [] ], id = Id
           { name = "let", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
       ( Assign
        ( Meta
         { meta = SumT
          [ Con Tuple [] ], id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
        ( Call
         ( Var
          ( Meta
           { meta = [ AnyT ] :-> SumT
            [ Con Tuple [] ], id = Id
            { name = "newline", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
         [ Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "cast", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
        ( Cast
         ( SumT [ Con Tuple [] ] )
         ( Var
          ( Meta
           { meta = SumT
            [ Con Tuple [] ], id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :-> SumT
     [ Con Tuple [] ], id = Id
     { name = "putStr", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "str", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ], [ AnyT ] :-> SumT
    [ Con Tuple [] ], Assign
    ( Meta
     { meta = SumT
      [ Con Tuple [] ], id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> SumT
        [ Con Tuple [] ], id = Id
        { name = "printString", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "str", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
    ( Cast
     ( SumT [ Con Tuple [] ] )
     ( Var
      ( Meta
       { meta = SumT
        [ Con Tuple [] ], id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "punctuate", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "_", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "nil", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "punctuate_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "_", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "nil", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :-> SumT
     [ Con Tuple [] ], id = Id
     { name = "printInt64", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "i", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ], [ AnyT ] :-> SumT
    [ Con Tuple [] ], Assign
    ( Meta
     { meta = AnyT, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "toStringInt64", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "i", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = AnyT, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
     ( Cast AnyT
      ( Var
       ( Meta
        { meta = AnyT, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = SumT
        [ Con Tuple [] ], id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ AnyT ] :-> SumT
          [ Con Tuple [] ], id = Id
          { name = "printString", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
      ( Cast
       ( SumT [ Con Tuple [] ] )
       ( Var
        ( Meta
         { meta = SumT
          [ Con Tuple [] ], id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :-> SumT
     [ Con Tuple [] ], id = Id
     { name = "printInt32", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "i", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ], [ AnyT ] :-> SumT
    [ Con Tuple [] ], Assign
    ( Meta
     { meta = AnyT, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "toStringInt32", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "i", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = AnyT, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
     ( Cast AnyT
      ( Var
       ( Meta
        { meta = AnyT, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = SumT
        [ Con Tuple [] ], id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ AnyT ] :-> SumT
          [ Con Tuple [] ], id = Id
          { name = "printString", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
      ( Cast
       ( SumT [ Con Tuple [] ] )
       ( Var
        ( Meta
         { meta = SumT
          [ Con Tuple [] ], id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ) ) ),
   ( Meta
    { meta =
     [ [ AnyT ] :-> AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "mapList", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } },
    [ Meta
     { meta = [ AnyT ] :-> AnyT, id = Id
      { name = "_", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ],
    [ [ AnyT ] :-> AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "nil", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ [ AnyT ] :-> AnyT, AnyT ] :-> AnyT, id = Id
         { name = "mapList_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = [ AnyT ] :-> AnyT, id = Id
          { name = "_", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "nil", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :-> AnyT, id = Id
     { name = "listToString", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "nil", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ], [ AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con
       ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
       ( Data "runtime/malgo/Prelude.mlg.Cons" )
       [ AnyT, AnyT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT
      [ Con
       ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
       ( Data "runtime/malgo/Prelude.mlg.Cons" )
       [ AnyT, AnyT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "nil", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
         ( Data "runtime/malgo/Prelude.mlg.Cons" )
         [ AnyT, AnyT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Prelude.mlg.Nil", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
           ( Data "runtime/malgo/Prelude.mlg.Cons" )
           [ AnyT, AnyT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Prelude.mlg.Nil" ) [] ) []
       ( Assign
        ( Meta
         { meta = AnyT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
        ( Call
         ( Var
          ( Meta
           { meta = [ StringT ] :-> AnyT, id = Id
            { name = "String#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
         [ Unboxed ( String "" ) ] )
        ( Cast AnyT
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ) ),
      ( Data "runtime/malgo/Prelude.mlg.Cons", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
           ( Data "runtime/malgo/Prelude.mlg.Cons" )
           [ AnyT, AnyT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Prelude.mlg.Cons" ) [ AnyT, AnyT ] )
       [ Meta
        { meta = AnyT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, Meta
        { meta = AnyT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = [ AnyT ] :-> AnyT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
        ( Call
         ( Var
          ( Meta
           { meta = [ AnyT ] :->
            ( [ AnyT ] :-> AnyT ), id = Id
            { name = "consString", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
         [ Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "p", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
        ( Assign
         ( Meta
          { meta = [ AnyT ] :-> AnyT, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
         ( Cast
          ( [ AnyT ] :-> AnyT )
          ( Var
           ( Meta
            { meta = [ AnyT ] :-> AnyT, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
         ( Assign
          ( Meta
           { meta = AnyT, id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
          ( Call
           ( Var
            ( Meta
             { meta = [ AnyT ] :-> AnyT, id = Id
              { name = "listToString", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } } ) )
           [ Var
            ( Meta
             { meta = AnyT, id = Id
              { name = "p", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
          ( Assign
           ( Meta
            { meta = AnyT, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
           ( Cast AnyT
            ( Var
             ( Meta
              { meta = AnyT, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
           ( Assign
            ( Meta
             { meta = AnyT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ AnyT ] :-> AnyT, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
             [ Var
              ( Meta
               { meta = AnyT, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
            ( Cast AnyT
             ( Var
              ( Meta
               { meta = AnyT, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta = [ AnyT ] :-> AnyT, id = Id
     { name = "isWhiteSpace", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "char#", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ], [ AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "char#", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Builtin.mlg.Char#", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Builtin.mlg.Char#" ) [ CharT ] )
       [ Meta
        { meta = CharT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
       ( SwitchUnboxed
        ( Var
         ( Meta
          { meta = CharT, id = Id
           { name = "p", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
        [
         ( Char ' ', CallDirect
          ( Meta
           { meta = [] :-> AnyT, id = Id
            { name = "True", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) [] ),
         ( Char '\n', CallDirect
          ( Meta
           { meta = [] :-> AnyT, id = Id
            { name = "True", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) [] ),
         ( Char '\r', CallDirect
          ( Meta
           { meta = [] :-> AnyT, id = Id
            { name = "True", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) [] ),
         ( Char '\t', CallDirect
          ( Meta
           { meta = [] :-> AnyT, id = Id
            { name = "True", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) [] ) ]
        ( CallDirect
         ( Meta
          { meta = [] :-> AnyT, id = Id
           { name = "False", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) [] ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     (
      [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :->
      ( [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ) ), id = Id
     { name = "if", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "true", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    (
     [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :->
     ( [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ) ), Let
    [ LocalDef
     { _variable = Meta
      { meta =
       [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :->
       ( [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ), id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, typ =
      [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :->
      ( [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ), _object = Fun
      [ Meta
       { meta =
        [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
        { name = "t", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
      ( Let
       [ LocalDef
        { _variable = Meta
         { meta =
          [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT, id = Id
          { name = "let", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, typ =
         [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT, _object = Fun
         [ Meta
          { meta =
           [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
           { name = "_", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
         ( CallDirect
          ( Meta
           { meta =
            [ AnyT,
             [ SumT [ Con Tuple [] ] ] :-> AnyT,
             [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT, id = Id
            { name = "if_curry", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
          [ Var
           ( Meta
            { meta = AnyT, id = Id
             { name = "true", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ), Var
           ( Meta
            { meta =
             [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
             { name = "t", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ), Var
           ( Meta
            { meta =
             [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
             { name = "_", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] ) } ]
       ( Atom
        ( Var
         ( Meta
          { meta =
           [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT, id = Id
           { name = "let", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta =
        [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :->
        ( [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ), id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :-> AnyT, id = Id
     { name = "tailString", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "str", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ], [ AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = [ AnyT ] :-> AnyT, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ AnyT ] :->
        ( [ AnyT ] :-> AnyT ), id = Id
        { name = "eqString", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "str", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ AnyT ] :-> AnyT )
      ( Var
       ( Meta
        { meta = [ AnyT ] :-> AnyT, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = AnyT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ StringT ] :-> AnyT, id = Id
          { name = "String#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
       [ Unboxed ( String "" ) ] )
      ( Assign
       ( Meta
        { meta = AnyT, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
       ( Cast AnyT
        ( Var
         ( Meta
          { meta = AnyT, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
       ( Assign
        ( Meta
         { meta = AnyT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
        ( Call
         ( Var
          ( Meta
           { meta = [ AnyT ] :-> AnyT, id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
         [ Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
        ( Assign
         ( Meta
          { meta = AnyT, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
         ( Cast AnyT
          ( Var
           ( Meta
            { meta = AnyT, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
         ( Assign
          ( Meta
           { meta =
            [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :->
            ( [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ), id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
          ( Call
           ( Var
            ( Meta
             { meta = [ AnyT ] :->
              (
               [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :->
               ( [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ) ), id = Id
              { name = "if", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } } ) )
           [ Var
            ( Meta
             { meta = AnyT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
          ( Assign
           ( Meta
            { meta =
             [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :->
             ( [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ), id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
           ( Cast
            (
             [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :->
             ( [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ) )
            ( Var
             ( Meta
              { meta =
               [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :->
               ( [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ), id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
           ( Let
            [ LocalDef
             { _variable = Meta
              { meta =
               [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
               { name = "fun", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, typ =
              [ SumT [ Con Tuple [] ] ] :-> AnyT, _object = Fun
              [ Meta
               { meta = SumT
                [ Con Tuple [] ], id = Id
                { name = "$_", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
              ( Atom
               ( Var
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "str", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) } ]
            ( Assign
             ( Meta
              { meta =
               [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
             ( Call
              ( Var
               ( Meta
                { meta =
                 [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :->
                 ( [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ), id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
              [ Var
               ( Meta
                { meta =
                 [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
                 { name = "fun", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
             ( Assign
              ( Meta
               { meta =
                [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
              ( Cast
               ( [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT )
               ( Var
                ( Meta
                 { meta =
                  [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
              ( Let
               [ LocalDef
                { _variable = Meta
                 { meta =
                  [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
                  { name = "fun", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, typ =
                 [ SumT [ Con Tuple [] ] ] :-> AnyT, _object = Fun
                 [ Meta
                  { meta = SumT
                   [ Con Tuple [] ], id = Id
                   { name = "$_", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
                 ( Assign
                  ( Meta
                   { meta = [ AnyT ] :->
                    ( [ AnyT ] :-> AnyT ), id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                  ( Call
                   ( Var
                    ( Meta
                     { meta = [ AnyT ] :->
                      ( [ AnyT ] :-> ( [ AnyT ] :-> AnyT ) ), id = Id
                      { name = "substring", moduleName = Artifact
                       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                   [ Var
                    ( Meta
                     { meta = AnyT, id = Id
                      { name = "str", moduleName = Artifact
                       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
                  ( Assign
                   ( Meta
                    { meta = [ AnyT ] :->
                     ( [ AnyT ] :-> AnyT ), id = Id
                     { name = "d", moduleName = Artifact
                      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                   ( Cast
                    ( [ AnyT ] :-> ( [ AnyT ] :-> AnyT ) )
                    ( Var
                     ( Meta
                      { meta = [ AnyT ] :->
                       ( [ AnyT ] :-> AnyT ), id = Id
                       { name = "d", moduleName = Artifact
                        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
                   ( Assign
                    ( Meta
                     { meta = AnyT, id = Id
                      { name = "d", moduleName = Artifact
                       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                    ( Call
                     ( Var
                      ( Meta
                       { meta = [ Int64T ] :-> AnyT, id = Id
                        { name = "Int64#", moduleName = Artifact
                         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                     [ Unboxed ( Int64 1 ) ] )
                    ( Assign
                     ( Meta
                      { meta = AnyT, id = Id
                       { name = "d", moduleName = Artifact
                        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                     ( Cast AnyT
                      ( Var
                       ( Meta
                        { meta = AnyT, id = Id
                         { name = "d", moduleName = Artifact
                          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
                     ( Assign
                      ( Meta
                       { meta = [ AnyT ] :-> AnyT, id = Id
                        { name = "d", moduleName = Artifact
                         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                      ( Call
                       ( Var
                        ( Meta
                         { meta = [ AnyT ] :->
                          ( [ AnyT ] :-> AnyT ), id = Id
                          { name = "d", moduleName = Artifact
                           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
                       [ Var
                        ( Meta
                         { meta = AnyT, id = Id
                          { name = "d", moduleName = Artifact
                           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
                      ( Assign
                       ( Meta
                        { meta = [ AnyT ] :-> AnyT, id = Id
                         { name = "d", moduleName = Artifact
                          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                       ( Cast
                        ( [ AnyT ] :-> AnyT )
                        ( Var
                         ( Meta
                          { meta = [ AnyT ] :-> AnyT, id = Id
                           { name = "d", moduleName = Artifact
                            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
                       ( Assign
                        ( Meta
                         { meta = AnyT, id = Id
                          { name = "d", moduleName = Artifact
                           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                        ( Call
                         ( Var
                          ( Meta
                           { meta = [ AnyT ] :-> AnyT, id = Id
                            { name = "lengthString", moduleName = Artifact
                             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                         [ Var
                          ( Meta
                           { meta = AnyT, id = Id
                            { name = "str", moduleName = Artifact
                             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
                        ( Assign
                         ( Meta
                          { meta = AnyT, id = Id
                           { name = "d", moduleName = Artifact
                            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                         ( Cast AnyT
                          ( Var
                           ( Meta
                            { meta = AnyT, id = Id
                             { name = "d", moduleName = Artifact
                              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
                         ( Assign
                          ( Meta
                           { meta = AnyT, id = Id
                            { name = "d", moduleName = Artifact
                             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                          ( Call
                           ( Var
                            ( Meta
                             { meta = [ AnyT ] :-> AnyT, id = Id
                              { name = "d", moduleName = Artifact
                               ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
                           [ Var
                            ( Meta
                             { meta = AnyT, id = Id
                              { name = "d", moduleName = Artifact
                               ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
                          ( Cast AnyT
                           ( Var
                            ( Meta
                             { meta = AnyT, id = Id
                              { name = "d", moduleName = Artifact
                               ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ) ) ) } ]
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta =
                    [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
                 [ Var
                  ( Meta
                   { meta =
                    [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
                    { name = "fun", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :->
      ( [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ) ), id = Id
     { name = "unless", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "c", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> ( [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ) ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :->
       ( [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ), id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, typ = [ AnyT ] :->
      ( [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ), _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "tValue", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
      ( Let
       [ LocalDef
        { _variable = Meta
         { meta =
          [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT, id = Id
          { name = "let", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, typ =
         [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT, _object = Fun
         [ Meta
          { meta =
           [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
           { name = "f", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
         ( CallDirect
          ( Meta
           { meta =
            [ AnyT, AnyT,
             [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT, id = Id
            { name = "unless_curry", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
          [ Var
           ( Meta
            { meta = AnyT, id = Id
             { name = "c", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ), Var
           ( Meta
            { meta = AnyT, id = Id
             { name = "tValue", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ), Var
           ( Meta
            { meta =
             [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
             { name = "f", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] ) } ]
       ( Atom
        ( Var
         ( Meta
          { meta =
           [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT, id = Id
           { name = "let", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :->
        ( [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ), id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :-> AnyT, id = Id
     { name = "identity", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ], [ AnyT ] :-> AnyT, Atom
    ( Var
     ( Meta
      { meta = AnyT, id = Id
       { name = "x", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ),
   ( Meta
    { meta = [ AnyT ] :-> AnyT, id = Id
     { name = "headString", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "str", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ], [ AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = [ AnyT ] :-> AnyT, id = Id
      { name = "d", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
    ( Call
     ( Var
      ( Meta
       { meta = [ AnyT ] :->
        ( [ AnyT ] :-> AnyT ), id = Id
        { name = "eqString", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
     [ Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "str", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
    ( Assign
     ( Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "d", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
     ( Cast
      ( [ AnyT ] :-> AnyT )
      ( Var
       ( Meta
        { meta = [ AnyT ] :-> AnyT, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = AnyT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ StringT ] :-> AnyT, id = Id
          { name = "String#", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
       [ Unboxed ( String "" ) ] )
      ( Assign
       ( Meta
        { meta = AnyT, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
       ( Cast AnyT
        ( Var
         ( Meta
          { meta = AnyT, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
       ( Assign
        ( Meta
         { meta = AnyT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
        ( Call
         ( Var
          ( Meta
           { meta = [ AnyT ] :-> AnyT, id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
         [ Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
        ( Assign
         ( Meta
          { meta = AnyT, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
         ( Cast AnyT
          ( Var
           ( Meta
            { meta = AnyT, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
         ( Assign
          ( Meta
           { meta =
            [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :->
            ( [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ), id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
          ( Call
           ( Var
            ( Meta
             { meta = [ AnyT ] :->
              (
               [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :->
               ( [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ) ), id = Id
              { name = "if", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } } ) )
           [ Var
            ( Meta
             { meta = AnyT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
          ( Assign
           ( Meta
            { meta =
             [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :->
             ( [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ), id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
           ( Cast
            (
             [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :->
             ( [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ) )
            ( Var
             ( Meta
              { meta =
               [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :->
               ( [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ), id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
           ( Let
            [ LocalDef
             { _variable = Meta
              { meta =
               [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
               { name = "fun", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, typ =
              [ SumT [ Con Tuple [] ] ] :-> AnyT, _object = Fun
              [ Meta
               { meta = SumT
                [ Con Tuple [] ], id = Id
                { name = "$_", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
              ( CallDirect
               ( Meta
                { meta = [] :-> AnyT, id = Id
                 { name = "Nothing", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } } ) [] ) } ]
            ( Assign
             ( Meta
              { meta =
               [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
             ( Call
              ( Var
               ( Meta
                { meta =
                 [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :->
                 ( [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT ), id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
              [ Var
               ( Meta
                { meta =
                 [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
                 { name = "fun", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
             ( Assign
              ( Meta
               { meta =
                [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
              ( Cast
               ( [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT )
               ( Var
                ( Meta
                 { meta =
                  [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
              ( Let
               [ LocalDef
                { _variable = Meta
                 { meta =
                  [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
                  { name = "fun", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, typ =
                 [ SumT [ Con Tuple [] ] ] :-> AnyT, _object = Fun
                 [ Meta
                  { meta = SumT
                   [ Con Tuple [] ], id = Id
                   { name = "$_", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
                 ( Assign
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                  ( Call
                   ( Var
                    ( Meta
                     { meta = [ Int64T ] :-> AnyT, id = Id
                      { name = "Int64#", moduleName = Artifact
                       ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                   [ Unboxed ( Int64 0 ) ] )
                  ( Assign
                   ( Meta
                    { meta = AnyT, id = Id
                     { name = "d", moduleName = Artifact
                      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                   ( Cast AnyT
                    ( Var
                     ( Meta
                      { meta = AnyT, id = Id
                       { name = "d", moduleName = Artifact
                        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
                   ( Assign
                    ( Meta
                     { meta = [ AnyT ] :-> AnyT, id = Id
                      { name = "d", moduleName = Artifact
                       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                    ( Call
                     ( Var
                      ( Meta
                       { meta = [ AnyT ] :->
                        ( [ AnyT ] :-> AnyT ), id = Id
                        { name = "atString", moduleName = Artifact
                         ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
                     [ Var
                      ( Meta
                       { meta = AnyT, id = Id
                        { name = "d", moduleName = Artifact
                         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
                    ( Assign
                     ( Meta
                      { meta = [ AnyT ] :-> AnyT, id = Id
                       { name = "d", moduleName = Artifact
                        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                     ( Cast
                      ( [ AnyT ] :-> AnyT )
                      ( Var
                       ( Meta
                        { meta = [ AnyT ] :-> AnyT, id = Id
                         { name = "d", moduleName = Artifact
                          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
                     ( Assign
                      ( Meta
                       { meta = AnyT, id = Id
                        { name = "d", moduleName = Artifact
                         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                      ( Call
                       ( Var
                        ( Meta
                         { meta = [ AnyT ] :-> AnyT, id = Id
                          { name = "d", moduleName = Artifact
                           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
                       [ Var
                        ( Meta
                         { meta = AnyT, id = Id
                          { name = "str", moduleName = Artifact
                           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
                      ( Assign
                       ( Meta
                        { meta = AnyT, id = Id
                         { name = "d", moduleName = Artifact
                          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                       ( Cast AnyT
                        ( Var
                         ( Meta
                          { meta = AnyT, id = Id
                           { name = "d", moduleName = Artifact
                            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
                       ( Assign
                        ( Meta
                         { meta = AnyT, id = Id
                          { name = "d", moduleName = Artifact
                           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                        ( Call
                         ( Var
                          ( Meta
                           { meta = [ AnyT ] :-> AnyT, id = Id
                            { name = "Just", moduleName = Artifact
                             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } } ) )
                         [ Var
                          ( Meta
                           { meta = AnyT, id = Id
                            { name = "d", moduleName = Artifact
                             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
                        ( Cast AnyT
                         ( Var
                          ( Meta
                           { meta = AnyT, id = Id
                            { name = "d", moduleName = Artifact
                             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ) } ]
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta =
                    [ [ SumT [ Con Tuple [] ] ] :-> AnyT ] :-> AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
                 [ Var
                  ( Meta
                   { meta =
                    [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
                    { name = "fun", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :-> AnyT, id = Id
     { name = "head", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "cons", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ], [ AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con
       ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
       ( Data "runtime/malgo/Prelude.mlg.Cons" )
       [ AnyT, AnyT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT
      [ Con
       ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
       ( Data "runtime/malgo/Prelude.mlg.Cons" )
       [ AnyT, AnyT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "cons", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
         ( Data "runtime/malgo/Prelude.mlg.Cons" )
         [ AnyT, AnyT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Prelude.mlg.Nil", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
           ( Data "runtime/malgo/Prelude.mlg.Cons" )
           [ AnyT, AnyT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Prelude.mlg.Nil" ) [] ) []
       ( Let
        [ LocalDef
         { _variable = Meta
          { meta = SumT
           [ Con Tuple [] ], id = Id
           { name = "let", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, typ = SumT
          [ Con Tuple [] ], _object = Pack
          ( SumT [ Con Tuple [] ] )
          ( Con Tuple [] ) [] } ]
        ( Assign
         ( Meta
          { meta = AnyT, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
         ( Call
          ( Var
           ( Meta
            { meta =
             [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
             { name = "exitFailure", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
          [ Var
           ( Meta
            { meta = SumT
             [ Con Tuple [] ], id = Id
             { name = "let", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
         ( Cast AnyT
          ( Var
           ( Meta
            { meta = AnyT, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ) ) ),
      ( Data "runtime/malgo/Prelude.mlg.Cons", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
           ( Data "runtime/malgo/Prelude.mlg.Cons" )
           [ AnyT, AnyT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Prelude.mlg.Cons" ) [ AnyT, AnyT ] )
       [ Meta
        { meta = AnyT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, Meta
        { meta = AnyT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
       ( Atom
        ( Var
         ( Meta
          { meta = AnyT, id = Id
           { name = "p", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta =
     [ SumT [ Con Tuple [ AnyT, AnyT ] ] ] :-> AnyT, id = Id
     { name = "fst", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } },
    [ Meta
     { meta = SumT
      [ Con Tuple [ AnyT, AnyT ] ], id = Id
      { name = "tuple", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ],
    [ SumT [ Con Tuple [ AnyT, AnyT ] ] ] :-> AnyT, Switch
    ( Var
     ( Meta
      { meta = SumT
       [ Con Tuple [ AnyT, AnyT ] ], id = Id
       { name = "tuple", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
    [
     ( Tuple, Destruct
      ( Var
       ( Meta
        { meta = SumT
         [ Con Tuple [ AnyT, AnyT ] ], id = Id
         { name = "tuple", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
      ( Con Tuple [ AnyT, AnyT ] )
      [ Meta
       { meta = AnyT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, Meta
       { meta = AnyT, id = Id
        { name = "p", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
      ( Atom
       ( Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "p", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ) ] ( Error AnyT ) ),
   ( Meta
    { meta =
     [ [ AnyT ] :-> ( [ AnyT ] :-> AnyT ) ] :->
     ( [ AnyT ] :-> ( [ AnyT ] :-> AnyT ) ), id = Id
     { name = "foldl", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } },
    [ Meta
     { meta = [ AnyT ] :->
      ( [ AnyT ] :-> AnyT ), id = Id
      { name = "_", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ],
    [ [ AnyT ] :-> ( [ AnyT ] :-> AnyT ) ] :->
    ( [ AnyT ] :-> ( [ AnyT ] :-> AnyT ) ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :->
       ( [ AnyT ] :-> AnyT ), id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, typ = [ AnyT ] :->
      ( [ AnyT ] :-> AnyT ), _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "z", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
      ( Let
       [ LocalDef
        { _variable = Meta
         { meta = [ AnyT ] :-> AnyT, id = Id
          { name = "let", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
         [ Meta
          { meta = AnyT, id = Id
           { name = "nil", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
         ( CallDirect
          ( Meta
           { meta =
            [ [ AnyT ] :->
             ( [ AnyT ] :-> AnyT ), AnyT, AnyT ] :-> AnyT, id = Id
            { name = "foldl_curry", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
          [ Var
           ( Meta
            { meta = [ AnyT ] :->
             ( [ AnyT ] :-> AnyT ), id = Id
             { name = "_", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ), Var
           ( Meta
            { meta = AnyT, id = Id
             { name = "z", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ), Var
           ( Meta
            { meta = AnyT, id = Id
             { name = "nil", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] ) } ]
       ( Atom
        ( Var
         ( Meta
          { meta = [ AnyT ] :-> AnyT, id = Id
           { name = "let", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :->
        ( [ AnyT ] :-> AnyT ), id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "const", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "a", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "_", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, AnyT ] :-> AnyT, id = Id
         { name = "const_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "a", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "_", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta = [ AnyT ] :-> AnyT, id = Id
     { name = "cond", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "nil", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ], [ AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con
       ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
       ( Data "runtime/malgo/Prelude.mlg.Cons" )
       [ SumT
        [ Con Tuple
         [ AnyT, [ SumT [ Con Tuple [] ] ] :-> AnyT ] ], AnyT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT
      [ Con
       ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
       ( Data "runtime/malgo/Prelude.mlg.Cons" )
       [ SumT
        [ Con Tuple [ AnyT, [ SumT [ Con Tuple [] ] ] :-> AnyT ] ], AnyT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "nil", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
         ( Data "runtime/malgo/Prelude.mlg.Cons" )
         [ SumT
          [ Con Tuple
           [ AnyT, [ SumT [ Con Tuple [] ] ] :-> AnyT ] ], AnyT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Prelude.mlg.Nil", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
           ( Data "runtime/malgo/Prelude.mlg.Cons" )
           [ SumT
            [ Con Tuple
             [ AnyT, [ SumT [ Con Tuple [] ] ] :-> AnyT ] ], AnyT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Prelude.mlg.Nil" ) [] ) []
       ( Assign
        ( Meta
         { meta = AnyT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
        ( Call
         ( Var
          ( Meta
           { meta = [ StringT ] :-> AnyT, id = Id
            { name = "String#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
         [ Unboxed ( String "no branch" ) ] )
        ( Assign
         ( Meta
          { meta = AnyT, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
         ( Cast AnyT
          ( Var
           ( Meta
            { meta = AnyT, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
         ( Assign
          ( Meta
           { meta = AnyT, id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
          ( Call
           ( Var
            ( Meta
             { meta = [ AnyT ] :-> AnyT, id = Id
              { name = "panic", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
           [ Var
            ( Meta
             { meta = AnyT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
          ( Cast AnyT
           ( Var
            ( Meta
             { meta = AnyT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ) ) ) ),
      ( Data "runtime/malgo/Prelude.mlg.Cons", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
           ( Data "runtime/malgo/Prelude.mlg.Cons" )
           [ SumT
            [ Con Tuple
             [ AnyT, [ SumT [ Con Tuple [] ] ] :-> AnyT ] ], AnyT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
       ( Con
        ( Data "runtime/malgo/Prelude.mlg.Cons" )
        [ SumT
         [ Con Tuple [ AnyT, [ SumT [ Con Tuple [] ] ] :-> AnyT ] ], AnyT ] )
       [ Meta
        { meta = SumT
         [ Con Tuple [ AnyT, [ SumT [ Con Tuple [] ] ] :-> AnyT ] ], id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, Meta
        { meta = AnyT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
       ( Switch
        ( Var
         ( Meta
          { meta = SumT
           [ Con Tuple [ AnyT, [ SumT [ Con Tuple [] ] ] :-> AnyT ] ], id = Id
           { name = "p", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
        [
         ( Tuple, Destruct
          ( Var
           ( Meta
            { meta = SumT
             [ Con Tuple
              [ AnyT, [ SumT [ Con Tuple [] ] ] :-> AnyT ] ], id = Id
             { name = "p", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
          ( Con Tuple [ AnyT, [ SumT [ Con Tuple [] ] ] :-> AnyT ] )
          [ Meta
           { meta = AnyT, id = Id
            { name = "p", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, Meta
           { meta =
            [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
            { name = "p", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
          ( Assign
           ( Meta
            { meta = SumT
             [ Con
              ( Data "runtime/malgo/Builtin.mlg.False" ) [], Con
              ( Data "runtime/malgo/Builtin.mlg.True" ) [] ], id = Id
             { name = "scrutinee", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
           ( Cast
            ( SumT
             [ Con
              ( Data "runtime/malgo/Builtin.mlg.False" ) [], Con
              ( Data "runtime/malgo/Builtin.mlg.True" ) [] ] )
            ( Var
             ( Meta
              { meta = AnyT, id = Id
               { name = "p", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
           ( Switch
            ( Var
             ( Meta
              { meta = SumT
               [ Con
                ( Data "runtime/malgo/Builtin.mlg.False" ) [], Con
                ( Data "runtime/malgo/Builtin.mlg.True" ) [] ], id = Id
               { name = "scrutinee", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
            [
             ( Data "runtime/malgo/Builtin.mlg.False", Destruct
              ( Var
               ( Meta
                { meta = SumT
                 [ Con
                  ( Data "runtime/malgo/Builtin.mlg.False" ) [], Con
                  ( Data "runtime/malgo/Builtin.mlg.True" ) [] ], id = Id
                 { name = "scrutinee", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
              ( Con ( Data "runtime/malgo/Builtin.mlg.False" ) [] ) []
              ( Assign
               ( Meta
                { meta = AnyT, id = Id
                 { name = "d", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
               ( Call
                ( Var
                 ( Meta
                  { meta = [ AnyT ] :-> AnyT, id = Id
                   { name = "cond", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } } ) )
                [ Var
                 ( Meta
                  { meta = AnyT, id = Id
                   { name = "p", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
               ( Cast AnyT
                ( Var
                 ( Meta
                  { meta = AnyT, id = Id
                   { name = "d", moduleName = Artifact
                    ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ) ),
             ( Data "runtime/malgo/Builtin.mlg.True", Destruct
              ( Var
               ( Meta
                { meta = SumT
                 [ Con
                  ( Data "runtime/malgo/Builtin.mlg.False" ) [], Con
                  ( Data "runtime/malgo/Builtin.mlg.True" ) [] ], id = Id
                 { name = "scrutinee", moduleName = Artifact
                  ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
              ( Con ( Data "runtime/malgo/Builtin.mlg.True" ) [] ) []
              ( Let
               [ LocalDef
                { _variable = Meta
                 { meta = SumT
                  [ Con Tuple [] ], id = Id
                  { name = "let", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, typ = SumT
                 [ Con Tuple [] ], _object = Pack
                 ( SumT [ Con Tuple [] ] )
                 ( Con Tuple [] ) [] } ]
               ( Assign
                ( Meta
                 { meta = AnyT, id = Id
                  { name = "d", moduleName = Artifact
                   ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
                ( Call
                 ( Var
                  ( Meta
                   { meta =
                    [ SumT [ Con Tuple [] ] ] :-> AnyT, id = Id
                    { name = "p", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
                 [ Var
                  ( Meta
                   { meta = SumT
                    [ Con Tuple [] ], id = Id
                    { name = "let", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
                ( Cast AnyT
                 ( Var
                  ( Meta
                   { meta = AnyT, id = Id
                    { name = "d", moduleName = Artifact
                     ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ) ) ) ] ( Error AnyT ) ) ) ) ] ( Error AnyT ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta = [ AnyT ] :-> AnyT, id = Id
     { name = "concatString", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "nil", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ], [ AnyT ] :-> AnyT, Assign
    ( Meta
     { meta = SumT
      [ Con
       ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
       ( Data "runtime/malgo/Prelude.mlg.Cons" )
       [ AnyT, AnyT ] ], id = Id
      { name = "scrutinee", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
    ( Cast
     ( SumT
      [ Con
       ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
       ( Data "runtime/malgo/Prelude.mlg.Cons" )
       [ AnyT, AnyT ] ] )
     ( Var
      ( Meta
       { meta = AnyT, id = Id
        { name = "nil", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
    ( Switch
     ( Var
      ( Meta
       { meta = SumT
        [ Con
         ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
         ( Data "runtime/malgo/Prelude.mlg.Cons" )
         [ AnyT, AnyT ] ], id = Id
        { name = "scrutinee", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
     [
      ( Data "runtime/malgo/Prelude.mlg.Nil", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
           ( Data "runtime/malgo/Prelude.mlg.Cons" )
           [ AnyT, AnyT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Prelude.mlg.Nil" ) [] ) []
       ( Assign
        ( Meta
         { meta = AnyT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
        ( Call
         ( Var
          ( Meta
           { meta = [ StringT ] :-> AnyT, id = Id
            { name = "String#", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
         [ Unboxed ( String "" ) ] )
        ( Cast AnyT
         ( Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ) ),
      ( Data "runtime/malgo/Prelude.mlg.Cons", Destruct
       ( Var
        ( Meta
         { meta = SumT
          [ Con
           ( Data "runtime/malgo/Prelude.mlg.Nil" ) [], Con
           ( Data "runtime/malgo/Prelude.mlg.Cons" )
           [ AnyT, AnyT ] ], id = Id
          { name = "scrutinee", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
       ( Con ( Data "runtime/malgo/Prelude.mlg.Cons" ) [ AnyT, AnyT ] )
       [ Meta
        { meta = AnyT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, Meta
        { meta = AnyT, id = Id
         { name = "p", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
       ( Assign
        ( Meta
         { meta = [ AnyT ] :-> AnyT, id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
        ( Call
         ( Var
          ( Meta
           { meta = [ AnyT ] :->
            ( [ AnyT ] :-> AnyT ), id = Id
            { name = "appendString", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
         [ Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "p", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
        ( Assign
         ( Meta
          { meta = [ AnyT ] :-> AnyT, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
         ( Cast
          ( [ AnyT ] :-> AnyT )
          ( Var
           ( Meta
            { meta = [ AnyT ] :-> AnyT, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
         ( Assign
          ( Meta
           { meta = AnyT, id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
          ( Call
           ( Var
            ( Meta
             { meta = [ AnyT ] :-> AnyT, id = Id
              { name = "concatString", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } } ) )
           [ Var
            ( Meta
             { meta = AnyT, id = Id
              { name = "p", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
          ( Assign
           ( Meta
            { meta = AnyT, id = Id
             { name = "d", moduleName = Artifact
              ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
           ( Cast AnyT
            ( Var
             ( Meta
              { meta = AnyT, id = Id
               { name = "d", moduleName = Artifact
                ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) )
           ( Assign
            ( Meta
             { meta = AnyT, id = Id
              { name = "d", moduleName = Artifact
               ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
            ( Call
             ( Var
              ( Meta
               { meta = [ AnyT ] :-> AnyT, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) )
             [ Var
              ( Meta
               { meta = AnyT, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] )
            ( Cast AnyT
             ( Var
              ( Meta
               { meta = AnyT, id = Id
                { name = "d", moduleName = Artifact
                 ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ) ] ( Error AnyT ) ) ),
   ( Meta
    { meta = [ AnyT ] :->
     ( [ [ AnyT ] :-> AnyT ] :-> AnyT ), id = Id
     { name = "case", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } },
    [ Meta
     { meta = AnyT, id = Id
      { name = "x", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ], [ AnyT ] :->
    ( [ [ AnyT ] :-> AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta =
       [ [ AnyT ] :-> AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, typ =
      [ [ AnyT ] :-> AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "f", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ AnyT, [ AnyT ] :-> AnyT ] :-> AnyT, id = Id
         { name = "case_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = [ AnyT ] :-> AnyT, id = Id
          { name = "f", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta =
        [ [ AnyT ] :-> AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta =
     [ [ AnyT ] :-> AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "dropWhileString", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } },
    [ Meta
     { meta = [ AnyT ] :-> AnyT, id = Id
      { name = "pred", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ],
    [ [ AnyT ] :-> AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "str", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ [ AnyT ] :-> AnyT, AnyT ] :-> AnyT, id = Id
         { name = "dropWhileString_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = [ AnyT ] :-> AnyT, id = Id
          { name = "pred", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "str", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta =
     [ [ AnyT ] :-> AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "takeWhileString", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } },
    [ Meta
     { meta = [ AnyT ] :-> AnyT, id = Id
      { name = "pred", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ],
    [ [ AnyT ] :-> AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "str", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ [ AnyT ] :-> AnyT, AnyT ] :-> AnyT, id = Id
         { name = "takeWhileString_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = [ AnyT ] :-> AnyT, id = Id
          { name = "pred", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "str", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta =
     [ [ AnyT ] :-> AnyT ] :->
     ( [ AnyT ] :-> AnyT ), id = Id
     { name = "<|", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } },
    [ Meta
     { meta = [ AnyT ] :-> AnyT, id = Id
      { name = "f", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ],
    [ [ AnyT ] :-> AnyT ] :->
    ( [ AnyT ] :-> AnyT ), Let
    [ LocalDef
     { _variable = Meta
      { meta = [ AnyT ] :-> AnyT, id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, typ = [ AnyT ] :-> AnyT, _object = Fun
      [ Meta
       { meta = AnyT, id = Id
        { name = "x", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ [ AnyT ] :-> AnyT, AnyT ] :-> AnyT, id = Id
         { name = "<|_curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = [ AnyT ] :-> AnyT, id = Id
          { name = "f", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "x", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta =
     [ [ AnyT ] :-> AnyT ] :->
     ( [ [ AnyT ] :-> AnyT ] :-> ( [ AnyT ] :-> AnyT ) ), id = Id
     { name = ".", moduleName = Artifact
      ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } },
    [ Meta
     { meta = [ AnyT ] :-> AnyT, id = Id
      { name = "f", moduleName = Artifact
       ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ],
    [ [ AnyT ] :-> AnyT ] :->
    ( [ [ AnyT ] :-> AnyT ] :-> ( [ AnyT ] :-> AnyT ) ), Let
    [ LocalDef
     { _variable = Meta
      { meta =
       [ [ AnyT ] :-> AnyT ] :->
       ( [ AnyT ] :-> AnyT ), id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } }, typ =
      [ [ AnyT ] :-> AnyT ] :->
      ( [ AnyT ] :-> AnyT ), _object = Fun
      [ Meta
       { meta = [ AnyT ] :-> AnyT, id = Id
        { name = "g", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ]
      ( CallDirect
       ( Meta
        { meta =
         [ [ AnyT ] :-> AnyT, [ AnyT ] :-> AnyT ] :->
         ( [ AnyT ] :-> AnyT ), id = Id
         { name = "._curry", moduleName = Artifact
          ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } )
       [ Var
        ( Meta
         { meta = [ AnyT ] :-> AnyT, id = Id
          { name = "f", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ), Var
        ( Meta
         { meta = [ AnyT ] :-> AnyT, id = Id
          { name = "g", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ] ) } ]
    ( Atom
     ( Var
      ( Meta
       { meta =
        [ [ AnyT ] :-> AnyT ] :->
        ( [ AnyT ] :-> AnyT ), id = Id
        { name = "let", moduleName = Artifact
         ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = Temporal } } ) ) ) ),
   ( Meta
    { meta =
     [ SumT [ Con Tuple [] ] ] :-> SumT
     [ Con Tuple [] ], id = Id
     { name = "main", moduleName = Artifact
      ( ArtifactPath "test/testcases/malgo/Echo.mlg" ), sort = External } },
    [ Meta
     { meta = SumT
      [ Con Tuple [] ], id = Id
      { name = "$_", moduleName = Artifact
       ( ArtifactPath "test/testcases/malgo/Echo.mlg" ), sort = Temporal } } ],
    [ SumT [ Con Tuple [] ] ] :-> SumT
    [ Con Tuple [] ], Let
    [ LocalDef
     { _variable = Meta
      { meta = SumT
       [ Con Tuple [] ], id = Id
       { name = "let", moduleName = Artifact
        ( ArtifactPath "test/testcases/malgo/Echo.mlg" ), sort = Temporal } }, typ = SumT
      [ Con Tuple [] ], _object = Pack
      ( SumT [ Con Tuple [] ] )
      ( Con Tuple [] ) [] } ]
    ( Assign
     ( Meta
      { meta = AnyT, id = Id
       { name = "cast", moduleName = Artifact
        ( ArtifactPath "test/testcases/malgo/Echo.mlg" ), sort = Temporal } } )
     ( Cast AnyT
      ( Var
       ( Meta
        { meta = SumT
         [ Con Tuple [] ], id = Id
         { name = "let", moduleName = Artifact
          ( ArtifactPath "test/testcases/malgo/Echo.mlg" ), sort = Temporal } } ) ) )
     ( Assign
      ( Meta
       { meta = AnyT, id = Id
        { name = "d", moduleName = Artifact
         ( ArtifactPath "test/testcases/malgo/Echo.mlg" ), sort = Temporal } } )
      ( Call
       ( Var
        ( Meta
         { meta = [ AnyT ] :-> AnyT, id = Id
          { name = "getContents", moduleName = Artifact
           ( ArtifactPath "runtime/malgo/Builtin.mlg" ), sort = External } } ) )
       [ Var
        ( Meta
         { meta = AnyT, id = Id
          { name = "cast", moduleName = Artifact
           ( ArtifactPath "test/testcases/malgo/Echo.mlg" ), sort = Temporal } } ) ] )
      ( Assign
       ( Meta
        { meta = AnyT, id = Id
         { name = "d", moduleName = Artifact
          ( ArtifactPath "test/testcases/malgo/Echo.mlg" ), sort = Temporal } } )
       ( Cast AnyT
        ( Var
         ( Meta
          { meta = AnyT, id = Id
           { name = "d", moduleName = Artifact
            ( ArtifactPath "test/testcases/malgo/Echo.mlg" ), sort = Temporal } } ) ) )
       ( Assign
        ( Meta
         { meta = SumT
          [ Con Tuple [] ], id = Id
          { name = "d", moduleName = Artifact
           ( ArtifactPath "test/testcases/malgo/Echo.mlg" ), sort = Temporal } } )
        ( Call
         ( Var
          ( Meta
           { meta = [ AnyT ] :-> SumT
            [ Con Tuple [] ], id = Id
            { name = "putStr", moduleName = Artifact
             ( ArtifactPath "runtime/malgo/Prelude.mlg" ), sort = External } } ) )
         [ Var
          ( Meta
           { meta = AnyT, id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath "test/testcases/malgo/Echo.mlg" ), sort = Temporal } } ) ] )
        ( Cast
         ( SumT [ Con Tuple [] ] )
         ( Var
          ( Meta
           { meta = SumT
            [ Con Tuple [] ], id = Id
            { name = "d", moduleName = Artifact
             ( ArtifactPath "test/testcases/malgo/Echo.mlg" ), sort = Temporal } } ) ) ) ) ) ) ) ) ], extFuns =
  [
   ( "malgo_panic", [ StringT ] :-> AnyT ),
   ( "malgo_unsafe_cast", [ AnyT ] :-> AnyT ),
   ( "malgo_add_int32_t", [ Int32T, Int32T ] :-> Int32T ),
   ( "malgo_sub_int32_t", [ Int32T, Int32T ] :-> Int32T ),
   ( "malgo_mul_int32_t", [ Int32T, Int32T ] :-> Int32T ),
   ( "malgo_div_int32_t", [ Int32T, Int32T ] :-> Int32T ),
   ( "malgo_add_int64_t", [ Int64T, Int64T ] :-> Int64T ),
   ( "malgo_sub_int64_t", [ Int64T, Int64T ] :-> Int64T ),
   ( "malgo_mul_int64_t", [ Int64T, Int64T ] :-> Int64T ),
   ( "malgo_div_int64_t", [ Int64T, Int64T ] :-> Int64T ),
   ( "malgo_add_float", [ FloatT, FloatT ] :-> FloatT ),
   ( "malgo_sub_float", [ FloatT, FloatT ] :-> FloatT ),
   ( "malgo_mul_float", [ FloatT, FloatT ] :-> FloatT ),
   ( "malgo_div_float", [ FloatT, FloatT ] :-> FloatT ),
   ( "malgo_add_double", [ DoubleT, DoubleT ] :-> DoubleT ),
   ( "malgo_sub_double", [ DoubleT, DoubleT ] :-> DoubleT ),
   ( "malgo_mul_double", [ DoubleT, DoubleT ] :-> DoubleT ),
   ( "malgo_div_double", [ DoubleT, DoubleT ] :-> DoubleT ),
   ( "sqrtf", [ FloatT ] :-> FloatT ),
   ( "sqrt", [ DoubleT ] :-> DoubleT ),
   ( "malgo_eq_int32_t", [ Int32T, Int32T ] :-> Int32T ),
   ( "malgo_ne_int32_t", [ Int32T, Int32T ] :-> Int32T ),
   ( "malgo_lt_int32_t", [ Int32T, Int32T ] :-> Int32T ),
   ( "malgo_gt_int32_t", [ Int32T, Int32T ] :-> Int32T ),
   ( "malgo_le_int32_t", [ Int32T, Int32T ] :-> Int32T ),
   ( "malgo_ge_int32_t", [ Int32T, Int32T ] :-> Int32T ),
   ( "malgo_eq_int64_t", [ Int64T, Int64T ] :-> Int32T ),
   ( "malgo_ne_int64_t", [ Int64T, Int64T ] :-> Int32T ),
   ( "malgo_lt_int64_t", [ Int64T, Int64T ] :-> Int32T ),
   ( "malgo_gt_int64_t", [ Int64T, Int64T ] :-> Int32T ),
   ( "malgo_le_int64_t", [ Int64T, Int64T ] :-> Int32T ),
   ( "malgo_ge_int64_t", [ Int64T, Int64T ] :-> Int32T ),
   ( "malgo_eq_float", [ FloatT, FloatT ] :-> Int32T ),
   ( "malgo_ne_float", [ FloatT, FloatT ] :-> Int32T ),
   ( "malgo_lt_float", [ FloatT, FloatT ] :-> Int32T ),
   ( "malgo_gt_float", [ FloatT, FloatT ] :-> Int32T ),
   ( "malgo_le_float", [ FloatT, FloatT ] :-> Int32T ),
   ( "malgo_ge_float", [ FloatT, FloatT ] :-> Int32T ),
   ( "malgo_eq_double", [ DoubleT, DoubleT ] :-> Int32T ),
   ( "malgo_ne_double", [ DoubleT, DoubleT ] :-> Int32T ),
   ( "malgo_lt_double", [ DoubleT, DoubleT ] :-> Int32T ),
   ( "malgo_gt_double", [ DoubleT, DoubleT ] :-> Int32T ),
   ( "malgo_le_double", [ DoubleT, DoubleT ] :-> Int32T ),
   ( "malgo_ge_double", [ DoubleT, DoubleT ] :-> Int32T ),
   ( "malgo_eq_char", [ CharT, CharT ] :-> Int32T ),
   ( "malgo_ne_char", [ CharT, CharT ] :-> Int32T ),
   ( "malgo_lt_char", [ CharT, CharT ] :-> Int32T ),
   ( "malgo_gt_char", [ CharT, CharT ] :-> Int32T ),
   ( "malgo_le_char", [ CharT, CharT ] :-> Int32T ),
   ( "malgo_ge_char", [ CharT, CharT ] :-> Int32T ),
   ( "malgo_eq_string", [ StringT, StringT ] :-> Int32T ),
   ( "malgo_ne_string", [ StringT, StringT ] :-> Int32T ),
   ( "malgo_lt_string", [ StringT, StringT ] :-> Int32T ),
   ( "malgo_gt_string", [ StringT, StringT ] :-> Int32T ),
   ( "malgo_le_string", [ StringT, StringT ] :-> Int32T ),
   ( "malgo_ge_string", [ StringT, StringT ] :-> Int32T ),
   ( "malgo_char_ord", [ CharT ] :-> Int32T ),
   ( "malgo_is_digit", [ CharT ] :-> Int32T ),
   ( "malgo_is_lower", [ CharT ] :-> Int32T ),
   ( "malgo_is_upper", [ CharT ] :-> Int32T ),
   ( "malgo_is_alphanum", [ CharT ] :-> Int32T ),
   ( "malgo_string_length", [ StringT ] :-> Int64T ),
   ( "malgo_string_at", [ Int64T, StringT ] :-> CharT ),
   ( "malgo_string_cons", [ CharT, StringT ] :-> StringT ),
   ( "malgo_string_append", [ StringT, StringT ] :-> StringT ),
   ( "malgo_substring", [ StringT, Int64T, Int64T ] :-> StringT ),
   ( "malgo_int32_t_to_string", [ Int32T ] :-> StringT ),
   ( "malgo_int64_t_to_string", [ Int64T ] :-> StringT ),
   ( "malgo_float_to_string", [ FloatT ] :-> StringT ),
   ( "malgo_double_to_string", [ DoubleT ] :-> StringT ),
   ( "malgo_char_to_string", [ CharT ] :-> StringT ),
   ( "malgo_exit_failure", [ SumT [ Con Tuple [] ] ] :-> AnyT ),
   ( "malgo_newline", [ SumT [ Con Tuple [] ] ] :-> SumT [ Con Tuple [] ] ),
   ( "malgo_print_char", [ CharT ] :-> SumT [ Con Tuple [] ] ),
   ( "malgo_print_string", [ StringT ] :-> SumT [ Con Tuple [] ] ),
   ( "malgo_flush", [ SumT [ Con Tuple [] ] ] :-> SumT [ Con Tuple [] ] ),
   ( "malgo_get_char", [ SumT [ Con Tuple [] ] ] :-> CharT ),
   ( "malgo_get_contents", [ SumT [ Con Tuple [] ] ] :-> StringT ) ] }