(module
   "test/testcases/malgo/TestLet.mlg"
   ((import "runtime/malgo/Builtin.mlg" all)
      (infix left 0 |>)
      (sig |> (-> a (-> (-> a b) b)))
      (def |> (fn ((clause (x f) (seq (do (apply f x)))))))
      (def
         main
         (fn
            ((clause
                ()
                (seq
                   (let x (apply (apply addInt32# (int32 2)) (int32 1)))
                   (do (apply printString# (seq (do (apply toStringInt32# x)))))
                   (let
                      x
                      (apply
                         Int32#
                         (seq (do (apply (apply addInt32# (int32 2)) (int32 1))))))
                   (let
                      printInt32
                      (fn
                         ((clause
                             ((con Int32# (x)))
                             (seq
                                (do
                                   (apply
                                      printString#
                                      (seq (do (apply toStringInt32# x))))))))))
                   (do (apply printInt32 x)))))))))