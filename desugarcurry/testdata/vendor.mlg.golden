(def vendor (codata (clause (access (call # (var items)) get) (seq (symbol :None))) (clause (access (access (call # (symbol :Nil)) put) get) (seq (prim print (literal "Nil case")) (prim print (symbol :Nil)) (symbol :None))) (clause (access (access (call # (call (call (symbol :Cons) (var x)) (var xs))) put) get) (seq (prim print (literal "Cons case")) (prim print (call (call (symbol :Cons) (var x)) (var xs))) (call (symbol :Some) (var x)))) (clause (access (access (call # (var items)) put) put) (seq (access (call (var vendor) (var items)) put)))))
(def main (codata (clause (call # (tuple)) (seq (prim print (access (access (call (var vendor) (call (call (symbol :Cons) (literal 0)) (symbol :Nil))) put) get))))))
