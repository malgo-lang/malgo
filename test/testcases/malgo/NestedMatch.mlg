-- In Core to LLVM code generation, the nested match somtimes causes code duplication.
-- NestedMatch.main can be compiled into efficient and compact code by Clang.
-- So now we don't care about code duplication on nested match.
-- Proof by example : https://godbolt.org/#z:OYLghAFBqRAWIDGB7AJgUwKKoJYBdkAnAGhxAgDMcAbdAOwEMBbdEAcgEY3iLk68Ayoga0QHACw8%2BeAKoBndAAUAHuwAM3AFYgATMWoM6oatQBuTYgtqI8OPuXqoAwsmoBXJnTHFHAGRx06AByHgBG6IS6OmrEAA7Icvh2dC7unt7xibZ8/oEhTOGROtGW6NbZdAJ4DIR4qR5eHKXlyVU1eLnBYRFRMXLVtfXpTf3tnfmFvQCUlshuhIisbACkAMwAQgDUALJobrQAkgAim2snYGwAdAD0eOj9t/d4wgpy10wiwMjXQU/oqNsGM84JcmNRgBdlmoAIJyOYLdAAfSotEYLFOqxOy2KNzuDzxzwYr3en2%2Bv36/0BwNB4OxOih0IZAAE6eS7gCgYgQQASYChaiIahyREfcHIRGxQgBPCI/pSoyInQAVjpGJOwGoyFCIk2sTwhE2bjoGAozNZfw51N5/MFwtFX0R6GU%2BGRDBo8yRHFNxTVmw1Wp1eoNRpNzLlHA4St9RrR/0RDFQqANKDoo34pyV61Wm2UmxwAA5lkqTog6QB5ADSRacajUdLD%2BojADZo3RY6h44nk3w03gM1mc3nC8XNqXipXq7X6zCmeGOAB2VvtztJ0c96rposD3MFosl8tVpU1uvFBuECP5pfMOMJ1cp3v97M74f78eH4/TxkwjCCmroTamMgOCoJsTIAOJOIiAT4BAUwMgyP4GIQ/5BqB9ripK0qyvqATABAQZwTCCHoL%2ByG6vqaGko6zoyhQbruMh%2BH6oRX7QiaAQoRRTJspSnIguh1EunR7rIYiiDzIQACeTEGtiKrFDxlpcpc3KxIiHCIIiJ46FMpzzusDKbKcyocL6wgmORBpMgJTpCfRHoycZ8k6IpVLKap6madpLFGchfaoXJHDwfORzwd%2B6BUIElmga5fGglRmH8Nh8rAGJEnSQFyrmhSSk8mpHChFpdK6cs%2BmGU5plnKOIjUNF1kJfKMpyrhjlydl7JuXl6mFd55V%2BdFgXBaFRHhaRnFWQJoqaogEA4E24gscRkXjTFFqdZcAAqhBuOgsF6QZMJGYFZk1XVk01cgM1zeIlkENKmyOcA6B3LQLD8KhAShHMxpyA9pVbAWxD7aVWIhUDqF0Ps1BAzgqw6JsHC6QQebzVMPlOfDVVPS96BvXgAX6UOQP/SDelHODFGBTDcObDEeY03Wh2bP0RD/gWCMU7Jyp6JsIg4MAdAI31z0DSZQ1hWxEUcXVsXUgJiVNThRitVlClrXFHkFUVxQlWVTPHVV5m1ah9VihKjXJS1mXObL7n5T1xXC/5lNi0RIUS%2BxUUm7b/FunQaWEFJKs2%2BrVrcoi6n5upHbecD%2BsmSdFkm%2BdJiXbN823UB6aPc9ZS4/Q%2BMUZ932oL9ED/UTwMhWTnObJDJjU/DiObMj11o%2BVcmY5ifq569BcEwD%2BbE2V1cg7XVP0/DdOw1P5Us2R7N09bPN8wLQvx0q2ZY73%2BfvZThOA1XoPk6LSpNJPtON7THfKjdVWagmlfW6sQOr4LQVM3IADu%2BBckOTmSE2AYcItU5Lf1/nAREJoGD7BlJjTM5UjKLyBsAsoTlwHAkRKEQghguSIh9pcAAYiIBQRUmZIMvOfVBoDlQYLwdg3BkCCFbR2upDuxYJZ0MgQwugeCCHEKFEiNQIAjKiLEeIo6GxdTIVLr6OSjNoRHWVFGQ2p1k5USmmna6md7o5xxnjD6dAvohjLhXQ%2BJNR5g2ivXaGF9m6t1RujOSLZt76P7vvQew8DKWJPtbJUV9p4MzngQBelDx7KibK/ag/N343yVIuVxecDEeMrhY4%2B4SlT%2BIvoE2eG9Lz32QI/Q%2B1t5xRJievRRzMf7An/nJIeQCGAgPQdUvB0DYFaX7Ig/%2BdNqHNIgVgnBvCmGh2UgI0hH9KkUI5g0ppYCWncMGXwkZIIWFCPYcNViXCBmMPwcsohJDPQiIkccyRWxJT/F%2BlVOZ/SeFLJyutMZayN4AE5E7Gy4inaa6cbpBjutnVC2MknuINMXExf0D71LSTXaxUMr72OQCjBaTiTJqF9ICvue9ZIQq8aTMep9nkBICcE1m3SMkcDpm/CpSiz6VW7kbM6VFbK0Xsoxa2zz0b9WthGTh8ztlDN2fcuKqytJHJOcctYZyZGXO7tczBtzhmCupI8shlTApdxLGoj5DUsLNWVibOcSoOUiy5fSEasJeVtOoDKYRYrbV2tERK6RFy5G0N5fKgVHU4rKoUUZI0yEGBckabQHlNzFkKs9dSYVHBRX2tOU62RVzlQ%2BoqlvOlmqJoaIuldDOvys59j0UCzFeYjEl1Mdio%2B0KIawrsUjBFbdkVnzvt3dFu9C5Ys8RWvFXKX7ZKJZ/EJbNLxLxdo2spa8JnUsjGineyT22pJHuk0%2BHAe0z0vtkuJHAXHdwfiBYpI7IxjtiZ/eZtSTKRJmWg2VrSIowKtepTp5DSUXpoUqLZ7r%2BEHMVF09mVDGmXtdaGnZzDtpIlNaqjhZq31ho9bxJVn6dAxvtY685CaZUAbldB4DrCJ0VQSWmpOWqzaaOzT8/Ufz80ApncC4txifrgo7VCrtFEbFwtrYi9uG8OD5ObVRotZjIULsrfu0pvb139pJcgpd9TKU4cCq81RBGM1myZa6ESu0uXziNc7LmZ9nkhow0BvZwqEOxrEchqVLrX1usw0ZkDbCN7RDeQys2CtLZ6q4nOJsWnT7RH09eui7To2meC2ZqRKHpVYnQ/QmzirlJRvKn69AAa4BBvQH5yBlq4GIZC0hsLFnE1KmTYl5LqXxZms9itbieybI0VUwxdTI72qwbtp5bWOk46qoTgp95SmHQqeEvV4OTXcoqXyl5R2TNOX7rK6xCrMs9mPL2iTTjTn1FEazd8nR/yKIttnTR0t9H53eMXVWhuNaW51scXE9VPc3F8fLYxqxXLCVicqfPQda7l6HqpZsKbOmJkgw9lLL2XECEfACENtWsWeTh0jtHNrusDqdbPqtwjDpiObdzboyjd2237bBeXB7gmmMGhY%2BdhxSLrvTtxwPI7uKnv7pe6u5N72n1fd5tE8dcTU3ql43j/jOKfFkqZ0EjeTaTg7qfiOntMm54nvZnJQBvSr0ZZve0%2BBSOxGSeV1FhZhnof7MESqrXYTn19IM/yrDnp1npb5XciNozP02uC%2BZ51BXk1yRUfhnrlF1upxI1tijO2%2BeGNo7IwnDHicM9J9W1d8L2MNq3bzmnKTzFR98SOrJzO%2B1vYHf/c%2B1tz2y43nh5Phb%2BdE%2BO0JnTWeGY5%2BpdxiXhTd31JKd9nDXDT1KnqTrqz/TMsdK3N%2BodKC/0vqg/rh3IJlU4amb%2B2Zuu7fhuaysuzHuIObOs5PlfhvxnZdta71DkW%2B8W/tzv71cT5Pe%2Bc%2Bjjb2isfbYNLt6joK6MR7p0LmFZ249sfrRu1FiSGKFekeVeJOTkBKomzOxKoSn2%2B6FKnOR6yOEYqOvW4o/WLKDWOm7KTsS6AOMIE%2BlutmrCzuLueWbuaGJ%2B0W2%2BI2F%2BnGN29Ka2DormuqeE%2BqjYC43mJqtuA%2BJBOWsah%2BEW5uVBhBButBlSxWga/IaWkGW%2BIhU%2Bm0dmQWIWAhlmHuJkPO1Uimvut%2B/umOZGeaD0OO5eoeB27%2BaeoB0edcseNM8ef%2BnG4ut2xhqeAmFhGe/2K6der2RkrOkmXKgCxeSBXuZeQBtO5h9ObhKaIuuSSBSeQCzeUu/2WSAR3h8u%2BSZ6o%2BC%2BlBquAWd6lUCCj62uY%2BQheuch5%2B8Gw%2B0yveBBZ%2BI2xmNuMhgGpRNB8G%2B%2BYqKhBW1Ry%2BtRihG6pemhPupsOhXy9%2B%2Bh2OweKeIKJaBOAunalhZOP%2BF2CeG6jejhIRzhguJ2wmUR184mMBw6/20mCBP2cmKB2haBtWA2DkGmnB%2B6emDRp%2BXR60xmrRbRZBR%2BxRS%2BMG3R2G12AB1%2BjBGEFsLBjks47B%2BYNxOmvm9x/mt6MoShfB/BbxghKunxVu9m4hdA/qkhwa0J2RsJioLxCJ4i7RFBRWmJSW2J0hjI7s5WwObMNM9UEOiO5U9KgEwEoEEEUEdAME6MrJQEIETIAA1kQDgGUIiDul8Z1LBBuqcYMeKBjiMbUAYQWmsZMWHmWiAeEbXPMTYb/ldg5tTk4XOmEZ/s9pAaLrnhJiPj5u3tzrKWDn7MHIjDgVAW7BsktNLNKBEIwAMcNutNiKsBQEaCKNqklCwYqE2GJJqHIB6IiPOKEHSMHPsRVMyRvBoQwWjoCTqkrKwfuhCU5KsDNh6VFF6YQD6XVH6XFAGUGf7DVnZGpoqGoFGQkLGfOGODoEmWSqmcjumemmcYJMympk6fmXJIWW6UDstABPyaBMKVKGKRKT7EtnrEgbKZ8lojmqMY/qsa2iYdMYTEGOPHMdYU3HqZThvDWSGS5kCTmRGWJAwHqLGX8RqloXKZecMRuUqWMU/iHkXFMW/mktqceQjKeRxsjhefLNeSlLecIA%2BaJLSsETuSkgeQNJYRPNnl4czHntbOBaGYrFBToJGTBXgI%2BRkjhVedmfhYRfecRXBd9oWOecGRBRRbhLeTWV5IaaqftJZIeREWhZ4XHtAZVpWdSNWYxbhW5qlARc2TGaJPGXSKRWJeRWGTeVJWxVpHRYJUurXCyFDvIdaAKEKJeUwZBSxarCvEcfRcjvQX2a%2BQqR%2BeRoYeMUafjv%2BfufqDxYBd/rqYsXYWBYpX1hcRgY2XebBUIquZmroYqQ5SqYhWqaYQBV/rYgsRTqBdSmRQFfWfVsFURbGfBduXthXMhQTLxdzNsSzlhSOulecZlbGdECFTRUIgpbWYyoFQ2XVTlbRRzuUpZWlf5dVYOVlXVWpU%2BfldRoVe5ShSVUqDzOhQJbsUJbpTvqJc1cpq1YNU2YKC2bJe2U1UZf1XVrVU2cNRpfNTaRWYtSNvpbaHtQOQdXBd6OZd1TgWyagDNmwDMNQOwEqNwF4GwBoMQMgOwL4L4AAGrbCbAHAABKzM8IiwxkcM3AeA6g71xA8AIAJg5gZYeoigOAsQZQHEINopX8pA5AbAAAtBQHQMgGTbgHIMIIQKgGTaYCIDtGTbGHIGwMjcQCgEwLEDQBEEENeOwCYIgA9PqEaIKVMNwBgB8EYLQGTXIJJAUK4HIFzagB4LEBTVDGTUwHsKIJwNwP8PgCKagLoDwDQHcIQDTegKEG4MAGTQELwFzSiJbQ7bwj2OgAAI47T8A4AiBk2xBEivDsBcDm1WoRBu1yhuA2DJA63PQJhAgMDO3SBCAiCsASBSD8DyBKCqB/VaDeBWAkTsiEJGgx32AOkBABxSTNBF3/AHDGhOggDPL%2BKJAYDaiEAADqwEeACASaxA%2Bo6A6AwEIAagH1X1P1XNgNbAwNYNmwWNfYONeN0SUUhN6AX8EQQCAoYt20dAktD02AxtXMcMQMLgvN/NR9iMiNyNMwaNPNfNtAJAZAEAd9596NAo4tu9xAGApgOAiwq9X8WN9AId3ALtEQqtEAoQXNoQAQNQkkwDxA0DjAUkZYoQmgRd8DPNeMZYdA1AcDedX9NtdtTgNUqtBtBDstGoSw/1uAyEMdpg9wXNToJEbgdw8DXpn1%2BD0SDCUkLgGAXNOETAwDMwFABgwAcg/9gDv1odvA/AqdogGdMjsgCgKgXN2gTQBgRgb95g%2BgOAoQqtkAMwyAeoyQpDZNZYqw3AyA9DgcwEDDBjNdZdXgEAjgQwjQPgxo4w3QkQTQmQSQfArjGQCQfjdAnjBQPQIwecjjbQgwrgDQBdkTFQ0THQHEEw4TlgAwdQsTww6TYwKTXjYgMwcI8wiwugY9bA31xAv1/1U9m9otEAH9e9EAB9IS8NOkV9edaMxAgpYgtY%2Bg7A4gE9%2BDU93AqtegSNHTMw1jiQ9g4gQAA%3D
data Bool = False | True
data Bool1 = False1 | True1
data Bool2 = False2 | True2


foreign import malgo_print_string : String# -> ()

foreign import malgo_exit_failure : () -> a

def main = {
  { True -> malgo_print_string "OK"#,
    False -> malgo_exit_failure () }
    ({ True1 -> False,
       False1 -> True} 
    ({ True2 -> False1,
       False2 -> True1 } True2))
}
