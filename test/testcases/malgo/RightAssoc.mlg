module {..} = import "../../../runtime/malgo/Builtin.mlg"
module {..} = import "../../../runtime/malgo/Prelude.mlg"

infixr 2 (<|>)
def (<|>) : a -> List a -> List a
def (<|>) = Cons

def f = { n ->
  -- fixed: https://github.com/malgo-lang/malgo/commit/b499a897271ea32ffe55d5e15aaa0e3138479f58

  -- slow
  let x = {True, { 1 }}
           <|> (({True, { 2 }})
                <|> (({True, { 3 }})
                     <|> (({True, { 4 }})
                           <|> Nil)));

  -- fast, but type error on {True, { 3 }}
  let y = {True, { 1 }}
           <|> {True, { 2 }}
                <|> {True, { 3 }}
                     <|> {True, { 4 }}
                          <|> Nil;
  y

  -- fast
  -- {True, { 1 }}
  -- <|> {True, { 2 }}
  --      <|> (({True, { 3 }})
  --           <|> {True, { 4 }}
  --                <|> Nil)
}

def main : { {} }
def main = {
  let x = f 4;
  printString "OK"
}
