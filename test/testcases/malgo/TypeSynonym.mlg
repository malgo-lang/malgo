module {..} = import "../../../runtime/malgo/Builtin.mlg"
module {..} = import "../../../runtime/malgo/Prelude.mlg"

type MyTuple a = {a, a}

type MyString = String

def hello : MyTuple MyString
def hello = {"hello", "world"}

data T = TCon
type S = T

def idOverS : S -> T
def idOverS = { x -> x }

def main : { () }
def main = {
  hello |> { {h, w} -> putStr h; putStr " "; putStrLn w }
}
