DEF "def" testdata/block.mlg:1:1
IDENT "print" testdata/block.mlg:1:5
EQUAL "=" testdata/block.mlg:1:11
LEFTBRACE "{" testdata/block.mlg:1:13
SHARP "#" testdata/block.mlg:2:3
LEFTPAREN "(" testdata/block.mlg:2:4
IDENT "x" testdata/block.mlg:2:5
RIGHTPAREN ")" testdata/block.mlg:2:6
LEFTPAREN "(" testdata/block.mlg:2:7
IDENT "k" testdata/block.mlg:2:8
RIGHTPAREN ")" testdata/block.mlg:2:9
ARROW "->" testdata/block.mlg:2:11
PRIM "prim" testdata/block.mlg:2:14
LEFTPAREN "(" testdata/block.mlg:2:18
IDENT "print" testdata/block.mlg:2:19
COMMA "," testdata/block.mlg:2:24
IDENT "x" testdata/block.mlg:2:26
RIGHTPAREN ")" testdata/block.mlg:2:27
SEMICOLON ";" testdata/block.mlg:2:28
IDENT "k" testdata/block.mlg:2:30
LEFTPAREN "(" testdata/block.mlg:2:31
RIGHTPAREN ")" testdata/block.mlg:2:32
RIGHTBRACE "}" testdata/block.mlg:3:1
DEF "def" testdata/block.mlg:5:1
IDENT "main" testdata/block.mlg:5:5
EQUAL "=" testdata/block.mlg:5:10
LEFTBRACE "{" testdata/block.mlg:5:12
PRIM "prim" testdata/block.mlg:6:3
LEFTPAREN "(" testdata/block.mlg:6:7
IDENT "print_trace" testdata/block.mlg:6:8
COMMA "," testdata/block.mlg:6:19
IDENT "print" testdata/block.mlg:6:21
LEFTPAREN "(" testdata/block.mlg:6:26
INTEGER "0" testdata/block.mlg:6:27
RIGHTPAREN ")" testdata/block.mlg:6:28
LEFTBRACE "{" testdata/block.mlg:6:30
WITH "with" testdata/block.mlg:7:5
IDENT "print" testdata/block.mlg:7:10
LEFTPAREN "(" testdata/block.mlg:7:15
INTEGER "1" testdata/block.mlg:7:16
RIGHTPAREN ")" testdata/block.mlg:7:17
SEMICOLON ";" testdata/block.mlg:7:18
INTEGER "0" testdata/block.mlg:8:5
RIGHTBRACE "}" testdata/block.mlg:9:3
RIGHTPAREN ")" testdata/block.mlg:9:4
RIGHTBRACE "}" testdata/block.mlg:10:1
EOF "" testdata/block.mlg:10:2
