DEF "def" testdata/twice.mlg:1:1
IDENT "add" testdata/twice.mlg:1:5
EQUAL "=" testdata/twice.mlg:1:9
LEFTBRACE "{" testdata/twice.mlg:1:11
LEFTPAREN "(" testdata/twice.mlg:1:13
IDENT "x" testdata/twice.mlg:1:14
COMMA "," testdata/twice.mlg:1:15
IDENT "y" testdata/twice.mlg:1:17
RIGHTPAREN ")" testdata/twice.mlg:1:18
ARROW "->" testdata/twice.mlg:1:20
PRIM "prim" testdata/twice.mlg:1:23
LEFTPAREN "(" testdata/twice.mlg:1:27
IDENT "add" testdata/twice.mlg:1:28
COMMA "," testdata/twice.mlg:1:31
IDENT "x" testdata/twice.mlg:1:33
COMMA "," testdata/twice.mlg:1:34
IDENT "y" testdata/twice.mlg:1:36
RIGHTPAREN ")" testdata/twice.mlg:1:37
RIGHTBRACE "}" testdata/twice.mlg:1:39
DEF "def" testdata/twice.mlg:2:1
IDENT "main" testdata/twice.mlg:2:5
EQUAL "=" testdata/twice.mlg:2:10
LEFTBRACE "{" testdata/twice.mlg:2:12
LET "let" testdata/twice.mlg:3:3
IDENT "add1" testdata/twice.mlg:3:7
EQUAL "=" testdata/twice.mlg:3:12
IDENT "add" testdata/twice.mlg:3:14
LEFTPAREN "(" testdata/twice.mlg:3:17
INTEGER "1" testdata/twice.mlg:3:18
RIGHTPAREN ")" testdata/twice.mlg:3:19
SEMICOLON ";" testdata/twice.mlg:3:20
PRIM "prim" testdata/twice.mlg:4:3
LEFTPAREN "(" testdata/twice.mlg:4:7
IDENT "print" testdata/twice.mlg:4:8
COMMA "," testdata/twice.mlg:4:13
IDENT "add1" testdata/twice.mlg:4:15
LEFTPAREN "(" testdata/twice.mlg:4:19
INTEGER "2" testdata/twice.mlg:4:20
RIGHTPAREN ")" testdata/twice.mlg:4:21
RIGHTPAREN ")" testdata/twice.mlg:4:22
SEMICOLON ";" testdata/twice.mlg:4:23
PRIM "prim" testdata/twice.mlg:5:3
LEFTPAREN "(" testdata/twice.mlg:5:7
IDENT "print" testdata/twice.mlg:5:8
COMMA "," testdata/twice.mlg:5:13
IDENT "add1" testdata/twice.mlg:5:15
LEFTPAREN "(" testdata/twice.mlg:5:19
INTEGER "3" testdata/twice.mlg:5:20
RIGHTPAREN ")" testdata/twice.mlg:5:21
RIGHTPAREN ")" testdata/twice.mlg:5:22
RIGHTBRACE "}" testdata/twice.mlg:6:1
EOF "" testdata/twice.mlg:6:2
