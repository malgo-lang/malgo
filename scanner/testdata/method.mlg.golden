DEF "def" testdata/method.mlg:1:1
IDENT "printer" testdata/method.mlg:1:5
EQUAL "=" testdata/method.mlg:1:13
LEFTBRACE "{" testdata/method.mlg:1:15
SHARP "#" testdata/method.mlg:2:3
DOT "." testdata/method.mlg:2:4
IDENT "print" testdata/method.mlg:2:5
ARROW "->" testdata/method.mlg:2:11
LEFTBRACE "{" testdata/method.mlg:2:14
IDENT "x" testdata/method.mlg:2:16
ARROW "->" testdata/method.mlg:2:18
PRIM "prim" testdata/method.mlg:2:21
LEFTPAREN "(" testdata/method.mlg:2:25
IDENT "print" testdata/method.mlg:2:26
COMMA "," testdata/method.mlg:2:31
IDENT "x" testdata/method.mlg:2:33
RIGHTPAREN ")" testdata/method.mlg:2:34
RIGHTBRACE "}" testdata/method.mlg:2:36
COMMA "," testdata/method.mlg:2:37
RIGHTBRACE "}" testdata/method.mlg:3:1
DEF "def" testdata/method.mlg:4:1
IDENT "main" testdata/method.mlg:4:5
EQUAL "=" testdata/method.mlg:4:10
LEFTBRACE "{" testdata/method.mlg:4:12
IDENT "printer" testdata/method.mlg:4:14
DOT "." testdata/method.mlg:4:21
IDENT "print" testdata/method.mlg:4:22
LEFTPAREN "(" testdata/method.mlg:4:27
INTEGER "1" testdata/method.mlg:4:28
RIGHTPAREN ")" testdata/method.mlg:4:29
RIGHTBRACE "}" testdata/method.mlg:4:31
EOF "" testdata/method.mlg:4:32
