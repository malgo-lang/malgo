DEF "def" testdata/symbol.mlg:1:1
IDENT "map" testdata/symbol.mlg:1:5
EQUAL "=" testdata/symbol.mlg:1:9
LEFTBRACE "{" testdata/symbol.mlg:1:11
SHARP "#" testdata/symbol.mlg:2:3
LEFTPAREN "(" testdata/symbol.mlg:2:4
IDENT "f" testdata/symbol.mlg:2:5
COMMA "," testdata/symbol.mlg:2:6
SYMBOL "Nil" testdata/symbol.mlg:2:8
RIGHTPAREN ")" testdata/symbol.mlg:2:12
ARROW "->" testdata/symbol.mlg:2:14
SYMBOL "Nil" testdata/symbol.mlg:2:17
COMMA "," testdata/symbol.mlg:2:21
SHARP "#" testdata/symbol.mlg:3:3
LEFTPAREN "(" testdata/symbol.mlg:3:4
IDENT "f" testdata/symbol.mlg:3:5
COMMA "," testdata/symbol.mlg:3:6
SYMBOL "Cons" testdata/symbol.mlg:3:8
LEFTPAREN "(" testdata/symbol.mlg:3:13
IDENT "x" testdata/symbol.mlg:3:14
COMMA "," testdata/symbol.mlg:3:15
IDENT "xs" testdata/symbol.mlg:3:17
RIGHTPAREN ")" testdata/symbol.mlg:3:19
RIGHTPAREN ")" testdata/symbol.mlg:3:20
ARROW "->" testdata/symbol.mlg:3:22
SYMBOL "Cons" testdata/symbol.mlg:3:25
LEFTPAREN "(" testdata/symbol.mlg:3:30
IDENT "f" testdata/symbol.mlg:3:31
LEFTPAREN "(" testdata/symbol.mlg:3:32
IDENT "x" testdata/symbol.mlg:3:33
RIGHTPAREN ")" testdata/symbol.mlg:3:34
COMMA "," testdata/symbol.mlg:3:35
IDENT "map" testdata/symbol.mlg:3:37
LEFTPAREN "(" testdata/symbol.mlg:3:40
IDENT "f" testdata/symbol.mlg:3:41
COMMA "," testdata/symbol.mlg:3:42
IDENT "xs" testdata/symbol.mlg:3:44
RIGHTPAREN ")" testdata/symbol.mlg:3:46
RIGHTPAREN ")" testdata/symbol.mlg:3:47
RIGHTBRACE "}" testdata/symbol.mlg:4:1
DEF "def" testdata/symbol.mlg:5:1
IDENT "main" testdata/symbol.mlg:5:5
EQUAL "=" testdata/symbol.mlg:5:10
LEFTBRACE "{" testdata/symbol.mlg:5:12
LET "let" testdata/symbol.mlg:6:3
IDENT "xs" testdata/symbol.mlg:6:7
EQUAL "=" testdata/symbol.mlg:6:10
SYMBOL "Cons" testdata/symbol.mlg:6:12
LEFTPAREN "(" testdata/symbol.mlg:6:17
INTEGER "1" testdata/symbol.mlg:6:18
COMMA "," testdata/symbol.mlg:6:19
SYMBOL "Cons" testdata/symbol.mlg:6:21
LEFTPAREN "(" testdata/symbol.mlg:6:26
INTEGER "2" testdata/symbol.mlg:6:27
COMMA "," testdata/symbol.mlg:6:28
SYMBOL "Cons" testdata/symbol.mlg:6:30
LEFTPAREN "(" testdata/symbol.mlg:6:35
INTEGER "3" testdata/symbol.mlg:6:36
COMMA "," testdata/symbol.mlg:6:37
SYMBOL "Nil" testdata/symbol.mlg:6:39
RIGHTPAREN ")" testdata/symbol.mlg:6:43
RIGHTPAREN ")" testdata/symbol.mlg:6:44
RIGHTPAREN ")" testdata/symbol.mlg:6:45
SEMICOLON ";" testdata/symbol.mlg:6:46
LET "let" testdata/symbol.mlg:7:3
IDENT "xs1" testdata/symbol.mlg:7:7
EQUAL "=" testdata/symbol.mlg:7:11
IDENT "map" testdata/symbol.mlg:7:13
LEFTPAREN "(" testdata/symbol.mlg:7:16
LEFTBRACE "{" testdata/symbol.mlg:7:17
IDENT "x" testdata/symbol.mlg:7:19
ARROW "->" testdata/symbol.mlg:7:21
PRIM "prim" testdata/symbol.mlg:7:24
LEFTPAREN "(" testdata/symbol.mlg:7:28
IDENT "add" testdata/symbol.mlg:7:29
COMMA "," testdata/symbol.mlg:7:32
IDENT "x" testdata/symbol.mlg:7:34
COMMA "," testdata/symbol.mlg:7:35
INTEGER "1" testdata/symbol.mlg:7:37
RIGHTPAREN ")" testdata/symbol.mlg:7:38
RIGHTBRACE "}" testdata/symbol.mlg:7:40
COMMA "," testdata/symbol.mlg:7:41
IDENT "xs" testdata/symbol.mlg:7:43
RIGHTPAREN ")" testdata/symbol.mlg:7:45
SEMICOLON ";" testdata/symbol.mlg:7:46
IDENT "map" testdata/symbol.mlg:8:3
LEFTPAREN "(" testdata/symbol.mlg:8:6
LEFTBRACE "{" testdata/symbol.mlg:8:7
IDENT "x" testdata/symbol.mlg:8:9
ARROW "->" testdata/symbol.mlg:8:11
PRIM "prim" testdata/symbol.mlg:8:14
LEFTPAREN "(" testdata/symbol.mlg:8:18
IDENT "print" testdata/symbol.mlg:8:19
COMMA "," testdata/symbol.mlg:8:24
IDENT "x" testdata/symbol.mlg:8:26
RIGHTPAREN ")" testdata/symbol.mlg:8:27
RIGHTBRACE "}" testdata/symbol.mlg:8:29
COMMA "," testdata/symbol.mlg:8:30
IDENT "xs1" testdata/symbol.mlg:8:32
RIGHTPAREN ")" testdata/symbol.mlg:8:35
SEMICOLON ";" testdata/symbol.mlg:8:36
PRIM "prim" testdata/symbol.mlg:9:3
LEFTPAREN "(" testdata/symbol.mlg:9:7
IDENT "print_trace" testdata/symbol.mlg:9:8
COMMA "," testdata/symbol.mlg:9:19
IDENT "xs1" testdata/symbol.mlg:9:21
RIGHTPAREN ")" testdata/symbol.mlg:9:24
RIGHTBRACE "}" testdata/symbol.mlg:10:1
EOF "" testdata/symbol.mlg:10:2
