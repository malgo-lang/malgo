module FieldPrefix = {
  module {..} = import Builtin;
  module {..} = import Prelude;

  type Point2D = { x : Int32, y : Int32 };

  type Point3D = { x : Float, y : Float, z : Float };

  print2D = { { x = x, y = y } ->
    printString (toStringInt32 x);
    printString ", ";
    printString (toStringInt32 y)
  };

  x2D : Point2D -> Int32;
  x2D = { { x = x, y = _ } -> x };

  y2D : Point2D -> Int32;
  y2D = { { x = _, y = y } -> y };

  print2D' = { xy ->
    printString (toStringInt32 (x2D xy));
    printString ", ";
    printString (toStringInt32 (y2D xy))
  };
  
  zero2D : Point2D;
  zero2D = { x = 0, y = 0 };

  zero3D : Point3D;
  zero3D = { x = 0.0F, y = 0.0F, z = 0.0F };

  main = {
    print2D zero2D
  };
}

-- Expected: 0, 0
