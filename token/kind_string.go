// Code generated by "stringer -type=Kind"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EOF-0]
	_ = x[LEFTPAREN-1]
	_ = x[RIGHTPAREN-2]
	_ = x[LEFTBRACE-3]
	_ = x[RIGHTBRACE-4]
	_ = x[LEFTBRACKET-5]
	_ = x[RIGHTBRACKET-6]
	_ = x[COLON-7]
	_ = x[COMMA-8]
	_ = x[DOT-9]
	_ = x[SEMICOLON-10]
	_ = x[SHARP-11]
	_ = x[IDENT-12]
	_ = x[OPERATOR-13]
	_ = x[INTEGER-14]
	_ = x[STRING-15]
	_ = x[SYMBOL-16]
	_ = x[ARROW-17]
	_ = x[BACKARROW-18]
	_ = x[BAR-19]
	_ = x[CASE-20]
	_ = x[DATA-21]
	_ = x[DEF-22]
	_ = x[EQUAL-23]
	_ = x[FN-24]
	_ = x[INFIX-25]
	_ = x[INFIXL-26]
	_ = x[INFIXR-27]
	_ = x[LET-28]
	_ = x[PRIM-29]
	_ = x[TYPE-30]
	_ = x[WITH-31]
}

const _Kind_name = "EOFLEFTPARENRIGHTPARENLEFTBRACERIGHTBRACELEFTBRACKETRIGHTBRACKETCOLONCOMMADOTSEMICOLONSHARPIDENTOPERATORINTEGERSTRINGSYMBOLARROWBACKARROWBARCASEDATADEFEQUALFNINFIXINFIXLINFIXRLETPRIMTYPEWITH"

var _Kind_index = [...]uint8{0, 3, 12, 22, 31, 41, 52, 64, 69, 74, 77, 86, 91, 96, 104, 111, 117, 123, 128, 137, 140, 144, 148, 151, 156, 158, 163, 169, 175, 178, 182, 186, 190}

func (i Kind) String() string {
	if i < 0 || i >= Kind(len(_Kind_index)-1) {
		return "Kind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Kind_name[_Kind_index[i]:_Kind_index[i+1]]
}
