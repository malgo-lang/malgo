def map {
  #(f, :Nil) -> :Nil,
  #(f, :Cons(x, xs)) -> :Cons(f(x), map(f, xs))
}
def main {
  let xs = :Cons(1, :Cons(2, :Cons(3, :Nil)));
  let xs1 = map({ x -> prim(add, x, 1) }, xs);
  map({ x -> prim(print, x) }, xs1);
  prim(print_trace, xs1)
}