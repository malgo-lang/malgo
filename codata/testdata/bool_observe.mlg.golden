(def bool (object (field false (seq (literal 0))) (field true (seq (literal 1)))))
(def flip (lambda (:p1) (case ((var :p1)) (clause (access (var b) false) (seq (access (var b) true))) (clause (access (var b) true) (seq (access (var b) false))))))
(def main (lambda (:p1) (case ((var :p1)) (clause (tuple) (seq (let (var x) (call (var flip) (access (var bool) true))) (prim print (var x)) (prim print_trace (var x)))))))
