(def add.0 (lambda (:p1.3) (lambda (:p2.4) (case ((var :p1.3) (var :p2.4)) (clause ((var x.5) (var y.6)) (seq (prim add (var x.5) (var y.6))))))))
(def mul.1 (lambda (:p1.7) (lambda (:p2.8) (case ((var :p1.7) (var :p2.8)) (clause ((var x.9) (var y.10)) (seq (prim mul (var x.9) (var y.10))))))))
(def main.2 (lambda () (seq (prim print (call (call (var add.0) (literal 1)) (call (call (var mul.1) (literal 2)) (literal 3)))))))
