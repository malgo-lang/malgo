(def zipWith.0 (lambda (:p1.4) (lambda (:p2.5) (lambda (:p3.6) (object (field head (case ((var :p1.4) (var :p2.5) (var :p3.6)) (clause ((var f.7) (var xs.8) (var ys.9)) (seq (call (call (var f.7) (access (var xs.8) head)) (access (var ys.9) head)))))) (field tail (case ((var :p1.4) (var :p2.5) (var :p3.6)) (clause ((var f.10) (var xs.11) (var ys.12)) (seq (call (call (call (var zipWith.0) (var f.10)) (access (var xs.11) tail)) (access (var ys.12) tail)))))))))))
(def +.1 (lambda (:p1.13) (lambda (:p2.14) (case ((var :p1.13) (var :p2.14)) (clause ((var x.15) (var y.16)) (seq (prim add (var x.15) (var y.16))))))))
(def fib.2 (object (field head (seq (literal 1))) (field tail (object (field head (seq (literal 1))) (field tail (seq (call (call (call (var zipWith.0) (lambda (:p1.17) (lambda (:p2.18) (case ((var :p1.17) (var :p2.18)) (clause ((var x.19) (var y.20)) (seq (call (call (var +.1) (var x.19)) (var y.20)))))))) (var fib.2)) (access (var fib.2) tail))))))))
(def main.3 (lambda () (seq (prim print (access (access (access (access (var fib.2) tail) tail) tail) head)))))
